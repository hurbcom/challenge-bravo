{
    "name": "challenge-bravo",
    "version": "0.0.1",
    "description": "",
    "author": "",
    "private": true,
    "license": "UNLICENSED",
    "scripts": {
        "prebuild": "rimraf dist",
        "build": "nest build",
        "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
        "prepare": "husky install",
        "start": "nest start",
        "start:dev": "nest start --watch",
        "setup:dev": "npm run typeorm:drop && npm run typeorm:drop:config && npm run typeorm:migration:run && npm run typeorm:seed",
        "start:debug": "nest start --debug --watch",
        "start:prod": "node dist/main",
        "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
        "test": "jest",
        "test:watch": "jest --watch",
        "test:cov": "jest --coverage",
        "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
        "test:e2e": "jest --config ./test/jest-e2e.json",
        "typeorm": "./node_modules/.bin/ts-node -r tsconfig-paths/register ./node_modules/typeorm/cli.js",
        "typeorm:create": "DB_SCHEMA=postgres ts-node --transpile-only ./node_modules/typeorm/cli.js query --config ./src/config/orm.config.js \"CREATE DATABASE \\\"${DB_SCHEMA}\\\"\"",
        "typeorm:drop": "ts-node --transpile-only ./node_modules/typeorm/cli.js schema:drop -d ./src/configs/orm.config.js",
        "typeorm:seed": "ts-node --transpile-only ./node_modules/typeorm-extension/dist/cli seed -d ./src/config/orm.config.ts",
        "typeorm:migration:run": "ts-node --transpile-only ./node_modules/typeorm/cli.js migration:run -d src/config/orm.config.ts",
        "typeorm:migration:revert": "ts-node --transpile-only ./node_modules/typeorm/cli.js migration:revert -d ./src/config/orm.config.ts",
        "typeorm:migration:generate": "ts-node --transpile-only ./node_modules/typeorm/cli.js migration:generate",
        "typeorm:migration:create": "ts-node --transpile-only ./node_modules/typeorm/cli.js migration:create"
    },
    "dependencies": {
        "@faker-js/faker": "^7.6.0",
        "@nestjs/axios": "^0.1.0",
        "@nestjs/common": "^8.0.0",
        "@nestjs/config": "^2.2.0",
        "@nestjs/core": "^8.0.0",
        "@nestjs/platform-express": "^8.0.0",
        "@nestjs/swagger": "^6.1.2",
        "@nestjs/typeorm": "^9.0.1",
        "axios": "^1.1.3",
        "cache-manager": "3.6.0",
        "cache-manager-redis-store": "2.0.0",
        "class-transformer": "^0.5.1",
        "class-validator": "^0.13.2",
        "dotenv": "^16.0.3",
        "pg": "^8.8.0",
        "reflect-metadata": "^0.1.13",
        "rimraf": "^3.0.2",
        "rxjs": "^7.2.0",
        "typeorm": "^0.3.10"
    },
    "devDependencies": {
        "@commitlint/cli": "^17.1.2",
        "@commitlint/config-conventional": "^17.1.0",
        "@nestjs/cli": "^8.0.0",
        "@nestjs/schematics": "^8.0.0",
        "@nestjs/testing": "^8.0.0",
        "@types/cache-manager": "^4.0.2",
        "@types/cache-manager-redis-store": "^2.0.1",
        "@types/express": "^4.17.13",
        "@types/jest": "27.5.0",
        "@types/node": "^16.0.0",
        "@types/supertest": "^2.0.11",
        "@typescript-eslint/eslint-plugin": "^5.0.0",
        "@typescript-eslint/parser": "^5.0.0",
        "eslint": "^8.25.0",
        "eslint-config-prettier": "^8.5.0",
        "eslint-plugin-import": "^2.26.0",
        "eslint-plugin-mdx": "^2.0.5",
        "eslint-plugin-prettier": "^4.0.0",
        "husky": "^8.0.1",
        "jest": "28.0.3",
        "k6": "^0.0.0",
        "lint-staged": "^13.0.3",
        "prettier": "^2.7.1",
        "source-map-support": "^0.5.20",
        "supertest": "^6.1.3",
        "ts-jest": "28.0.1",
        "ts-loader": "^9.2.3",
        "ts-node": "^10.0.0",
        "tsconfig-paths": "4.0.0",
        "typeorm-extension": "^2.1.15",
        "typeorm-seeding": "^1.6.1",
        "typescript": "^4.3.5"
    },
    "jest": {
        "moduleFileExtensions": [
            "js",
            "json",
            "ts"
        ],
        "rootDir": "src",
        "testRegex": ".*\\.spec\\.ts$",
        "transform": {
            "^.+\\.(t|j)s$": "ts-jest"
        },
        "collectCoverageFrom": [
            "**/*.(t|j)s"
        ],
        "coverageDirectory": "../coverage",
        "testEnvironment": "node"
    },
    "lint-staged": {
        "*.{js,jsx,ts,tsx}": [
            "eslint --fix"
        ]
    }
}
