<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Mvc</name>
  </assembly>
  <members>
    <member name="T:System.Web.Mvc.AcceptVerbsAttribute">
      <summary>Representa um atributo que especifica a quais verbos HTTP um método de ação responderá.</summary>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.String[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" /> usando uma lista de verbos HTTP para os quais o método de ação responderá.</summary>
      <param name="verbs">Os verbos HTTP para os quais o método de ação responderá.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="verbs" /> é nulo ou tem comprimento zero.</exception>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.#ctor(System.Web.Mvc.HttpVerbs)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.AcceptVerbsAttribute" /> usando os verbos HTTP para os quais o método de ação responderá.</summary>
      <param name="verbs">Os verbos HTTP para os quais o método de ação responderá.</param>
    </member>
    <member name="M:System.Web.Mvc.AcceptVerbsAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina se as informações sobre o método especificado são válidas para o contexto de controlador especificado.</summary>
      <returns>verdadeiro se as informações do método forem válidas; caso contrário, falso.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="methodInfo">As informações do método.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="controllerContext " /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.AcceptVerbsAttribute.Verbs">
      <summary>Obtém ou define a lista de verbos HTTP para os quais o método de ação responderá.</summary>
      <returns>A lista de verbos HTTP para os quais o método de ação responderá.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionDescriptor">
      <summary>Fornece informações sobre um método de ação, como seu nome, controlador, parâmetros, atributos e filtros.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ActionDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ActionName">
      <summary>Obtém o nome do método de ação.</summary>
      <returns>O nome do método de ação.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.ControllerDescriptor">
      <summary>Obtém o descritor do controlador.</summary>
      <returns>O descritor do controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Executa o método de ação usando os parâmetros e contexto de controlador especificados.</summary>
      <returns>O resultado da execução do método de ação.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="parameters">Os parâmetros do método de ação.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Retorna uma matriz de atributos personalizados definidos para esse membro, excluindo atributos nomeados.</summary>
      <returns>Uma matriz de atributos personalizados ou uma matriz vazia se não existirem atributos personalizados.</returns>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
      <exception cref="T:System.TypeLoadException">Não é possível carregar o tipo de atributo personalizado.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Há mais de um atributo do tipo <paramref name="attributeType" /> definido por este membro.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Retorna uma matriz de atributos personalizados definidos para esse membro, identificados por tipo.</summary>
      <returns>Uma matriz de atributos personalizados ou uma matriz vazia se não existirem atributos personalizados do tipo especificado.</returns>
      <param name="attributeType">O tipo dos atributos personalizados.</param>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
      <exception cref="T:System.TypeLoadException">Não é possível carregar o tipo de atributo personalizado.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Há mais de um atributo do tipo <paramref name="attributeType" /> definido por este membro.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="attritubeType" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Obtém os atributos do filtro.</summary>
      <returns>Os atributos do filtro.</returns>
      <param name="useCache">verdadeiro para usar em cache; caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetFilters">
      <summary>Retorna os filtros associados a este método de ação.</summary>
      <returns>Os filtros associados a este método de ação.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetParameters">
      <summary>Retorna os parâmetros do método de ação.</summary>
      <returns>Os parâmetros do método de ação.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.GetSelectors">
      <summary>Retorna os seletores do método de ação.</summary>
      <returns>Os seletores do método de ação.</returns>
    </member>
    <member name="M:System.Web.Mvc.ActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Determina se uma ou mais instâncias do tipo de atributo especificado são definidas para esse membro.</summary>
      <returns>verdadeiro se <paramref name="attributeType" /> estiver definido para este membro; caso contrário, falso.</returns>
      <param name="attributeType">O tipo do atributo personalizado.</param>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="attritubeType" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionDescriptor.UniqueId">
      <summary>Obtém a ID exclusiva para o descritor da ação usando inicialização lenta.</summary>
      <returns>A ID exclusiva.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutedContext">
      <summary>Fornece o contexto para o método ActionExecuted da classe <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ActionExecutedContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Boolean,System.Exception)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ActionExecutedContext" />.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionDescriptor">O descritor do método de ação.</param>
      <param name="canceled">verdadeiro se a ação for cancelada.</param>
      <param name="exception">O objeto de exceção.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="actionDescriptor" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ActionDescriptor">
      <summary>Obtém ou define o descritor da ação.</summary>
      <returns>O descritor da ação.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Canceled">
      <summary>Obtém ou define um valor que indica que este objeto <see cref="T:System.Web.Mvc.ActionExecutedContext" /> foi cancelado.</summary>
      <returns>verdadeiro se o contexto foi cancelado; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Exception">
      <summary>Obtém ou define a exceção que ocorre durante a execução do método de ação, se houver.</summary>
      <returns>A exceção que ocorre durante a execução do método de ação.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.ExceptionHandled">
      <summary>Obtém ou define um valor que indica se a exceção foi tratada.</summary>
      <returns>verdadeiro se a exceção for tratada; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutedContext.Result">
      <summary>Obtém ou define o resultado retornado pelo método de ação.</summary>
      <returns>O resultado retornado pelo método de ação.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionExecutingContext">
      <summary>Fornece o contexto para o método ActionExecuting da classe <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ActionExecutingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ActionExecutingContext" /> usando o contexto do controlador, descritor da ação e parâmetros de método de ação especificados.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
      <param name="actionParameters">Os parâmetros de método de ação.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="ActionParameters" /> ou parâmetro <paramref name="actionDescriptor" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionDescriptor">
      <summary>Obtém ou define o descritor da ação.</summary>
      <returns>O descritor da ação.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.ActionParameters">
      <summary>Obtém ou define os parâmetros de método de ação.</summary>
      <returns>Os parâmetros de método de ação.</returns>
    </member>
    <member name="P:System.Web.Mvc.ActionExecutingContext.Result">
      <summary>Obtém ou define o resultado retornado pelo método de ação.</summary>
      <returns>O resultado retornado pelo método de ação.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionFilterAttribute">
      <summary>Representa a classe base para atributos de filtro.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Chamado pela estrutura do ASP.NET MVC após o método de ação ser executado.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Chamado pela estrutura do ASP.NET MVC antes de o método de ação ser executado.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Chamado pela estrutura do ASP.NET MVC após o resultado da ação ser executado.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Chamado pela estrutura do ASP.NET MVC antes de o resultado da ação ser executado.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionMethodSelectorAttribute">
      <summary>Representa um atributo usado para influenciar a seleção de um método de ação.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ActionMethodSelectorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionMethodSelectorAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina se a seleção do método de ação é válida para o contexto de controlador especificado.</summary>
      <returns>verdadeiro se a seleção do método de ação for válida para o contexto de controlador especificado; caso contrário, falso.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="methodInfo">Informações sobre o método de ação.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionNameAttribute">
      <summary>Representa um atributo usado para o nome de uma ação.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.#ctor(System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ActionNameAttribute" />.</summary>
      <param name="name">Nome da ação.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.ActionNameAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>Determina se o nome da ação é válido no contexto de controlador especificado.</summary>
      <returns>verdadeiro se o nome da ação for válido no contexto de controlador especificado; caso contrário, falso.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionName">O nome da ação.</param>
      <param name="methodInfo">Informações sobre o método de ação.</param>
    </member>
    <member name="P:System.Web.Mvc.ActionNameAttribute.Name">
      <summary>Obtém ou define o nome da ação.</summary>
      <returns>O nome da ação.</returns>
    </member>
    <member name="T:System.Web.Mvc.ActionNameSelectorAttribute">
      <summary>Representa um atributo que afeta a seleção de um método de ação.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ActionNameSelectorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionNameSelectorAttribute.IsValidName(System.Web.Mvc.ControllerContext,System.String,System.Reflection.MethodInfo)">
      <summary>Determina se o nome da ação é válido no contexto de controlador especificado.</summary>
      <returns>verdadeiro se o nome da ação for válido no contexto de controlador especificado; caso contrário, falso.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionName">O nome da ação.</param>
      <param name="methodInfo">Informações sobre o método de ação.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionResult">
      <summary>Representa o resultado de um método de ação.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ActionResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Habilita o processamento do resultado de um método de ação por um tipo personalizado que herda da classe <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">O contexto no qual o resultado é executado.As informações de contexto incluem o controlador, o conteúdo HTTP, o contexto de solicitação e os dados de rota.</param>
    </member>
    <member name="T:System.Web.Mvc.ActionSelector">
      <summary>Representa um delegado que contém a lógica para selecionar um método de ação.</summary>
    </member>
    <member name="T:System.Web.Mvc.AdditionalMetadataAttribute">
      <summary>Fornece uma classe que implementa a interface <see cref="T:System.Web.Mvc.IMetadataAware" /> a fim de suportar metadados adicionais. </summary>
    </member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.#ctor(System.String,System.Object)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.AdditionalMetadataAttribute" />.</summary>
      <param name="name">O nome dos metadados do modelo.</param>
      <param name="value">O valor dos metadados do modelo.</param>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Name">
      <summary>Obtém o nome do atributo de metadados adicional.</summary>
      <returns>O nome do atributo de metadados adicional.</returns>
    </member>
    <member name="M:System.Web.Mvc.AdditionalMetadataAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>Fornece metadados para o processo de criação de metadados do modelo.</summary>
      <param name="metadata">Os metadados.</param>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.TypeId">
      <summary>Obtém o tipo do atributo de metadados adicional.</summary>
      <returns>O tipo do atributo de metadados adicional.</returns>
    </member>
    <member name="P:System.Web.Mvc.AdditionalMetadataAttribute.Value">
      <summary>Obtém o valor do atributo de metadados adicional.</summary>
      <returns>O valor do atributo de metadados adicional.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxHelper">
      <summary>Representa o suporte para renderizar HTML em cenários AJAX em uma exibição.</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.AjaxHelper" /> usando o contexto da exibição e o contêiner de dados de exibição especificados.</summary>
      <param name="viewContext">O contexto da exibição.</param>
      <param name="viewDataContainer">O contêiner de dados de exibição.</param>
      <exception cref="T:System.ArgumentNullException">Um ou ambos os parâmetros é/são nulo(s).</exception>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.AjaxHelper" /> ao usar o contexto da exibição, contêiner de dados de exibição e coleção de rotas especificados.</summary>
      <param name="viewContext">O contexto da exibição.</param>
      <param name="viewDataContainer">O contêiner de dados de exibição.</param>
      <param name="routeCollection">A coleção de rotas de URL.</param>
      <exception cref="T:System.ArgumentNullException">Um ou mais parâmetros são nulos.</exception>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.GlobalizationScriptPath">
      <summary>Obtém ou define o caminho raiz para o local a ser usado para os arquivos de script de globalização.</summary>
      <returns>O local da pasta em que os arquivos de script de globalização estão armazenados.O local padrão é "~/Scripts/Globalization".</returns>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper.JavaScriptStringEncode(System.String)">
      <summary>Serializa a mensagem especificada e retorna a cadeia de caracteres formatada como JSON resultante.</summary>
      <returns>A mensagem serializada como cadeia de caracteres formatada como JSON.</returns>
      <param name="message">A mensagem a ser serializada.</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.RouteCollection">
      <summary>Obtém uma coleção de rotas URL para o aplicativo.</summary>
      <returns>A coleção de rotas para o aplicativo.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewBag">
      <summary>Obtém a ViewBag.</summary>
      <returns>A ViewBag.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewContext">
      <summary>Obtém as informações de contexto sobre a exibição.</summary>
      <returns>O contexto da exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewData">
      <summary>Obtém o dicionário atual de dados de exibição.</summary>
      <returns>O dicionário de dados de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper.ViewDataContainer">
      <summary>Obtém o contêiner de dados de exibição.</summary>
      <returns>O contêiner de dados de exibição.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxHelper`1">
      <summary>Representa o suporte para renderizar HTML em cenários AJAX em uma exibição fortemente tipada.</summary>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.AjaxHelper`1" /> ao usar o contexto da exibição e contêiner de dados de exibição especificados.</summary>
      <param name="viewContext">O contexto da exibição.</param>
      <param name="viewDataContainer">O contêiner de dados de exibição.</param>
    </member>
    <member name="M:System.Web.Mvc.AjaxHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.AjaxHelper`1" /> usando o contexto da exibição, o contêiner de dados de exibição e a coleção de rotas URL especificados.</summary>
      <param name="viewContext">O contexto da exibição.</param>
      <param name="viewDataContainer">O contêiner de dados de exibição.</param>
      <param name="routeCollection">A coleção de rotas de URL.</param>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper`1.ViewBag">
      <summary>Obtém a ViewBag.</summary>
      <returns>A ViewBag.</returns>
    </member>
    <member name="P:System.Web.Mvc.AjaxHelper`1.ViewData">
      <summary>Obtém a versão fortemente tipada do dicionário de dados de exibição.</summary>
      <returns>O dicionário de dados fortemente tipado da exibição.</returns>
    </member>
    <member name="T:System.Web.Mvc.AjaxRequestExtensions">
      <summary>Representa uma classe que estende a classe <see cref="T:System.Web.HttpRequestBase" /> adicionando a capacidade de determinar se uma solicitação HTTP é uma solicitação AJAX.</summary>
    </member>
    <member name="M:System.Web.Mvc.AjaxRequestExtensions.IsAjaxRequest(System.Web.HttpRequestBase)">
      <summary>Determina se a solicitação HTTP especificada é uma solicitação AJAX.</summary>
      <returns>verdadeiro se a solicitação HTTP especificada for uma solicitação AJAX; caso contrário, falso.</returns>
      <param name="request">A solicitação HTTP.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="request" /> é nulo (Nada no Visual Basic).</exception>
    </member>
    <member name="T:System.Web.Mvc.AllowAnonymousAttribute">
      <summary>Representa um atributo que marca controladores e ações para ignorar <see cref="T:System.Web.Mvc.AuthorizeAttribute" /> durante a autorização.</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowAnonymousAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.AllowAnonymousAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.AllowHtmlAttribute">
      <summary>Permite que uma solicitação inclua marcações HTML durante a associação de modelos, ignorando a validação da solicitação para a propriedade.(Recomenda-se que o aplicativo verifique explicitamente todos os modelos em que for desabilitada a validação de solicitação para evitar que o script seja explorado.)</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowHtmlAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.AllowHtmlAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AllowHtmlAttribute.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>Este método é compatível com a infraestrutura de validação ASP.NET MVC e não se destina a ser usado diretamente de seu código.</summary>
      <param name="metadata">Os metadados do modelo.</param>
    </member>
    <member name="T:System.Web.Mvc.AreaReference">
      <summary>Controla a interpretação de um nome de controlador ao construir um <see cref="T:System.Web.Mvc.RemoteAttribute" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.AreaReference.UseCurrent">
      <summary>Encontre o controlador na área atual.</summary>
    </member>
    <member name="F:System.Web.Mvc.AreaReference.UseRoot">
      <summary>Encontre o controlador na área raiz.</summary>
    </member>
    <member name="T:System.Web.Mvc.AreaRegistration">
      <summary>Fornece uma maneira de registrar uma ou mais áreas em um aplicativo ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.AreaRegistration" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistration.AreaName">
      <summary>Obtém o nome da área a ser registrada.</summary>
      <returns>O nome da área a ser registrada.</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas">
      <summary>Registra todas as áreas em um aplicativo ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterAllAreas(System.Object)">
      <summary>Registra todas as áreas em um aplicativo ASP.NET MVC, usando as informações definidas pelo usuário especificadas.</summary>
      <param name="state">Um objeto que contém informações definidas pelo usuário a serem passadas para a área.</param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistration.RegisterArea(System.Web.Mvc.AreaRegistrationContext)">
      <summary>Registra uma área em um aplicativo ASP.NET MVC usando as informações de contexto da área especificada.</summary>
      <param name="context">Encapsula as informações necessárias para registrar a área.</param>
    </member>
    <member name="T:System.Web.Mvc.AreaRegistrationContext">
      <summary>Encapsula as informações necessárias para registrar uma área em um aplicativo MVC ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.AreaRegistrationContext" /> usando o nome de área e a coleção de rotas especificados.</summary>
      <param name="areaName">O nome da área a ser registrada.</param>
      <param name="routes">A coleção de rotas para o aplicativo.</param>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.#ctor(System.String,System.Web.Routing.RouteCollection,System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.AreaRegistrationContext" /> usando o nome de área, a coleção de rotas e os dados definidos pelo usuário especificados.</summary>
      <param name="areaName">O nome da área a ser registrada.</param>
      <param name="routes">A coleção de rotas para o aplicativo.</param>
      <param name="state">Um objeto que contém informações definidas pelo usuário a serem passadas para a área.</param>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.AreaName">
      <summary>Obtém o nome da área a ser registrada.</summary>
      <returns>O nome da área a ser registrada.</returns>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String)">
      <summary>Mapeia a URL especificada e a associa à área especificada pela propriedade <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="name">O nome da rota.</param>
      <param name="url">O padrão de URL para a rota.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="url" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object)">
      <summary>Mapeia a rota de URL especificada e a associa à área especificada pela propriedade <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, usando os valores padrão de rota especificados.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="name">O nome da rota.</param>
      <param name="url">O padrão de URL para a rota.</param>
      <param name="defaults">Um objeto que contém valores de rota padrão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="url" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object)">
      <summary>Mapeia a rota de URL especificada e a associa à área especificada pela propriedade <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, usando os valores padrão de rota e a restrição especificados.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="name">O nome da rota.</param>
      <param name="url">O padrão de URL para a rota.</param>
      <param name="defaults">Um objeto que contém valores de rota padrão.</param>
      <param name="constraints">Um conjunto de expressões que especificam valores válidos para um parâmetro de URL.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="url" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>Mapeia a rota de URL especificada e a associa à área especificada pela propriedade <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, usando os valores padrão de rota, as restrições e os namespaces especificados.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="name">O nome da rota.</param>
      <param name="url">O padrão de URL para a rota.</param>
      <param name="defaults">Um objeto que contém valores de rota padrão.</param>
      <param name="constraints">Um conjunto de expressões que especificam valores válidos para um parâmetro de URL.</param>
      <param name="namespaces">Um conjunto enumerável de namespaces para o aplicativo.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="url" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.Object,System.String[])">
      <summary>Mapeia a rota de URL especificada e a associa à área especificada pela propriedade <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, usando os valores padrão de rota e os namespaces especificados.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="name">O nome da rota.</param>
      <param name="url">O padrão de URL para a rota.</param>
      <param name="defaults">Um objeto que contém valores de rota padrão.</param>
      <param name="namespaces">Um conjunto enumerável de namespaces para o aplicativo.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="url" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.AreaRegistrationContext.MapRoute(System.String,System.String,System.String[])">
      <summary>Mapeia a rota de URL especificada e a associa à área especificada pela propriedade <see cref="P:System.Web.Mvc.AreaRegistrationContext.AreaName" />, usando os namespaces especificados.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="name">O nome da rota.</param>
      <param name="url">O padrão de URL para a rota.</param>
      <param name="namespaces">Um conjunto enumerável de namespaces para o aplicativo.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="url" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Namespaces">
      <summary>Obtém os namespaces para o aplicativo.</summary>
      <returns>Um conjunto enumerável de namespaces para o aplicativo.</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.Routes">
      <summary>Obtém uma coleção de rotas definidas para o aplicativo.</summary>
      <returns>Uma coleção de rotas definidas para o aplicativo.</returns>
    </member>
    <member name="P:System.Web.Mvc.AreaRegistrationContext.State">
      <summary>Obtém um objeto que contém informações definidas pelo usuário a serem passadas para a área.</summary>
      <returns>Um objeto que contém informações definidas pelo usuário a serem passadas para a área.</returns>
    </member>
    <member name="T:System.Web.Mvc.AssociatedMetadataProvider">
      <summary>Fornece uma classe abstrata para implementar um provedor de metadados.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.#ctor">
      <summary>Chamado a partir de construtores em uma classe derivada para inicializar a classe <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Quando substituído em uma classe derivada, cria os metadados do modelo para a propriedade.</summary>
      <returns>Os metadados do modelo para a propriedade.</returns>
      <param name="attributes">O conjunto de atributos.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="modelAccessor">O acessador do modelo.</param>
      <param name="modelType">O tipo do modelo.</param>
      <param name="propertyName">O nome da propriedade.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.FilterAttributes(System.Type,System.ComponentModel.PropertyDescriptor,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Obtém uma lista de atributos.</summary>
      <returns>Uma lista de atributos.</returns>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="propertyDescriptor">O descritor da propriedade.</param>
      <param name="attributes">O contêiner do atributo.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Retorna uma lista de propriedades para o modelo.</summary>
      <returns>Uma lista de propriedades para o modelo.</returns>
      <param name="container">O contêiner do modelo.</param>
      <param name="containerType">O tipo do contêiner.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)">
      <summary>Retorna os metadados para a propriedade especificada usando o tipo de contêiner e o descritor da propriedade.</summary>
      <returns>Os metadados para a propriedade especificada usando o tipo de contêiner e o descritor da propriedade.</returns>
      <param name="modelAccessor">O acessador do modelo.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="propertyDescriptor">O descritor da propriedade</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Retorna os metadados para a propriedade especificada usando o tipo de contêiner e o nome da propriedade.</summary>
      <returns>Os metadados para a propriedade especificada usando o tipo de contêiner e o nome da propriedade.</returns>
      <param name="modelAccessor">O acessador do modelo.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="propertyName">O nome da propriedade.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Retorna os metadados para a propriedade especificada usando o tipo do modelo.</summary>
      <returns>Os metadados para a propriedade especificada usando o tipo do modelo.</returns>
      <param name="modelAccessor">O acessador do modelo.</param>
      <param name="modelType">O tipo do modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedMetadataProvider.GetTypeDescriptor(System.Type)">
      <summary>Retorna o descritor do tipo a partir do tipo especificado.</summary>
      <returns>O descritor do tipo.</returns>
      <param name="type">O tipo.</param>
    </member>
    <member name="T:System.Web.Mvc.AssociatedValidatorProvider">
      <summary>Fornece uma classe abstrata para classes que implementam um provedor de validação.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.#ctor">
      <summary>Chamado a partir de construtores em classes derivadas para inicializar a classe <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetTypeDescriptor(System.Type)">
      <summary>Obtém um descritor de tipo do tipo especificado.</summary>
      <returns>Um descritor de tipo do tipo especificado.</returns>
      <param name="type">O tipo do provedor de validação.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Obtém os validadores para o modelo utilizando os metadados e o contexto de controlador.</summary>
      <returns>Os validadores para o modelo.</returns>
      <param name="metadata">Os metadados.</param>
      <param name="context">O contexto do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.AssociatedValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Obtém os validadores para o modelo utilizando os metadados, o contexto do controlador e uma lista de atributos.</summary>
      <returns>Os validadores para o modelo.</returns>
      <param name="metadata">Os metadados.</param>
      <param name="context">O contexto do controlador.</param>
      <param name="attributes">A lista de atributos.</param>
    </member>
    <member name="T:System.Web.Mvc.AsyncController">
      <summary>Fornecido para compatibilidade com versões anteriores do ASP.NET MVC 3.</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncController.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.AsyncController" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.AsyncTimeoutAttribute">
      <summary>Representa um atributo usado para definir o valor de tempo limite, em milissegundos, para um método assíncrono.</summary>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.#ctor(System.Int32)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" />.</summary>
      <param name="duration">O valor de tempo limite, em milissegundos.</param>
    </member>
    <member name="P:System.Web.Mvc.AsyncTimeoutAttribute.Duration">
      <summary>Obtém a duração do tempo limite, em milissegundos.</summary>
      <returns>A duração do tempo limite, em milissegundos.</returns>
    </member>
    <member name="M:System.Web.Mvc.AsyncTimeoutAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Chamado pelo ASP.NET antes de o método de ação assíncrono ser executado.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="T:System.Web.Mvc.AuthorizationContext">
      <summary>Encapsula as informações necessárias para usar um atributo <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.AuthorizationContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.AuthorizationContext" /> usando o contexto do controlador especificado.</summary>
      <param name="controllerContext">O contexto no qual o resultado é executado.As informações de contexto incluem o controlador, o conteúdo HTTP, o contexto de solicitação e os dados de rota.</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizationContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.AuthorizationContext" /> usando o contexto do controlador e descritor de ação especificados.</summary>
      <param name="controllerContext">O contexto no qual o resultado é executado.As informações de contexto incluem o controlador, o conteúdo HTTP, o contexto de solicitação e os dados de rota.</param>
      <param name="actionDescriptor">Um objeto que fornece informações sobre um método de ação, como seu nome, controlador, parâmetros, atributos e filtros.</param>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.ActionDescriptor">
      <summary>Fornece informações sobre o método de ação que é marcado pelo atributo <see cref="T:System.Web.Mvc.AuthorizeAttribute" />, como seu nome, controlador, parâmetros, atributos e filtros.</summary>
      <returns>O descritor de ação para o método de ação que é marcado pelo atributo <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizationContext.Result">
      <summary>Obtém ou define o resultado retornado por um método de ação.</summary>
      <returns>O resultado retornado por um método de ação.</returns>
    </member>
    <member name="T:System.Web.Mvc.AuthorizeAttribute">
      <summary>Especifica que o acesso a um controlador ou método de ação é restrito aos usuários que atendem ao requisito de autorização.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.AuthorizeCore(System.Web.HttpContextBase)">
      <summary>Quando substituído, fornece um ponto de entrada para verificações de autorização personalizadas.</summary>
      <returns>verdadeiro se o usuário estiver autorizado; caso contrário, falso.</returns>
      <param name="httpContext">O contexto HTTP, que encapsula todas as informações específicas a HTTP sobre uma solicitação HTTP individual.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="httpContext" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>Processa solicitações HTTP cuja autorização falhou.</summary>
      <param name="filterContext">Encapsula as informações para usar <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.O objeto <paramref name="filterContext" /> contém o controlador, o contexto HTTP, o contexto da solicitação, o resultado de ação e os dados de rota.</param>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Chamado quando um processo solicita autorização.</summary>
      <param name="filterContext">O contexto do filtro, que encapsula as informações para usar o <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="filterContext" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.AuthorizeAttribute.OnCacheAuthorization(System.Web.HttpContextBase)">
      <summary>Chamado quando o módulo de cache solicita autorização.</summary>
      <returns>Uma referência para o status de validação.</returns>
      <param name="httpContext">O contexto HTTP, que encapsula todas as informações específicas a HTTP sobre uma solicitação HTTP individual.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="httpContext" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Roles">
      <summary>Obtém ou define as funções de usuário com autorização de acesso ao controlador ou método de ação.</summary>
      <returns>As funções de usuário com autorização de acesso ao controlador ou método de ação.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.TypeId">
      <summary>Obtém um identificador exclusivo para este atributo.</summary>
      <returns>O identificador exclusivo para este atributo.</returns>
    </member>
    <member name="P:System.Web.Mvc.AuthorizeAttribute.Users">
      <summary>Obtém ou define os usuários com autorização de acesso ao controlador ou método de ação.</summary>
      <returns>Os usuários com autorização de acesso ao controlador ou método de ação.</returns>
    </member>
    <member name="T:System.Web.Mvc.BindAttribute">
      <summary>Representa um atributo usado para fornecer detalhes sobre como deve ocorrer a associação do modelo a um parâmetro.</summary>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.BindAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Exclude">
      <summary>Obtém ou define uma lista delimitada por vírgulas dos nomes de propriedades para as quais a associação não é permitida.</summary>
      <returns>A lista de exclusões.</returns>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Include">
      <summary>Obtém ou define uma lista delimitada por vírgulas dos nomes de propriedades para as quais a associação é permitida.</summary>
      <returns>A lista de inclusões.</returns>
    </member>
    <member name="M:System.Web.Mvc.BindAttribute.IsPropertyAllowed(System.String)">
      <summary>Determina se a propriedade especificada é permitida.</summary>
      <returns>verdadeiro se a propriedade especificada for permitida; caso contrário, falso.</returns>
      <param name="propertyName">O nome da propriedade.</param>
    </member>
    <member name="P:System.Web.Mvc.BindAttribute.Prefix">
      <summary>Obtém ou define o prefixo a ser usado quando a marcação for renderizada para associar a um argumento de ação ou a uma propriedade de modelo.</summary>
      <returns>O prefixo a ser usado.</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerCompiledView">
      <summary>Representa a classe básica para exibições compiladas pela classe BuildManager antes de serem renderizadas por um mecanismo de exibição.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.BuildManagerCompiledView" /> usando o contexto do controlador e o caminho de exibição especificados.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="viewPath">O caminho da exibição.</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.BuildManagerCompiledView" /> usando o contexto do controlador, o caminho de exibição e o ativador da página de exibição especificados.</summary>
      <param name="controllerContext">As informações de contexto para o controlador atual.Essas informações incluem o contexto HTTP, o contexto de solicitação, os dados de rota, o contexto de exibição da ação pai e outras.</param>
      <param name="viewPath">O caminho para a exibição que será renderizada.</param>
      <param name="viewPageActivator">O objeto responsável por criar dinamicamente a página de exibição no momento de execução. </param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="controllerContext" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="viewPath" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>Renderiza o contexto de exibição especificado usando o objeto gravador especificado.</summary>
      <param name="viewContext">As informações relacionadas à renderização de uma exibição, tais como dados de exibição, dados temporários e contexto de formulário.</param>
      <param name="writer">O objeto gravador.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="viewContext" /> é nulo.</exception>
      <exception cref="T:SInvalidOperationException">Uma instância do tipo de exibição não pôde ser criada.</exception>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerCompiledView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Quando substituído em uma classe derivada, renderiza o contexto de exibição especificado usando o objeto gravador especificado e a instância do objeto.</summary>
      <param name="viewContext">As informações relacionadas à renderização de uma exibição, tais como dados de exibição, dados temporários e contexto de formulário.</param>
      <param name="writer">O objeto gravador.</param>
      <param name="instance">Um objeto que contém informações adicionais que podem ser usadas na exibição.</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerCompiledView.ViewPath">
      <summary>Obtém ou define o caminho de exibição.</summary>
      <returns>O caminho da exibição.</returns>
    </member>
    <member name="T:System.Web.Mvc.BuildManagerViewEngine">
      <summary>Fornece uma classe base para mecanismos de exibição.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.BuildManagerViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.BuildManagerViewEngine" /> usando o ativador especificado da página de exibição.</summary>
      <param name="viewPageActivator">O ativador da página de exibição.</param>
    </member>
    <member name="M:System.Web.Mvc.BuildManagerViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Obtém um valor que indica se um arquivo existe no sistema de arquivos virtual especificado (caminho).</summary>
      <returns>verdadeiro se o arquivo existir no sistema de arquivos virtual; caso contrário, falso.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="virtualPath">O caminho virtual.</param>
    </member>
    <member name="P:System.Web.Mvc.BuildManagerViewEngine.IsPrecompiledNonUpdateableSite"></member>
    <member name="P:System.Web.Mvc.BuildManagerViewEngine.ViewPageActivator">
      <summary>Obtém o ativador da página de exibição.</summary>
      <returns>O ativador da página de exibição.</returns>
    </member>
    <member name="T:System.Web.Mvc.ByteArrayModelBinder">
      <summary>Mapeia uma solicitação de navegador para uma matriz de bytes.</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ByteArrayModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ByteArrayModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Associa o modelo usando o contexto de controlador e o contexto de associação especificados.</summary>
      <returns>O objeto de dados associados.Implementa<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" /></returns>
      <param name="controllerContext">O contexto no qual o controlador opera.As informações de contexto incluem o controlador, o conteúdo HTTP, o contexto de solicitação e os dados de rota.</param>
      <param name="bindingContext">O contexto no qual o modelo está associado.O contexto inclui informações como o objeto do modelo, nome do modelo, tipo de modelo, filtro de propriedade e provedor de valor.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="bindingContext" /> é nulo.</exception>
    </member>
    <member name="T:System.Web.Mvc.CachedAssociatedMetadataProvider`1">
      <summary>Fornece uma classe abstrata para implementar um provedor de metadados armazenado em cache.</summary>
      <typeparam name="TModelMetadata"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.CachedAssociatedMetadataProvider`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CacheItemPolicy">
      <summary>Obtém a política do item de cache.</summary>
      <returns>A política do item de cache.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CacheKeyPrefix">
      <summary>Obtém o prefixo da chave de cache.</summary>
      <returns>O prefixo da chave de cache.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Quando substituído em uma classe derivada, cria os metadados armazenados em cache do modelo para a propriedade.</summary>
      <returns>Os metadados armazenados em cache do modelo para a propriedade.</returns>
      <param name="attributes">Os atributos.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="modelAccessor">O acessador do modelo.</param>
      <param name="modelType">O tipo de modelo.</param>
      <param name="propertyName">O nome da propriedade.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadataFromPrototype(`0,System.Func{System.Object})">
      <summary>Cria os metadados do protótipo, aplicando o protótipo e o acesso ao modelo para produzir os metadados finais.</summary>
      <returns>Os metadados do protótipo.</returns>
      <param name="prototype">O protótipo.</param>
      <param name="modelAccessor">O acessador do modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Cria um protótipo de metadados.</summary>
      <returns>O protótipo de metadados.</returns>
      <param name="attributes">Os atributos.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="modelType">O tipo de modelo.</param>
      <param name="propertyName">O nome da propriedade.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Obtém os metadados para as propriedades.</summary>
      <returns>Os metadados para as propriedades.</returns>
      <param name="container">O contêiner.</param>
      <param name="containerType">O tipo do contêiner.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.ComponentModel.PropertyDescriptor)">
      <summary>Retorna os metadados para a propriedade especificada.</summary>
      <returns>Os metadados para a propriedade especificada.</returns>
      <param name="modelAccessor">O acessador do modelo.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="propertyDescriptor">O descritor da propriedade.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Retorna os metadados para a propriedade especificada.</summary>
      <returns>Os metadados para a propriedade especificada.</returns>
      <param name="modelAccessor">O acessador do modelo.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="propertyName">O nome da propriedade.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedAssociatedMetadataProvider`1.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Retorna os metadados armazenados em cache para a propriedade especificada usando o tipo do modelo.</summary>
      <returns>Os metadados armazenados em cache para a propriedade especificada usando o tipo do modelo.</returns>
      <param name="modelAccessor">O acessador do modelo.</param>
      <param name="modelType">O tipo do contêiner.</param>
    </member>
    <member name="P:System.Web.Mvc.CachedAssociatedMetadataProvider`1.PrototypeCache">
      <summary>Obtém o cache do protótipo.</summary>
      <returns>O cache do protótipo.</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes">
      <summary>Fornece um contêiner para armazenar atributos <see cref="N:System.ComponentModel.DataAnnotations" /> em cache.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.#ctor(System.Attribute[])">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes" />.</summary>
      <param name="attributes">Os atributos.</param>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DataType">
      <summary>Obtém o tipo de dados.</summary>
      <returns>O tipo de dados.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Display">
      <summary>Obtém a exibição.</summary>
      <returns>A exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayColumn">
      <summary>Obtém a coluna de exibição.</summary>
      <returns>A coluna de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayFormat">
      <summary>Obtém o formato de exibição.</summary>
      <returns>O formato de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.DisplayName">
      <summary>Obtém o nome de exibição.</summary>
      <returns>O nome de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Editable">
      <summary>Indica se o campo de dados é editável.</summary>
      <returns>verdadeiro se o campo for editável; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.HiddenInput">
      <summary>Obtém a entrada oculta.</summary>
      <returns>A entrada oculta.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.ReadOnly">
      <summary>Indica se o campo de dados é só de leitura.</summary>
      <returns>verdadeiro se o campo for só de leitura; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.Required">
      <summary>Indica se o campo de dados é necessário.</summary>
      <returns>verdadeiro se o campo for necessário; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.ScaffoldColumn">
      <summary>Indica se o campo de dados é scaffold.</summary>
      <returns>verdadeiro se o campo for scaffold; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedDataAnnotationsMetadataAttributes.UIHint">
      <summary>Obtém a dica para a UI.</summary>
      <returns>A dica para a UI.</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata">
      <summary>Fornece um contêiner para o cache <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadata" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" /> usando o acessador de modelo e protótipo especificados.</summary>
      <param name="prototype">O protótipo.</param>
      <param name="modelAccessor">O acessador do modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" /> usando o provedor, tipo de contêiner, tipo de modelo, nome da propriedade e os atributos.</summary>
      <param name="provider">O provedor.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="modelType">O tipo de modelo.</param>
      <param name="propertyName">O nome da propriedade.</param>
      <param name="attributes">Os atributos.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeConvertEmptyStringToNull">
      <summary>Obtém um valor que indica se cadeias de caracteres vazias que são postadas em formulários devem ser convertidas em Nada.Se o valor estiver armazenado em cache, o valor em cache é retornado; caso contrário o valor é recuperado a partir dos metadados do modelo e armazenado em cache.</summary>
      <returns>Um valor que indica se cadeias de caracteres vazias que são postadas em formulários devem ser convertidas em Nada. </returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDataTypeName">
      <summary>Obtém as informações meta sobre o tipo de dados.Se o valor estiver armazenado em cache, o valor em cache é retornado; caso contrário o valor é recuperado a partir dos metadados do modelo e armazenado em cache.</summary>
      <returns>Informações meta sobre o tipo de dados.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDescription">
      <summary>Obtém a descrição do modelo.Se o valor estiver armazenado em cache, o valor em cache é retornado; caso contrário o valor é recuperado a partir dos metadados do modelo e armazenado em cache.</summary>
      <returns>A descrição do modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDisplayFormatString">
      <summary>Obtém a cadeia de caracteres de formato de exibição do modelo.Se o valor estiver armazenado em cache, o valor em cache é retornado; caso contrário o valor é recuperado a partir dos metadados do modelo e armazenado em cache.</summary>
      <returns>A cadeia de caracteres de formato de exibição do modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeDisplayName">
      <summary>Obtém o nome de exibição do modelo.Se o valor estiver armazenado em cache, o valor em cache é retornado; caso contrário o valor é recuperado a partir dos metadados do modelo e armazenado em cache.</summary>
      <returns>O nome de exibição do modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeEditFormatString">
      <summary>Obtém a cadeia de caracteres de formato de edição do modelo.Se o valor estiver armazenado em cache, o valor em cache é retornado; caso contrário o valor é recuperado a partir dos metadados do modelo e armazenado em cache.</summary>
      <returns>A cadeia de caracteres de formato de edição do modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeHasNonDefaultEditFormat">
      <summary>Obtém um valor que indica se o modelo utiliza um formato de edição não padrão.</summary>
      <returns>Um valor que indica se o formato de edição não padrão é utilizado.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeHideSurroundingHtml">
      <summary>Obtém um valor que indica se o objeto de modelo deve ser renderizado usando-se elementos HTML associados.Obtém um valor que indica se o objeto de modelo deve ser renderizado usando-se elementos HTML associados.Se o valor estiver armazenado em cache, o valor em cache é retornado; caso contrário o valor é recuperado a partir dos metadados do modelo e armazenado em cache.</summary>
      <returns>Um valor que indica se o objeto de modelo deve ser renderizado usando-se elementos HTML associados.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeHtmlEncode"></member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeIsReadOnly">
      <summary>Obtém um valor que indica se o modelo é somente leitura.Se o valor estiver armazenado em cache, o valor em cache é retornado; caso contrário o valor é recuperado a partir dos metadados do modelo e armazenado em cache.</summary>
      <returns>Um valor que indica se o modelo é somente leitura.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeIsRequired">
      <summary>Obtém um valor que indica se o modelo é necessário.Se o valor estiver armazenado em cache, o valor em cache é retornado; caso contrário o valor é recuperado a partir dos metadados do modelo e armazenado em cache.</summary>
      <returns>Um valor que indica se o modelo é necessário.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeNullDisplayText">
      <summary>Obtém a cadeia de caracteres a ser exibida para valores nulos.Se o valor estiver armazenado em cache, o valor em cache é retornado; caso contrário o valor é recuperado a partir dos metadados do modelo e armazenado em cache.</summary>
      <returns>A cadeia de caracteres a ser exibida para valores nulos.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeOrder">
      <summary>Obtém um valor que representa a ordem dos metadados atuais.Se o valor estiver armazenado em cache, o valor em cache é retornado; caso contrário o valor é recuperado a partir dos metadados do modelo e armazenado em cache.</summary>
      <returns>Um valor que representa a ordem dos metadados atuais.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShortDisplayName">
      <summary>Obtém um nome de exibição curto.Se o valor estiver armazenado em cache, o valor em cache é retornado; caso contrário o valor é recuperado a partir dos metadados do modelo e armazenado em cache.</summary>
      <returns>Um nome de exibição curto.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShowForDisplay">
      <summary>Obtém um valor que indica se a propriedade deve ser exibida nas exibições somente leitura, como exibições de listas e detalhes.Se o valor estiver armazenado em cache, o valor em cache é retornado; caso contrário o valor é recuperado a partir dos metadados do modelo e armazenado em cache.</summary>
      <returns>Um valor que indica se a propriedade deve ser exibida nas exibições somente leitura, como visualizações de listas e detalhes.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeShowForEdit">
      <summary>Obtém ou define um valor que indica se o modelo deve ser exibido em visualizações editáveis.Se o valor estiver armazenado em cache, o valor em cache é retornado; caso contrário o valor é recuperado a partir dos metadados do modelo e armazenado em cache.</summary>
      <returns>Retorna <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeSimpleDisplayText">
      <summary>Obtém a cadeia de caracteres de exibição simples do modelo.Se o valor estiver armazenado em cache, o valor em cache é retornado; caso contrário o valor é recuperado a partir dos metadados do modelo e armazenado em cache.</summary>
      <returns>A cadeia de caracteres de exibição simples do modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeTemplateHint">
      <summary>Obtém uma dica que sugere qual modelo usar para este modelo.Se o valor estiver armazenado em cache, o valor em cache é retornado; caso contrário o valor é recuperado a partir dos metadados do modelo e armazenado em cache.</summary>
      <returns>Uma dica que sugere qual modelo usar para este modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadata.ComputeWatermark">
      <summary>Obtém um valor que pode ser usado como uma marca d'água.Se o valor estiver armazenado em cache, o valor em cache é retornado; caso contrário o valor é recuperado a partir dos metadados do modelo e armazenado em cache.</summary>
      <returns>Um valor que pode ser usado como uma marca d'água.</returns>
    </member>
    <member name="T:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider">
      <summary>Implementa o provedor de metadados do modelo armazenado em cache padrão para o ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.CreateMetadataFromPrototype(System.Web.Mvc.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Retorna um contêiner de instâncias reais da classe de metadados armazenada em cache com base no protótipo e no acessador do modelo.</summary>
      <returns>Um contêiner de instâncias reais da classe de metadados armazenada em cache.</returns>
      <param name="prototype">O protótipo.</param>
      <param name="modelAccessor">O acessador do modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Retorna as instâncias do protótipo do contêiner da classe de metadados.</summary>
      <returns>As instâncias do protótipo do contêiner da classe de metadados.</returns>
      <param name="attributes">O tipo de atributos.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="modelType">O tipo de modelo.</param>
      <param name="propertyName">O nome da propriedade.</param>
    </member>
    <member name="T:System.Web.Mvc.CachedModelMetadata`1">
      <summary>Fornece um contêiner para metadados armazenados em cache.</summary>
      <typeparam name="TPrototypeCache">O tipo do contêiner.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.#ctor(System.Web.Mvc.CachedDataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,`0)">
      <summary>Construtor para a criação de instâncias reais da classe de metadados com base em um protótipo.</summary>
      <param name="provider">O provedor.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="modelType">O tipo de modelo.</param>
      <param name="propertyName">O nome da propriedade.</param>
      <param name="prototypeCache">O protótipo.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.#ctor(System.Web.Mvc.CachedModelMetadata{`0},System.Func{System.Object})">
      <summary>Construtor para a criação das instâncias do protótipo da classe de metadados.</summary>
      <param name="prototype">O protótipo.</param>
      <param name="modelAccessor">O acessador do modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeConvertEmptyStringToNull">
      <summary>Este método é protegido e, portanto, não pode ser chamado diretamente.Este método foi projetado para ser substituído em uma classe derivada como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtém ou define um valor armazenado em cache que indica se cadeias de caracteres vazias que são postadas em formulários devem ser convertidas em nulo.</summary>
      <returns>Um valor armazenado em cache que indica se cadeias de caracteres vazias que são postadas em formulários devem ser convertidas em nulo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDataTypeName">
      <summary>Este método é protegido e, portanto, não pode ser chamado diretamente.Este método foi projetado para ser substituído em uma classe derivada como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtém ou define informações meta sobre o tipo de dados.</summary>
      <returns>Informações meta sobre o tipo de dados.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDescription">
      <summary>Este método é protegido e, portanto, não pode ser chamado diretamente.Este método foi projetado para ser substituído em uma classe derivada como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtém ou define a descrição do modelo.</summary>
      <returns>A descrição do modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDisplayFormatString">
      <summary>Este método é protegido e, portanto, não pode ser chamado diretamente.Este método foi projetado para ser substituído em uma classe derivada como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtém ou define a cadeia de caracteres de formato de exibição do modelo.</summary>
      <returns>A cadeia de caracteres de formato de exibição do modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeDisplayName">
      <summary>Este método é protegido e, portanto, não pode ser chamado diretamente.Este método foi projetado para ser substituído em uma classe derivada como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtém ou define o nome de exibição do modelo.</summary>
      <returns>O nome de exibição do modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeEditFormatString">
      <summary>Este método é protegido e, portanto, não pode ser chamado diretamente.Este método foi projetado para ser substituído em uma classe derivada como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtém ou define a cadeia de caracteres de formato de edição do modelo.</summary>
      <returns>A cadeia de caracteres de formato de edição do modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeHasNonDefaultEditFormat">
      <summary>Este método é protegido e, portanto, não pode ser chamado diretamente.Este método foi projetado para ser substituído em uma classe derivada como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.</summary>
      <returns>Um valor que indica se um formato de edição não padrão é utilizado.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeHideSurroundingHtml">
      <summary>Este método é protegido e, portanto, não pode ser chamado diretamente.Este método foi projetado para ser substituído em uma classe derivada como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtém ou define um valor armazenado em cache que indica se o objeto de modelo deve ser renderizado usando-se elementos HTML associados.</summary>
      <returns>Um valor armazenado em cache que indica se o objeto de modelo deve ser renderizado usando-se elementos HTML associados.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeHtmlEncode"></member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeIsReadOnly">
      <summary>Este método é protegido e, portanto, não pode ser chamado diretamente.Este método foi projetado para ser substituído em uma classe derivada como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtém ou define um valor armazenado em cache que indica se o modelo é somente leitura.</summary>
      <returns>Um valor armazenado em cache que indica se o modelo é somente leitura.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeIsRequired">
      <summary>Este método é protegido e, portanto, não pode ser chamado diretamente.Este método foi projetado para ser substituído em uma classe derivada como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtém ou define um valor armazenado em cache que indica se o modelo é necessário.</summary>
      <returns>Um valor armazenado em cache que indica se o modelo é necessário.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeNullDisplayText">
      <summary>Este método é protegido e, portanto, não pode ser chamado diretamente.Este método foi projetado para ser substituído em uma classe derivada como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtém ou define a cadeia de caracteres armazenada em cache a ser exibida para valores nulos.</summary>
      <returns>A cadeia de caracteres armazenada em cache a ser exibida para valores nulos.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeOrder">
      <summary>Este método é protegido e, portanto, não pode ser chamado diretamente.Este método foi projetado para ser substituído em uma classe derivada como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtém ou define um valor armazenado em cache que representa a ordem dos metadados atuais.</summary>
      <returns>Um valor armazenado em cache que representa a ordem dos metadados atuais.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShortDisplayName">
      <summary>Este método é protegido e, portanto, não pode ser chamado diretamente.Este método foi projetado para ser substituído em uma classe derivada como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtém ou define um nome de exibição curto.</summary>
      <returns>Um nome de exibição curto.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShowForDisplay">
      <summary>Este método é protegido e, portanto, não pode ser chamado diretamente.Este método foi projetado para ser substituído em uma classe derivada como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtém ou define um valor armazenado em cache que indica se a propriedade deve ser exibida nas visualizações somente leitura, como visualizações de listas e detalhes.</summary>
      <returns>Um valor armazenado em cache que indica se a propriedade deve ser exibida nas visualizações somente leitura, como visualizações de listas e detalhes.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeShowForEdit">
      <summary>Este método é protegido e, portanto, não pode ser chamado diretamente.Este método foi projetado para ser substituído em uma classe derivada como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtém ou define um valor armazenado em cache que indica se o modelo deve ser exibido em visualizações editáveis.</summary>
      <returns>Um valor armazenado em cache que indica se o modelo deve ser exibido em exibições editáveis.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeSimpleDisplayText">
      <summary>Este método é protegido e, portanto, não pode ser chamado diretamente.Este método foi projetado para ser substituído em uma classe derivada como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtém ou define a cadeia de caracteres de exibição simples armazenada em cache do modelo.</summary>
      <returns>A cadeia de caracteres de exibição simples armazenada em cache do modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeTemplateHint">
      <summary>Este método é protegido e, portanto, não pode ser chamado diretamente.Este método foi projetado para ser substituído em uma classe derivada como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtém ou define uma dica armazenada em cache que sugere qual modelo usar para este modelo.</summary>
      <returns>Uma dica armazenada em cache que sugere qual modelo usar para este modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.ComputeWatermark">
      <summary>Este método é protegido e, portanto, não pode ser chamado diretamente.Este método foi projetado para ser substituído em uma classe derivada como <see cref="T:System.Web.Mvc.CachedDataAnnotationsModelMetadata" />.Obtém ou define um valor armazenado em cache que pode ser usado como uma marca d'água.</summary>
      <returns>Um valor armazenado em cache que pode ser usado como uma marca d'água.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ConvertEmptyStringToNull">
      <summary>Obtém ou define um valor armazenado em cache que indica se cadeias de caracteres vazias que são postadas em formulários devem ser convertidas em nulo.</summary>
      <returns>Um valor armazenado em cache que indica se cadeias de caracteres vazias que são postadas em formulários devem ser convertidas em nulo.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DataTypeName">
      <summary>Obtém ou define informações meta sobre o tipo de dados.</summary>
      <returns>As informações meta sobre o tipo de dados.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Description">
      <summary>Obtém ou define a descrição do modelo.</summary>
      <returns>A descrição do modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DisplayFormatString">
      <summary>Obtém ou define a cadeia de caracteres de formato de exibição do modelo.</summary>
      <returns>A cadeia de caracteres de formato de exibição do modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.DisplayName">
      <summary>Obtém ou define o nome de exibição do modelo.</summary>
      <returns>O nome de exibição do modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.EditFormatString">
      <summary>Obtém ou define a cadeia de caracteres de formato de edição do modelo.</summary>
      <returns>A cadeia de caracteres de formato de edição do modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.CachedModelMetadata`1.GetSimpleDisplayText">
      <summary>Obtém ou define a cadeia de caracteres de exibição simples do modelo.</summary>
      <returns>A cadeia de caracteres de exibição simples do modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.HideSurroundingHtml">
      <summary>Obtém ou define um valor que indica se o objeto de modelo deve ser renderizado usando-se elementos HTML associados.</summary>
      <returns>Um valor que indica se o objeto de modelo deve ser renderizado usando-se elementos HTML associados.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.HtmlEncode"></member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.IsReadOnly">
      <summary>Obtém ou define um valor que indica se o modelo é somente leitura.</summary>
      <returns>Um valor que indica se o modelo é somente leitura.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.IsRequired">
      <summary>Obtém ou define um valor que indica se o modelo é necessário.</summary>
      <returns>Um valor que indica se o modelo é necessário.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.NullDisplayText">
      <summary>Obtém ou define a cadeia de caracteres a ser exibida para valores nulos.</summary>
      <returns>A cadeia de caracteres a ser exibida para valores nulos.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Order">
      <summary>Obtém ou define um valor que representa a ordem dos metadados atuais.</summary>
      <returns>O valor da ordem dos metadados atuais.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.PrototypeCache">
      <summary>Obtém ou define o cache do protótipo.</summary>
      <returns>O cache do protótipo.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShortDisplayName">
      <summary>Obtém ou define um nome de exibição curto.</summary>
      <returns>O nome de exibição curto.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShowForDisplay">
      <summary>Obtém ou define um valor que indica se a propriedade deve ser exibida nas visualizações somente leitura, como visualizações de listas e detalhes.</summary>
      <returns>verdadeiro se o modelo deve ser exibido em visualizações somente leitura; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.ShowForEdit">
      <summary>Obtém ou define um valor que indica se o modelo deve ser exibido em visualizações editáveis.</summary>
      <returns>verdadeiro se o modelo deve ser exibido em visualizações editáveis; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.SimpleDisplayText">
      <summary>Obtém ou define a cadeia de caracteres de exibição simples do modelo.</summary>
      <returns>A cadeia de caracteres de exibição simples do modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.TemplateHint">
      <summary>Obtém ou define uma dica que sugere qual modelo usar para este modelo.</summary>
      <returns>Uma dica que sugere qual modelo usar para este modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.CachedModelMetadata`1.Watermark">
      <summary>Obtém ou define um valor que pode ser usado como uma marca d'água.</summary>
      <returns>Um valor que pode ser usado como uma marca d'água.</returns>
    </member>
    <member name="T:System.Web.Mvc.CancellationTokenModelBinder">
      <summary>Fornece um mecanismo para propagar a notificação de que as operações de associador de modelo devem ser canceladas.</summary>
    </member>
    <member name="M:System.Web.Mvc.CancellationTokenModelBinder.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.CancellationTokenModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CancellationTokenModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Retorna o token de cancelamento padrão.</summary>
      <returns>O token de cancelamento padrão.Implementa<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" /></returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="bindingContext">O contexto de associação.</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionOnlyAttribute">
      <summary>Representa um atributo usado para indicar que um método de ação deve ser chamado apenas como uma ação filha.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ChildActionOnlyAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionOnlyAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Chamado quando é necessária uma autorização.</summary>
      <param name="filterContext">Um objeto que encapsula as informações necessárias a fim de autorizar o acesso à ação filha.</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionValueProvider">
      <summary>Representa um provedor de valor para os valores de ações filha.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ChildActionValueProvider" />.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProvider.GetValue(System.String)">
      <summary>Recupera um objeto de valor usando a chave especificada.</summary>
      <returns>O objeto de valor para a chave especificada.</returns>
      <param name="key">A chave.</param>
    </member>
    <member name="T:System.Web.Mvc.ChildActionValueProviderFactory">
      <summary>Representa uma fábrica para a criação de objetos de provedor de valor para ações filha.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProviderFactory.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ChildActionValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ChildActionValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Retorna um objeto <see cref="T:System.Web.Mvc.ChildActionValueProvider" /> para o contexto de controlador especificado.</summary>
      <returns>Um objeto <see cref="T:System.Web.Mvc.ChildActionValueProvider" />.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
    </member>
    <member name="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider">
      <summary>Retorna os validadores de modelo de tipo de dados do cliente.</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ClientDataTypeModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ClientDataTypeModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Retorna os validadores de modelo de tipo de dados do cliente.</summary>
      <returns>Os validadores de modelo de tipo de dados do cliente.</returns>
      <param name="metadata">Os metadados.</param>
      <param name="context">O contexto.</param>
    </member>
    <member name="P:System.Web.Mvc.ClientDataTypeModelValidatorProvider.ResourceClassKey">
      <summary>Obtém a chave de classe do recurso.</summary>
      <returns>A chave de classe do recurso.</returns>
    </member>
    <member name="T:System.Web.Mvc.CompareAttribute">
      <summary>Fornece um atributo que compara duas propriedades de um modelo.</summary>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.#ctor(System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.CompareAttribute" />.</summary>
      <param name="otherProperty">A propriedade a ser comparada à propriedade atual.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatErrorMessage(System.String)">
      <summary>Aplica formatação a uma mensagem de erro com base no campo de dados em que o erro de comparação ocorreu.</summary>
      <returns>A mensagem de erro formatada.</returns>
      <param name="name">O nome do campo que causou a falha de validação.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>Formata a propriedade para a validação do cliente, precedendo um asterisco (*) e um ponto.</summary>
      <returns>A cadeia de caracteres "*." está prefixada à propriedade.</returns>
      <param name="property">A propriedade.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Obtém uma lista de regras de validação de cliente de valor comparado para a propriedade usando os metadados do modelo especificado e o contexto do controlador.</summary>
      <returns>Uma lista de regras de validação de cliente de valor comparado.</returns>
      <param name="metadata">Os metadados do modelo.</param>
      <param name="context">O contexto do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.CompareAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
      <summary>Determina se o objeto especificado é igual ao objeto comparado.</summary>
      <returns>nulo se o valor da propriedade comparada for igual ao parâmetro do valor; caso contrário, um resultado de validação que contém a mensagem de erro que indica a falha na comparação.</returns>
      <param name="value">O valor do objeto a ser comparado.</param>
      <param name="validationContext">O contexto da validação.</param>
    </member>
    <member name="P:System.Web.Mvc.CompareAttribute.OtherProperty">
      <summary>Obtém a propriedade a ser comparada à propriedade atual.</summary>
      <returns>A propriedade a ser comparada à propriedade atual.</returns>
    </member>
    <member name="P:System.Web.Mvc.CompareAttribute.OtherPropertyDisplayName">
      <summary>Obtém os demais nomes de exibição das propriedades.</summary>
      <returns>Os demais nomes de exibição das propriedades.</returns>
    </member>
    <member name="T:System.Web.Mvc.ContentResult">
      <summary>Representa um tipo de conteúdo definido pelo usuário que é o resultado de um método de ação.</summary>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ContentResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.Content">
      <summary>Obtém ou define o conteúdo.</summary>
      <returns>O conteúdo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentEncoding">
      <summary>Obtém ou define a codificação do conteúdo.</summary>
      <returns>A codificação do conteúdo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ContentResult.ContentType">
      <summary>Obtém ou define o tipo do conteúdo.</summary>
      <returns>O tipo do conteúdo.</returns>
    </member>
    <member name="M:System.Web.Mvc.ContentResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Habilita o processamento do resultado de um método de ação por um tipo personalizado que herda da classe <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">O contexto no qual o resultado é executado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="context" /> é nulo.</exception>
    </member>
    <member name="T:System.Web.Mvc.Controller">
      <summary>Fornece métodos que respondem às solicitações HTTP que são feitas para um site ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.Controller" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Controller.ActionInvoker">
      <summary>Obtém o chamador de ação do controlador.</summary>
      <returns>O chamador de ação.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.AsyncManager">
      <summary>Fornece operações assíncronas.</summary>
      <returns>Retorna <see cref="T:System.Web.Mvc.Async.AsyncManager" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Inicia a execução do contexto da solicitação especificado.</summary>
      <returns>Retorna uma instância IAsyncController.</returns>
      <param name="requestContext">O contexto da solicitação.</param>
      <param name="callback">O retorno de chamada assíncrono.</param>
      <param name="state">O estado.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.BeginExecuteCore(System.AsyncCallback,System.Object)">
      <summary>Inicia a invocação da ação no contexto de controlador atual.</summary>
      <returns>Retorna uma instância IAsyncController.</returns>
      <param name="callback">O retorno de chamada.</param>
      <param name="state">O estado.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Binders">
      <summary>Obtém ou define o associador.</summary>
      <returns>O associador.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String)">
      <summary>Cria um objeto de resultado de conteúdo usando uma cadeia de caracteres.</summary>
      <returns>A instância do resultado de conteúdo.</returns>
      <param name="content">O conteúdo a ser gravado para a resposta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String)">
      <summary>Cria um objeto de resultado de conteúdo usando uma cadeia de caracteres e o tipo de conteúdo.</summary>
      <returns>A instância do resultado de conteúdo.</returns>
      <param name="content">O conteúdo a ser gravado para a resposta.</param>
      <param name="contentType">O tipo de conteúdo (tipo MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)">
      <summary>Cria um objeto de resultado de conteúdo usando uma cadeia de caracteres, o tipo de conteúdo e a codificação de conteúdo.</summary>
      <returns>A instância do resultado de conteúdo.</returns>
      <param name="content">O conteúdo a ser gravado para a resposta.</param>
      <param name="contentType">O tipo de conteúdo (tipo MIME).</param>
      <param name="contentEncoding">A codificação do conteúdo.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateActionInvoker">
      <summary>Cria um chamador de ação.</summary>
      <returns>Um chamador de ação.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.CreateTempDataProvider">
      <summary>Cria um provedor de dados temporários.</summary>
      <returns>Um provedor de dados temporários.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.DisableAsyncSupport">
      <summary>Obtém se o suporte assíncrono deve ser desabilitado para o controlador.</summary>
      <returns>verdadeiro para desabilitar o suporte assíncrono para o controlador; caso contrário, falso.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose">
      <summary>Libera todos os recursos usados ​​pela instância atual da classe <see cref="T:System.Web.Mvc.Controller" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.Dispose(System.Boolean)">
      <summary>Libera recursos não gerenciados e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">verdadeiro para liberar os recursos gerenciados e os não gerenciados; falso para liberar apenas os recursos não gerenciados.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.EndExecute(System.IAsyncResult)">
      <summary>Termina a invocação da ação no contexto de controlador atual.</summary>
      <param name="asyncResult">O resultado assíncrono.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.EndExecuteCore(System.IAsyncResult)">
      <summary>Finaliza o núcleo de execução.</summary>
      <param name="asyncResult">O resultado assíncrono.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ExecuteCore">
      <summary>Invoca a ação no contexto de controlador atual.</summary>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String)">
      <summary>Cria um objeto FileContentResult usando o conteúdo do arquivo e o tipo de arquivo.</summary>
      <returns>O objeto de resultado de conteúdo de arquivo.</returns>
      <param name="fileContents">O conteúdo binário a ser enviado para a resposta.</param>
      <param name="contentType">O tipo de conteúdo (tipo MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)">
      <summary>Cria um objeto FileContentResult usando o conteúdo do arquivo, o tipo de conteúdo e o nome do arquivo de destino.</summary>
      <returns>O objeto de resultado de conteúdo de arquivo.</returns>
      <param name="fileContents">O conteúdo binário a ser enviado para a resposta.</param>
      <param name="contentType">O tipo de conteúdo (tipo MIME).</param>
      <param name="fileDownloadName">O nome de arquivo a ser usado na caixa de diálogo de download de arquivo que é exibida no navegador.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String)">
      <summary>Cria um objeto FileStreamResult usando o objeto Stream e o tipo de conteúdo.</summary>
      <returns>O objeto de resultado de conteúdo de arquivo.</returns>
      <param name="fileStream">O fluxo a ser enviado para a resposta.</param>
      <param name="contentType">O tipo de conteúdo (tipo MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)">
      <summary>Cria um objeto FileStreamResult usando o objeto Stream, o tipo de conteúdo e o nome do arquivo de destino.</summary>
      <returns>O objeto de resultado de fluxo de arquivo.</returns>
      <param name="fileStream">O fluxo a ser enviado para a resposta.</param>
      <param name="contentType">O tipo de conteúdo (tipo MIME)</param>
      <param name="fileDownloadName">O nome de arquivo a ser usado na caixa de diálogo de download de arquivo que é exibida no navegador.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String)">
      <summary>Cria um objeto FilePathResult usando o nome do arquivo e o tipo de conteúdo.</summary>
      <returns>O objeto de resultado de fluxo de arquivo.</returns>
      <param name="fileName">O caminho do arquivo a ser enviado para a resposta.</param>
      <param name="contentType">O tipo de conteúdo (tipo MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.File(System.String,System.String,System.String)">
      <summary>Cria um objeto FilePathResult usando o nome do arquivo, o tipo de conteúdo e o nome de download do arquivo.</summary>
      <returns>O objeto de resultado de fluxo de arquivo.</returns>
      <param name="fileName">O caminho do arquivo a ser enviado para a resposta.</param>
      <param name="contentType">O tipo de conteúdo (tipo MIME).</param>
      <param name="fileDownloadName">O nome de arquivo a ser usado na caixa de diálogo de download de arquivo que é exibida no navegador.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.HandleUnknownAction(System.String)">
      <summary>Chamado quando uma solicitação corresponde a este controlador, mas nenhum método com o nome de ação especificado é encontrado no controlador.</summary>
      <param name="actionName">O nome da ação tentada.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.HttpContext">
      <summary>Obtém informações específicas de HTTP sobre uma solicitação HTTP individual.</summary>
      <returns>O contexto HTTP.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound">
      <summary>Retorna uma instância da classe <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</summary>
      <returns>Uma instância da classe <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.HttpNotFound(System.String)">
      <summary>Retorna uma instância da classe <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</summary>
      <returns>Uma instância da classe <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</returns>
      <param name="statusDescription">A descrição do status.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Initialize(System.Web.Routing.RequestContext)">
      <summary>Inicializa os dados que podem não estar disponíveis quando o construtor for chamado.</summary>
      <param name="requestContext">O contexto HTTP e os dados de rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.JavaScript(System.String)">
      <summary>Cria um objeto <see cref="T:System.Web.Mvc.JavaScriptResult" />.</summary>
      <returns>O objeto <see cref="T:System.Web.Mvc.JavaScriptResult" /> que grava o script para a resposta.</returns>
      <param name="script">O código JavaScript a ser executado no cliente</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object)">
      <summary>Cria um objeto <see cref="T:System.Web.Mvc.JsonResult" /> que serializa o objeto especificado como JavaScript Object Notation (JSON).</summary>
      <returns>O objeto de resultado JSON que serializa o objeto especificado para o formato JSON.O objeto de resultado que é preparado por este método é gravado para a resposta pela estrutura do ASP.NET MVC quando o objeto é executado.</returns>
      <param name="data">O gráfico de objeto JavaScript a ser serializado.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String)">
      <summary>Cria um objeto <see cref="T:System.Web.Mvc.JsonResult" /> que serializa o objeto especificado em formato JavaScript Object Notation (JSON).</summary>
      <returns>O objeto de resultado JSON que serializa o objeto especificado para o formato JSON.</returns>
      <param name="data">O gráfico de objeto JavaScript a ser serializado.</param>
      <param name="contentType">O tipo de conteúdo (tipo MIME).</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)">
      <summary>Cria um objeto <see cref="T:System.Web.Mvc.JsonResult" /> que serializa o objeto especificado em formato JavaScript Object Notation (JSON).</summary>
      <returns>O objeto de resultado JSON que serializa o objeto especificado para o formato JSON.</returns>
      <param name="data">O gráfico de objeto JavaScript a ser serializado.</param>
      <param name="contentType">O tipo de conteúdo (tipo MIME).</param>
      <param name="contentEncoding">A codificação do conteúdo.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Cria um objeto <see cref="T:System.Web.Mvc.JsonResult" /> que serializa o objeto especificado em formato JavaScript Object Notation (JSON), usando o tipo de conteúdo, a codificação de conteúdo e o comportamento de solicitação JSON.</summary>
      <returns>O objeto de resultado que serializa o objeto especificado para o formato JSON.</returns>
      <param name="data">O gráfico de objeto JavaScript a ser serializado.</param>
      <param name="contentType">O tipo de conteúdo (tipo MIME).</param>
      <param name="contentEncoding">A codificação do conteúdo.</param>
      <param name="behavior">O comportamento da solicitação JSON</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Cria um objeto <see cref="T:System.Web.Mvc.JsonResult" /> que serializa o objeto especificado em formato JavaScript Object Notation (JSON), usando o tipo de conteúdo e o comportamento de solicitação JSON especificados.</summary>
      <returns>O objeto de resultado que serializa o objeto especificado para o formato JSON.</returns>
      <param name="data">O gráfico de objeto JavaScript a ser serializado.</param>
      <param name="contentType">O tipo de conteúdo (tipo MIME).</param>
      <param name="behavior">O comportamento da solicitação JSON</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)">
      <summary>Cria um objeto JsonResult que serializa o objeto especificado em formato JavaScript Object Notation (JSON), usando o comportamento da solicitação JSON especificado.</summary>
      <returns>O objeto de resultado que serializa o objeto especificado para o formato JSON.</returns>
      <param name="data">O gráfico de objeto JavaScript a ser serializado.</param>
      <param name="behavior">O comportamento da solicitação JSON.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.ModelState">
      <summary>Obtém o objeto de dicionário de estado de modelo que contém o estado do modelo e da validação de associação de modelo.</summary>
      <returns>O dicionário de estado de modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Chamado após o método de ação ser invocado.</summary>
      <param name="filterContext">Informações sobre a solicitação e a ação atuais.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Chamado antes de o método da ação ser invocado.</summary>
      <param name="filterContext">Informações sobre a solicitação e a ação atuais.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)">
      <summary>Chamado quando a autorização ocorre.</summary>
      <param name="filterContext">Informações sobre a solicitação e a ação atuais.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)">
      <summary>Chamado quando o desafio da autorização ocorre.</summary>
      <param name="filterContext">Informações sobre a solicitação e a ação atuais.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Chamado quando a autorização ocorre.</summary>
      <param name="filterContext">Informações sobre a solicitação e a ação atuais.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Chamado quando uma exceção sem tratamento ocorre na ação.</summary>
      <param name="filterContext">Informações sobre a solicitação e a ação atuais.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Chamado após o resultado da ação que é retornado por um método de ação ser executado.</summary>
      <param name="filterContext">Informações sobre a solicitação atual e o resultado da ação.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Chamado antes de o resultado da ação que é retornado por um método de ação ser executado.</summary>
      <param name="filterContext">Informações sobre a solicitação atual e o resultado da ação.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView">
      <summary>Cria um objeto <see cref="T:System.Web.Mvc.PartialViewResult" /> que renderiza uma exibição parcial.</summary>
      <returns>Um objeto de resultado de exibição parcial.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.Object)">
      <summary>Cria um objeto <see cref="T:System.Web.Mvc.PartialViewResult" /> que renderiza uma exibição parcial, usando o modelo especificado.</summary>
      <returns>Um objeto de resultado de exibição parcial.</returns>
      <param name="model">O modelo que é renderizado pela exibição parcial</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String)">
      <summary>Cria um objeto <see cref="T:System.Web.Mvc.PartialViewResult" /> que renderiza uma exibição parcial, usando o nome de exibição especificado.</summary>
      <returns>Um objeto de resultado de exibição parcial.</returns>
      <param name="viewName">O nome da exibição que é renderizado para a resposta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.PartialView(System.String,System.Object)">
      <summary>Cria um objeto <see cref="T:System.Web.Mvc.PartialViewResult" /> que renderiza uma exibição parcial, usando o nome de exibição e modelo especificados.</summary>
      <returns>Um objeto de resultado de exibição parcial.</returns>
      <param name="viewName">O nome da exibição que é renderizado para a resposta.</param>
      <param name="model">O modelo que é renderizado pela exibição parcial</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Profile">
      <summary>Obtém o perfil de contexto HTTP.</summary>
      <returns>O perfil de contexto HTTP.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.Redirect(System.String)">
      <summary>Cria um objeto <see cref="T:System.Web.Mvc.RedirectResult" /> que redireciona para a URL especificada.</summary>
      <returns>O objeto de resultado de redirecionamento.</returns>
      <param name="url">A URL à qual redirecionar.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectPermanent(System.String)">
      <summary>Retorna uma instância da classe <see cref="T:System.Web.Mvc.RedirectResult" /> com a propriedade Permanent definida como verdadeira.</summary>
      <returns>Uma instância da classe <see cref="T:System.Web.Mvc.RedirectResult" /> com a propriedade Permanent definida como verdadeira.</returns>
      <param name="url">A URL à qual redirecionar.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String)">
      <summary>Redireciona para a ação especificada usando o nome da ação.</summary>
      <returns>O objeto de resultado de redirecionamento.</returns>
      <param name="actionName">O nome da ação.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)">
      <summary>Redireciona para a ação especificada usando o nome da ação e valores de rota.</summary>
      <returns>O objeto de resultado de redirecionamento.</returns>
      <param name="actionName">O nome da ação.</param>
      <param name="routeValues">Os parâmetros para uma rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)">
      <summary>Redireciona para a ação especificada usando o nome da ação e nome de controlador.</summary>
      <returns>O objeto de resultado de redirecionamento.</returns>
      <param name="actionName">O nome da ação.</param>
      <param name="controllerName">O nome do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)">
      <summary>Redireciona para a ação especificada usando o nome da ação, nome do controlador e dicionário de rota.</summary>
      <returns>O objeto de resultado de redirecionamento.</returns>
      <param name="actionName">O nome da ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Os parâmetros para uma rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Redireciona para a ação especificada usando o nome da ação, nome do controlador e valores de rota.</summary>
      <returns>O objeto de resultado de redirecionamento.</returns>
      <param name="actionName">O nome da ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Os parâmetros para uma rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Redireciona para a ação especificada usando o nome da ação e dicionário de rota.</summary>
      <returns>O objeto de resultado de redirecionamento.</returns>
      <param name="actionName">O nome da ação.</param>
      <param name="routeValues">Os parâmetros para uma rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String)">
      <summary>Retorna uma instância da classe <see cref="T:System.Web.Mvc.RedirectResult" /> com a propriedade Permanent definida como verdadeira, usando o nome da ação especificado.</summary>
      <returns>Uma instância da classe <see cref="T:System.Web.Mvc.RedirectResult" /> com a propriedade Permanent definida como verdadeira usando os valores de rota, nome da ação e o nome do controlador especificados.</returns>
      <param name="actionName">O nome da ação.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Object)">
      <summary>Retorna uma instância da classe <see cref="T:System.Web.Mvc.RedirectResult" /> com a propriedade Permanent definida como verdadeira usando os valores de rota e nome de ação especificados.</summary>
      <returns>Uma instância da classe <see cref="T:System.Web.Mvc.RedirectResult" /> com a propriedade Permanent definida como verdadeira usando os valores de rota e nome de ação especificados.</returns>
      <param name="actionName">O nome da ação.</param>
      <param name="routeValues">Os valores de rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String)">
      <summary>Retorna uma instância da classe <see cref="T:System.Web.Mvc.RedirectResult" /> com a propriedade Permanent definida como verdadeira usando o nome de ação e o nome do controlador especificados.</summary>
      <returns>Uma instância da classe <see cref="T:System.Web.Mvc.RedirectResult" /> com a propriedade Permanent definida como verdadeira usando o nome de ação e o nome do controlador especificados.</returns>
      <param name="actionName">O nome da ação.</param>
      <param name="controllerName">O nome do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Object)">
      <summary>Retorna uma instância da classe <see cref="T:System.Web.Mvc.RedirectResult" /> com a propriedade Permanent definida como verdadeira usando os valores de rota, nome da ação e o nome do controlador especificados.</summary>
      <returns>Uma instância da classe <see cref="T:System.Web.Mvc.RedirectResult" /> com a propriedade Permanent definida como verdadeira usando os valores de rota, nome da ação e o nome do controlador especificados.</returns>
      <param name="actionName">O nome da ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Os valores de rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Retorna uma instância da classe <see cref="T:System.Web.Mvc.RedirectResult" /> com a propriedade Permanent definida como verdadeira usando os valores de rota, nome da ação e o nome do controlador especificados.</summary>
      <returns>Uma instância da classe <see cref="T:System.Web.Mvc.RedirectResult" /> com a propriedade Permanent definida como verdadeira usando os valores de rota, nome da ação e o nome do controlador especificados.</returns>
      <param name="actionName">O nome da ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Os valores de rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToActionPermanent(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Retorna uma instância da classe <see cref="T:System.Web.Mvc.RedirectResult" /> com a propriedade Permanent definida como verdadeira usando os valores de rota e nome de ação especificados.</summary>
      <returns>Uma instância da classe <see cref="T:System.Web.Mvc.RedirectResult" /> com a propriedade Permanent definida como verdadeira usando os valores de rota e nome de ação especificados.</returns>
      <param name="actionName">O nome da ação.</param>
      <param name="routeValues">Os valores de rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Object)">
      <summary>Redireciona para a rota especificada usando os valores de rota especificados.</summary>
      <returns>O objeto de resultado de redirect-to-route.</returns>
      <param name="routeValues">Os parâmetros para uma rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String)">
      <summary>Redireciona para a rota especificada usando o nome da rota.</summary>
      <returns>O objeto de resultado de redirect-to-route.</returns>
      <param name="routeName">O nome da rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)">
      <summary>Redireciona para a rota especificada usando o nome da rota e valores de rota.</summary>
      <returns>O objeto de resultado de redirect-to-route.</returns>
      <param name="routeName">O nome da rota.</param>
      <param name="routeValues">Os parâmetros para uma rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Redireciona para a rota especificada usando o nome da rota e dicionário de rota.</summary>
      <returns>O objeto de resultado de redirect-to-route.</returns>
      <param name="routeName">O nome da rota.</param>
      <param name="routeValues">Os parâmetros para uma rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
      <summary>Redireciona para a rota especificada usando o dicionário da rota.</summary>
      <returns>O objeto de resultado de redirect-to-route.</returns>
      <param name="routeValues">Os parâmetros para uma rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Object)">
      <summary>Retorna uma instância da classe RedirectResult com a propriedade Permanent definida como verdadeira, usando os valores de rota especificados.</summary>
      <returns>Retorna uma instância da classe RedirectResult com a propriedade Permanent definida como verdadeira.</returns>
      <param name="routeValues">O nome da rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String)">
      <summary>Retorna uma instância da classe RedirectResult com a propriedade Permanent definida como verdadeira, usando o nome da rota especificados.</summary>
      <returns>Retorna uma instância da classe RedirectResult com a propriedade Permanent definida como verdadeira, usando o nome da rota especificados.</returns>
      <param name="routeName">O nome da rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Object)">
      <summary>Retorna uma instância da classe RedirectResult com a propriedade Permanent definida como verdadeira, usando o nome da rota e os valores de rota especificados.</summary>
      <returns>Uma instância da classe RedirectResult com a propriedade Permanent definida como verdadeira, usando o nome da rota e os valores de rota especificados.</returns>
      <param name="routeName">O nome da rota.</param>
      <param name="routeValues">Os valores de rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Retorna uma instância da classe RedirectResult com a propriedade Permanent definida como verdadeira, usando o nome da rota e os valores de rota especificados.</summary>
      <returns>Uma instância da classe RedirectResult com a propriedade Permanent definida como verdadeira.</returns>
      <param name="routeName">O nome da rota.</param>
      <param name="routeValues">Os valores de rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.RedirectToRoutePermanent(System.Web.Routing.RouteValueDictionary)">
      <summary>Retorna uma instância da classe RedirectResult com a propriedade Permanent definida como verdadeira, usando os valores de rota especificados.</summary>
      <returns>Uma instância da classe RedirectResult com a propriedade Permanent definida como verdadeira, usando os valores de rota especificados.</returns>
      <param name="routeValues">Os valores de rota.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.Request">
      <summary>Obtém o objeto HttpRequestBase para a solicitação HTTP atual.</summary>
      <returns>O objeto da solicitação.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Resolver">
      <summary>Representa um resolvedor de dependência substituível que fornece serviços.Por padrão, ele usa <see cref="P:System.Web.Mvc.DependencyResolver.CurrentCache" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Controller.Response">
      <summary>Obtém o objeto HttpResponseBase para a resposta HTTP atual.</summary>
      <returns>O objeto HttpResponseBase para a resposta HTTP atual.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.RouteData">
      <summary>Obtém os dados de rota para a solicitação atual.</summary>
      <returns>Os dados de rota.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Server">
      <summary>Obtém o objeto HttpServerUtilityBase que fornece métodos que são usados ​​durante o processamento de solicitações da Web.</summary>
      <returns>O objeto de servidor HTTP.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.Session">
      <summary>Obtém o objeto HttpSessionStateBase para a solicitação HTTP atual.</summary>
      <returns>O objeto de estado de sessão HTTP para a solicitação HTTP atual.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Este método chama o método BeginExecute.</summary>
      <returns>O resultado da operação.</returns>
      <param name="requestContext">O contexto da solicitação.</param>
      <param name="callback">O retorno de chamada assíncrono.</param>
      <param name="state">O estado do objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Async#IAsyncController#EndExecute(System.IAsyncResult)">
      <summary>Este método chama o método EndExecute.</summary>
      <param name="asyncResult">O resultado assíncrono da operação.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)">
      <summary>Este método chama o método OnAuthentication.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#Filters#IAuthenticationFilter#OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)">
      <summary>Este método chama o método OnAuthenticationChallenge.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Este método chama o método OnActionExecuted.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IActionFilter#OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Este método chama o método OnActionExecuting.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IAuthorizationFilter#OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Este método chama o método OnAuthorization.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IExceptionFilter#OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Este método chama o método OnException.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Este método chama o método OnResultExecuted.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.System#Web#Mvc#IResultFilter#OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Este método chama o método OnResultExecuting.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.TempDataProvider">
      <summary>Obtém o objeto de provedor de dados temporários que é usado para armazenar dados para a próxima solicitação.</summary>
      <returns>O provedor de dados temporários.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0)">
      <summary>Atualiza a instância de modelo especificada usando valores do provedor de valor atual do controlador.</summary>
      <returns>verdadeiro se a atualização for bem-sucedida; caso contrário, falso.</returns>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="model" /> ou a propriedade ValueProvider é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)">
      <summary>Atualiza a instância de modelo especificada usando valores do provedor de valor atual do controlador e um prefixo.</summary>
      <returns>verdadeiro se a atualização for bem-sucedida; caso contrário, falso.</returns>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <param name="prefix">O prefixo a ser usado ao procurar por valores no provedor de valor.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="model" /> ou a propriedade ValueProvider é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])">
      <summary>Atualiza a instância de modelo especificada usando valores do provedor de valor atual do controlador, um prefixo e propriedades incluídas.</summary>
      <returns>verdadeiro se a atualização for bem-sucedida; caso contrário, falso.</returns>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <param name="prefix">O prefixo a ser usado ao procurar por valores no provedor de valor.</param>
      <param name="includeProperties">Uma lista de propriedades do modelo a serem atualizadas.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="model" /> ou a propriedade ValueProvider é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>Atualiza a instância do modelo especificada usando valores de provedor de valor atual do controlador, um prefixo, uma lista de propriedades a serem excluídas e uma lista de propriedades a serem incluídas.</summary>
      <returns>verdadeiro se a atualização for bem-sucedida; caso contrário, falso.</returns>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <param name="prefix">O prefixo a ser usado ao procurar por valores no provedor de valor.</param>
      <param name="includeProperties">Uma lista de propriedades do modelo a serem atualizadas.</param>
      <param name="excludeProperties">Uma lista de propriedades a serem excluídas explicitamente da atualizaçãoEstas serão excluídas mesmo se estiverem listadas na lista de parâmetros includeProperties.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="model" /> ou a propriedade ValueProvider é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Atualiza a instância do modelo especificada usando valores do provedor de valor, um prefixo, uma lista de propriedades a serem excluídas e uma lista de propriedades a serem incluídas.</summary>
      <returns>verdadeiro se a atualização for bem-sucedida; caso contrário, falso.</returns>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <param name="prefix">O prefixo a ser usado ao procurar por valores no provedor de valor.</param>
      <param name="includeProperties">Uma lista de propriedades do modelo a serem atualizadas.</param>
      <param name="excludeProperties">Uma lista de propriedades a serem excluídas explicitamente da atualizaçãoEstas serão excluídas mesmo se estiverem listadas na lista de parâmetros includeProperties.</param>
      <param name="valueProvider">Um dicionário de valores usado para atualizar o modelo.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Atualiza a instância de modelo especificada usando valores do provedor de valor, um prefixo e propriedades incluídas.</summary>
      <returns>verdadeiro se a atualização for bem-sucedida; caso contrário, falso.</returns>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <param name="prefix">O prefixo a ser usado ao procurar por valores no provedor de valor.</param>
      <param name="includeProperties">Uma lista de propriedades do modelo a serem atualizadas.</param>
      <param name="valueProvider">Um dicionário de valores usado para atualizar o modelo.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>Atualiza a instância do modelo especificada usando valores do provedor de valor e uma lista de propriedades a serem incluídas.</summary>
      <returns>verdadeiro se a atualização for bem-sucedida; caso contrário, falso.</returns>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <param name="prefix">Uma lista de propriedades do modelo a serem atualizadas.</param>
      <param name="valueProvider">Um dicionário de valores usado para atualizar o modelo.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])">
      <summary>Atualiza a instância de modelo especificada usando os valores do provedor de valor atual do controlador e as propriedades incluídas.</summary>
      <returns>verdadeiro se a atualização for bem-sucedida; caso contrário, falso.</returns>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <param name="includeProperties">Uma lista de propriedades do modelo a serem atualizadas.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Atualiza a instância do modelo especificada usando valores do provedor de valor e uma lista de propriedades a serem incluídas.</summary>
      <returns>verdadeiro se a atualização for bem-sucedida; caso contrário, falso.</returns>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <param name="includeProperties">Uma lista de propriedades do modelo a serem atualizadas.</param>
      <param name="valueProvider">Um dicionário de valores usado para atualizar o modelo.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>Atualiza a instância de modelo especificada usando valores do provedor de valor.</summary>
      <returns>verdadeiro se a atualização for bem-sucedida; caso contrário, falso.</returns>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <param name="valueProvider">Um dicionário de valores usado para atualizar o modelo.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object)">
      <summary>Valida a instância de modelo especificada.</summary>
      <returns>verdadeiro se a validação do modelo for bem-sucedida; caso contrário, falso.</returns>
      <param name="model">O modelo a ser validado.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.TryValidateModel(System.Object,System.String)">
      <summary>Valida a instância de modelo especificada usando um prefixo HTML.</summary>
      <returns>verdadeiro se a validação do modelo for bem-sucedida; caso contrário, falso.</returns>
      <param name="model">O modelo a ser validado.</param>
      <param name="prefix">O prefixo a ser usado ao procurar por valores no provedor de modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0)">
      <summary>Atualiza a instância de modelo especificada usando valores do provedor de valor atual do controlador.</summary>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)">
      <summary>Atualiza a instância de modelo especificada usando valores do provedor de valor atual do controlador e um prefixo.</summary>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <param name="prefix">Um prefixo a ser usado ao procurar por valores no provedor de valor.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])">
      <summary>Atualiza a instância de modelo especificada usando valores do provedor de valor atual do controlador, um prefixo e propriedades incluídas.</summary>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <param name="prefix">Um prefixo a ser usado ao procurar por valores no provedor de valor.</param>
      <param name="includeProperties">Uma lista de propriedades do modelo a serem atualizadas.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])">
      <summary>Atualiza a instância do modelo especificada usando valores de provedor de valor atual do controlador, um prefixo, uma lista de propriedades a serem excluídas e uma lista de propriedades a serem incluídas.</summary>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <param name="prefix">Um prefixo a ser usado ao procurar por valores no provedor de valor.</param>
      <param name="includeProperties">Uma lista de propriedades do modelo a serem atualizadas.</param>
      <param name="excludeProperties">Uma lista de propriedades a serem excluídas explicitamente da atualizaçãoEstas serão excluídas mesmo se estiverem listadas na lista includeProperties.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Atualiza a instância do modelo especificada usando valores do provedor de valor, um prefixo, uma lista de propriedades a serem excluídas e uma lista de propriedades a serem incluídas.</summary>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <param name="prefix">O prefixo a ser usado ao procurar por valores no provedor de valor.</param>
      <param name="includeProperties">Uma lista de propriedades do modelo a serem atualizadas.</param>
      <param name="excludeProperties">Uma lista de propriedades a serem excluídas explicitamente da atualizaçãoEstas serão excluídas mesmo se estiverem listadas na lista de parâmetros includeProperties.</param>
      <param name="valueProvider">Um dicionário de valores usado para atualizar o modelo.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Atualiza a instância do modelo especificada usando valores do provedor de valor, um prefixo e uma lista de propriedades a serem incluídas.</summary>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <param name="prefix">O prefixo a ser usado ao procurar por valores no provedor de valor.</param>
      <param name="includeProperties">Uma lista de propriedades do modelo a serem atualizadas.</param>
      <param name="valueProvider">Um dicionário de valores usado para atualizar o modelo.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Web.Mvc.IValueProvider)">
      <summary>Atualiza a instância do modelo especificada usando valores do provedor de valor, um prefixo e uma lista de propriedades a serem incluídas.</summary>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <param name="prefix">Uma lista de propriedades do modelo a serem atualizadas.</param>
      <param name="valueProvider">Um dicionário de valores usado para atualizar o modelo.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])">
      <summary>Atualiza a instância de modelo especificada usando valores do provedor de valor atual do objeto do controlador.</summary>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <param name="includeProperties">Uma lista de propriedades do modelo a serem atualizadas.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Web.Mvc.IValueProvider)">
      <summary>Atualiza a instância do modelo especificada usando valores do provedor de valor, um prefixo e uma lista de propriedades a serem incluídas.</summary>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <param name="includeProperties">Uma lista de propriedades do modelo a serem atualizadas.</param>
      <param name="valueProvider">Um dicionário de valores usado para atualizar o modelo.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.Web.Mvc.IValueProvider)">
      <summary>Atualiza a instância de modelo especificada usando valores do provedor de valor.</summary>
      <param name="model">A instância de modelo a ser atualizada.</param>
      <param name="valueProvider">Um dicionário de valores usado para atualizar o modelo.</param>
      <typeparam name="TModel">O tipo do objeto de modelo.</typeparam>
    </member>
    <member name="P:System.Web.Mvc.Controller.Url">
      <summary>Obtém o objeto URL auxiliar que é usado para gerar URLs usando roteamento.</summary>
      <returns>O objeto URL auxiliar.</returns>
    </member>
    <member name="P:System.Web.Mvc.Controller.User">
      <summary>Obtém as informações de segurança do usuário para a solicitação HTTP atual.</summary>
      <returns>As informações de segurança do usuário para a solicitação HTTP atual.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object)">
      <summary>Valida a instância de modelo especificada.</summary>
      <param name="model">O modelo a ser validado.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.ValidateModel(System.Object,System.String)">
      <summary>Valida a instância de modelo especificada usando um prefixo HTML.</summary>
      <param name="model">O modelo a ser validado.</param>
      <param name="prefix">O prefixo a ser usado ao procurar por valores no provedor de modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View">
      <summary>Cria um objeto <see cref="T:System.Web.Mvc.ViewResult" /> que renderiza uma exibição para a resposta.</summary>
      <returns>O resultado de <see cref="M:System.Web.Mvc.Controller.View" /> que renderiza uma exibição para a resposta.</returns>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Object)">
      <summary>Cria um objeto <see cref="T:System.Web.Mvc.ViewResult" /> usando o modelo que renderiza uma exibição para a resposta.</summary>
      <returns>O resultado da exibição.</returns>
      <param name="model">O modelo que é renderizado pela exibição.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String)">
      <summary>Cria um objeto <see cref="T:System.Web.Mvc.ViewResult" /> usando o nome da exibição que renderiza uma exibição.</summary>
      <returns>O resultado da exibição.</returns>
      <param name="viewName">O nome da exibição que é renderizado para a resposta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.Object)">
      <summary>Cria um objeto <see cref="T:System.Web.Mvc.ViewResult" /> que renderiza o objeto IView especificado.</summary>
      <returns>O resultado da exibição.</returns>
      <param name="viewName">A exibição que é renderizada para a resposta.</param>
      <param name="model">O modelo que é renderizado pela exibição.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String)">
      <summary>Cria um objeto <see cref="T:System.Web.Mvc.ViewResult" /> usando o nome de exibição e o nome de página mestra que renderiza uma exibição para a resposta.</summary>
      <returns>O resultado da exibição.</returns>
      <param name="viewName">O nome da exibição que é renderizado para a resposta.</param>
      <param name="masterName">O nome da página mestra ou modelo a ser usado quando a exibição é renderizada.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.String,System.String,System.Object)">
      <summary>Cria um objeto <see cref="T:System.Web.Mvc.ViewResult" /> usando o nome de exibição, o nome de página mestra e o modelo que renderiza uma exibição para a resposta.</summary>
      <returns>O resultado da exibição.</returns>
      <param name="viewName">O nome da exibição que é renderizado para a resposta.</param>
      <param name="masterName">O nome da página mestra ou modelo a ser usado quando a exibição é renderizada.</param>
      <param name="model">O modelo que é renderizado pela exibição.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView)">
      <summary>Cria um objeto <see cref="T:System.Web.Mvc.ViewResult" /> que renderiza o objeto IView especificado.</summary>
      <returns>O resultado da exibição.</returns>
      <param name="view">A exibição que é renderizada para a resposta.</param>
    </member>
    <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)">
      <summary>Cria um objeto <see cref="T:System.Web.Mvc.ViewResult" /> que renderiza um objeto <see cref="T:System.Web.Mvc.IView" /> especificado.</summary>
      <returns>O resultado da exibição.</returns>
      <param name="view">A exibição que é renderizada para a resposta.</param>
      <param name="model">O modelo que é renderizado pela exibição.</param>
    </member>
    <member name="P:System.Web.Mvc.Controller.ViewEngineCollection">
      <summary>Obtém a coleção de mecanismos de exibição.</summary>
      <returns>A coleção de mecanismos de exibição.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerActionInvoker">
      <summary>Representa uma classe responsável por invocar os métodos de ação de um controlador.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ControllerActionInvoker" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerActionInvoker.Binders">
      <summary>Obtém ou define os associadores de modelo associados à ação.</summary>
      <returns>Os associadores de modelo associados à ação.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.CreateActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Object)">
      <summary>Cria o resultado da ação.</summary>
      <returns>O objeto do resultado da ação.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
      <param name="actionReturnValue">O valor de retorno da ação.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.FindAction(System.Web.Mvc.ControllerContext,System.Web.Mvc.ControllerDescriptor,System.String)">
      <summary>Encontra as informações sobre o método de ação.</summary>
      <returns>Informações sobre o método de ação.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="controllerDescriptor">O descritor do controlador.</param>
      <param name="actionName">O nome da ação.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>Recupera informações sobre o controlador usando o contexto do controlador especificado.</summary>
      <returns>As informações sobre o controlador.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Recupera informações sobre os filtros de ação.</summary>
      <returns>As informações sobre os filtros de ação.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ParameterDescriptor)">
      <summary>Obtém o valor do parâmetro do método de ação especificado.</summary>
      <returns>O valor do parâmetro do método de ação.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="parameterDescriptor">O descritor do parâmetro.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.GetParameterValues(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Obtém os valores dos parâmetros do método de ação.</summary>
      <returns>Os valores dos parâmetros do método de ação.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Invoca a ação especificada usando o contexto de controlador especificado.</summary>
      <returns>O resultado da execução da ação.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionName">O nome da ação a ser invocada.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="controllerContext" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="actionName" /> é nulo ou está vazio.</exception>
      <exception cref="T:System.Threading.ThreadAbortException">O thread foi anulado durante a invocação da ação.</exception>
      <exception cref="T:System.Exception">Ocorreu um erro não especificado durante a invocação da ação.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Invoca o método de ação especificado usando os parâmetros e o contexto de controlador especificados.</summary>
      <returns>O resultado da execução do método de ação.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
      <param name="parameters">Os parâmetros.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Invoca o método de ação especificado usando os parâmetros, o contexto de controlador e os filtros de ação especificados.</summary>
      <returns>O contexto para o método ActionExecuted da classe <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="filters">Os filtros de ação.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
      <param name="parameters">Os parâmetros.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResult(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>Invoca o resultado da ação especificada usando o contexto de controlador especificado.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionResult">O resultado da ação.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeActionResultWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IResultFilter},System.Web.Mvc.ActionResult)">
      <summary>Invoca o resultado da ação especificada usando os filtros de ação e o contexto de controlador especificados.</summary>
      <returns>O contexto para o método ResultExecuted da classe <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="filters">Os filtros de ação.</param>
      <param name="actionResult">O resultado da ação.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthenticationFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.Filters.IAuthenticationFilter},System.Web.Mvc.ActionDescriptor)"></member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthenticationFiltersChallenge(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.Filters.IAuthenticationFilter},System.Web.Mvc.ActionDescriptor,System.Web.Mvc.ActionResult)"></member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeAuthorizationFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IAuthorizationFilter},System.Web.Mvc.ActionDescriptor)">
      <summary>Invoca os filtros de autorização especificados usando o descritor de ação e o contexto de controlador especificados.</summary>
      <returns>O contexto para o objeto <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="filters">Os filtros de autorização.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerActionInvoker.InvokeExceptionFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IExceptionFilter},System.Exception)">
      <summary>Invoca os filtros de exceção especificados usando a exceção e o contexto de controlador especificados.</summary>
      <returns>O contexto para o objeto <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="filters">Os filtros de exceção.</param>
      <param name="exception">A exceção.</param>
    </member>
    <member name="T:System.Web.Mvc.ControllerBase">
      <summary>Representa a classe base para todos os controladores MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ControllerBase" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ControllerContext">
      <summary>Obtém ou define o contexto do controlador.</summary>
      <returns>O contexto do controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Execute(System.Web.Routing.RequestContext)">
      <summary>Executa o contexto de solicitação especificado.</summary>
      <param name="requestContext">O contexto da solicitação.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="requestContext" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.ExecuteCore">
      <summary>Executa a solicitação.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.Initialize(System.Web.Routing.RequestContext)">
      <summary>Inicializa o contexto de solicitação especificado.</summary>
      <param name="requestContext">O contexto da solicitação.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerBase.System#Web#Mvc#IController#Execute(System.Web.Routing.RequestContext)">
      <summary>Executa o contexto de solicitação especificado.</summary>
      <param name="requestContext">O contexto da solicitação.</param>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.TempData">
      <summary>Obtém ou define o dicionário de dados temporários.</summary>
      <returns>O dicionário de dados temporários.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValidateRequest">
      <summary>Obtém ou define um valor que indica se a validação de solicitação está habilitada para esta solicitação.</summary>
      <returns>verdadeiro se a validação da solicitação estiver habilitada para esta solicitação; caso contrário, falso.O padrão é verdadeiro.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ValueProvider">
      <summary>Obtém ou define o provedor de valor para o controlador.</summary>
      <returns>O provedor de valor para o controlador.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewBag">
      <summary>Obtém o dicionário dinâmico de dados de exibição.</summary>
      <returns>O dicionário dinâmico de dados de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBase.ViewData">
      <summary>Obtém ou define o dicionário de dados de exibição.</summary>
      <returns>O dicionário de dados de exibição.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerBuilder">
      <summary>Representa uma classe que é responsável pela criação dinâmica de um controlador.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ControllerBuilder" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.Current">
      <summary>Obtém o objeto atual construtor do controlador.</summary>
      <returns>O construtor atual do controlador.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerBuilder.DefaultNamespaces">
      <summary>Obtém os namespaces padrão.</summary>
      <returns>Os namespaces padrão.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.GetControllerFactory">
      <summary>Obtém a fábrica do controlador associada.</summary>
      <returns>A fábrica do controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Type)">
      <summary>Define a fábrica do controlador usando o tipo especificado.</summary>
      <param name="controllerFactoryType">O tipo da fábrica do controlador.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="controllerFactoryType" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">Não é possível atribuir a fábrica do controlador do tipo no parâmetro <paramref name="controllerFactoryType" />.</exception>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro enquanto a fábrica do controlador estava sendo definida.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerBuilder.SetControllerFactory(System.Web.Mvc.IControllerFactory)">
      <summary>Define a fábrica do controlador especificada.</summary>
      <param name="controllerFactory">A fábrica do controlador.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="controllerFactory" /> é nulo.</exception>
    </member>
    <member name="T:System.Web.Mvc.ControllerContext">
      <summary>Encapsula informações sobre uma solicitação HTTP que corresponde às instâncias <see cref="T:System.Web.Routing.RouteBase" /> e <see cref="T:System.Web.Mvc.ControllerBase" /> especificadas.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ControllerContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.HttpContextBase,System.Web.Routing.RouteData,System.Web.Mvc.ControllerBase)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ControllerContext" /> usando o contexto HTTP, os dados de rota URL e o controlador especificados.</summary>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="routeData">Os dados de rota.</param>
      <param name="controller">O controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ControllerContext" /> usando o contexto do controlador especificado.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="controllerContext" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerContext.#ctor(System.Web.Routing.RequestContext,System.Web.Mvc.ControllerBase)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ControllerContext" /> usando o contexto de solicitação e o controlador especificados.</summary>
      <param name="requestContext">O contexto da solicitação.</param>
      <param name="controller">O controlador.</param>
      <exception cref="T:System.ArgumentNullException">Um ou mais parâmetros são nulos.</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.Controller">
      <summary>Obtém ou define o controlador.</summary>
      <returns>O controlador.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.DisplayMode">
      <summary>Obtém o modo de exibição.</summary>
      <returns>O modo de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.HttpContext">
      <summary>Obtém ou define o contexto HTTP.</summary>
      <returns>O contexto HTTP.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.IsChildAction">
      <summary>Obtém um valor que indica se o método de ação associado é uma ação filha.</summary>
      <returns>verdadeiro se o método de ação associado for uma ação filha; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.ParentActionViewContext">
      <summary>Obtém um objeto que contém as informações do contexto de exibição para o método de ação pai.</summary>
      <returns>Um objeto que contém as informações do contexto de exibição para o método de ação pai.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RequestContext">
      <summary>Obtém ou define o contexto da solicitação.</summary>
      <returns>O contexto da solicitação.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerContext.RouteData">
      <summary>Obtém ou define os dados de rota URL.</summary>
      <returns>Os dados de rota URL.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerDescriptor">
      <summary>Encapsula informações que descrevem um controlador, como seu nome, tipo e ações.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ControllerDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerName">
      <summary>Obtém o nome do controlador.</summary>
      <returns>O nome do controlador.</returns>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.ControllerType">
      <summary>Obtém o tipo do controlador.</summary>
      <returns>O tipo do controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Encontra um método de ação usando o nome e contexto de controlador especificados.</summary>
      <returns>As informações sobre o método de ação.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionName">O nome da ação.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCanonicalActions">
      <summary>Recupera uma lista dos descritores de método de ação no controlador.</summary>
      <returns>Uma lista dos descritores de método de ação no controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Recupera atributos personalizados definidos para esse membro, excluindo atributos nomeados.</summary>
      <returns>Uma matriz de atributos personalizados ou uma matriz vazia se não existirem atributos personalizados.</returns>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
      <exception cref="T:System.TypeLoadException">Não é possível carregar o tipo de atributo personalizado.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Há mais de um atributo do tipo <paramref name="attributeType" /> definido por este membro.</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Recupera atributos personalizados de um tipo especificado que estão definidos para esse membro, excluindo atributos nomeados.</summary>
      <returns>Uma matriz de atributos personalizados ou uma matriz vazia se não existirem atributos personalizados.</returns>
      <param name="attributeType">O tipo dos atributos personalizados.</param>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
      <exception cref="T:System.TypeLoadException">Não é possível carregar o tipo de atributo personalizado.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Há mais de um atributo do tipo <paramref name="attributeType" /> definido por este membro.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="attributeType" /> é nulo (Nada no Visual Basic).</exception>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Obtém os atributos do filtro.</summary>
      <returns>Os atributos do filtro.</returns>
      <param name="useCache">verdadeiro se o cache deve ser usado; caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.ControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Recupera um valor que indica se uma ou mais instâncias de um atributo personalizado especificado estão definidas para esse membro.</summary>
      <returns>verdadeiro se <paramref name="attributeType" /> estiver definida para esse membro; caso contrário, falso.</returns>
      <param name="attributeType">O tipo do atributo personalizado.</param>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="attributeType" /> é nulo (Nada no Visual Basic).</exception>
    </member>
    <member name="P:System.Web.Mvc.ControllerDescriptor.UniqueId">
      <summary>Quando implementado em uma classe derivada, obtém a ID exclusiva do descritor do controlador usando a inicialização lenta.</summary>
      <returns>A ID exclusiva.</returns>
    </member>
    <member name="T:System.Web.Mvc.ControllerInstanceFilterProvider">
      <summary>Adiciona o controlador à instância <see cref="T:System.Web.Mvc.FilterProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ControllerInstanceFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ControllerInstanceFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Retorna a coleção de filtros da instância do controlador.</summary>
      <returns>A coleção de filtros da instância do controlador.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="T:System.Web.Mvc.CustomModelBinderAttribute">
      <summary>Representa um atributo que invoca um associador de modelo personalizado.</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.CustomModelBinderAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.CustomModelBinderAttribute.GetBinder">
      <summary>Recupera o associador de modelo associado.</summary>
      <returns>Uma referência a um objeto que implementa a interface do <see cref="T:System.Web.Mvc.IModelBinder" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadata">
      <summary>Fornece um contêiner para metadados comuns, para a classe <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" /> e para a classe <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" /> para um modelo de dados.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.#ctor(System.Web.Mvc.DataAnnotationsModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String,System.ComponentModel.DataAnnotations.DisplayColumnAttribute)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" />.</summary>
      <param name="provider">O provedor de metadados do modelo de anotações de dados.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="modelAccessor">O acessador do modelo.</param>
      <param name="modelType">O tipo do modelo.</param>
      <param name="propertyName">O nome da propriedade.</param>
      <param name="displayColumnAttribute">O atributo de coluna de exibição.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadata.GetSimpleDisplayText">
      <summary>Retorna texto simples para os dados do modelo.</summary>
      <returns>Texto simples para os dados do modelo.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider">
      <summary>Implementa o provedor de metadados do modelo padrão para o ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.DataAnnotationsModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Obtém os metadados para a propriedade especificada.</summary>
      <returns>Os metadados para a propriedade.</returns>
      <param name="attributes">Os atributos.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="modelAccessor">O acessador do modelo.</param>
      <param name="modelType">O tipo do modelo.</param>
      <param name="propertyName">O nome da propriedade.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidationFactory">
      <summary>Representa o método que cria uma instância de <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator">
      <summary>Fornece um validador de modelo.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.ValidationAttribute)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" />.</summary>
      <param name="metadata">Os metadados para o modelo.</param>
      <param name="context">O contexto do controlador para o modelo.</param>
      <param name="attribute">O atributo de validação para o modelo.</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.Attribute">
      <summary>Obtém o atributo de validação para o validador do modelo.</summary>
      <returns>O atributo de validação para o validador do modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.ErrorMessage">
      <summary>Obtém a mensagem de erro para a falha de validação.</summary>
      <returns>A mensagem de erro para a falha de validação.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.GetClientValidationRules">
      <summary>Recupera uma coleção de regras de validação do cliente.</summary>
      <returns>Uma coleção de regras de validação do cliente.</returns>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator.IsRequired">
      <summary>Obtém um valor que indica se uma validação de modelo é necessária.</summary>
      <returns>verdadeiro se a validação de modelo for necessária; caso contrário, falso.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator.Validate(System.Object)">
      <summary>Retorna uma lista de mensagens de erro de validação para o modelo.</summary>
      <returns>Uma lista de mensagens de erro de validação para o modelo ou uma lista vazia se não ocorreram erros.</returns>
      <param name="container">O contêiner para o modelo.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidator`1">
      <summary>Fornece um validador de modelo para um tipo de validação especificado.</summary>
      <typeparam name="TAttribute"></typeparam>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidator`1.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,`0)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.DataAnnotationsModelValidator" />.</summary>
      <param name="metadata">Os metadados para o modelo.</param>
      <param name="context">O contexto do controlador para o modelo.</param>
      <param name="attribute">O atributo de validação para o modelo.</param>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidator`1.Attribute">
      <summary>Obtém o atributo de validação do validador do modelo.</summary>
      <returns>O atributo de validação do validador de modelo.</returns>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider">
      <summary>Implementa o provedor de validação padrão para o ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DataAnnotationsModelValidatorProvider.AddImplicitRequiredAttributeForValueTypes">
      <summary>Obtém ou define um valor que indica se os tipos de valor não anuláveis são obrigatórios.</summary>
      <returns>verdadeiro se os tipos de valor não anuláveis forem obrigatórios; caso contrário, falso.</returns>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Obtém uma lista de validadores.</summary>
      <returns>Uma lista de validadores.</returns>
      <param name="metadata">Os metadados.</param>
      <param name="context">O contexto.</param>
      <param name="attributes">A lista de atributos de validação.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapter(System.Type,System.Type)">
      <summary>Registra um adaptador para fornecer a validação do lado do cliente.</summary>
      <param name="attributeType">O tipo do atributo de validação.</param>
      <param name="adapterType">O tipo do adaptador.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>Registra uma fábrica de adaptador para o provedor de validação.</summary>
      <param name="attributeType">O tipo do atributo.</param>
      <param name="factory">A fábrica que será usada para criar o objeto <see cref="T:System.Web.Mvc.ModelValidator" /> para o atributo especificado.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapter(System.Type)">
      <summary>Registra o adaptador padrão.</summary>
      <param name="adapterType">O tipo do adaptador.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapterFactory(System.Web.Mvc.DataAnnotationsModelValidationFactory)">
      <summary>Registra a fábrica de adaptador padrão.</summary>
      <param name="factory">A fábrica que será usada para criar o objeto <see cref="T:System.Web.Mvc.ModelValidator" /> para o adaptador padrão.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapter(System.Type)">
      <summary>Registra um adaptador para fornecer a validação de objeto padrão.</summary>
      <param name="adapterType">O tipo do adaptador.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapterFactory(System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Registra uma fábrica de adaptador para o provedor de validação de objeto padrão.</summary>
      <param name="factory">A fábrica.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapter(System.Type,System.Type)">
      <summary>Registra um adaptador para fornecer a validação de objeto.</summary>
      <param name="modelType">O tipo do modelo.</param>
      <param name="adapterType">O tipo do adaptador.</param>
    </member>
    <member name="M:System.Web.Mvc.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapterFactory(System.Type,System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Registra uma fábrica de adaptador para o provedor de validação de objeto.</summary>
      <param name="modelType">O tipo do modelo.</param>
      <param name="factory">A fábrica.</param>
    </member>
    <member name="T:System.Web.Mvc.DataAnnotationsValidatableObjectAdapterFactory">
      <summary>Fornece uma fábrica para validadores baseados em <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider">
      <summary>Fornece um contêiner para o validador de modelo de informações de erro.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.DataErrorInfoModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DataErrorInfoModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Obtém uma lista de validadores de modelo de informações de erro.</summary>
      <returns>Uma lista de validadores de modelo de informações de erro.</returns>
      <param name="metadata">Os metadados do modelo.</param>
      <param name="context">O contexto do controlador.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultControllerFactory">
      <summary>Representa a fábrica do controlador que é registrada por padrão.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.DefaultControllerFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.#ctor(System.Web.Mvc.IControllerActivator)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.DefaultControllerFactory" /> usando um ativador de controlador.</summary>
      <param name="controllerActivator">Um objeto que implementa a interface do ativador de controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>Cria o controlador especificado usando o contexto de solicitação especificado.</summary>
      <returns>O controlador.</returns>
      <param name="requestContext">O contexto da solicitação HTTP, que inclui o contexto HTTP e os dados de rota.</param>
      <param name="controllerName">O nome do controlador.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="requestContext" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="controllerName" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerInstance(System.Web.Routing.RequestContext,System.Type)">
      <summary>Recupera a instância do controlador para o contexto de solicitação especificado e tipo de controlador.</summary>
      <returns>A instância do controlador.</returns>
      <param name="requestContext">O contexto da solicitação HTTP, que inclui o contexto HTTP e os dados de rota.</param>
      <param name="controllerType">O tipo do controlador.</param>
      <exception cref="T:System.Web.HttpException">
        <paramref name="controllerType" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">Não é possível atribuir <paramref name="controllerType" />.</exception>
      <exception cref="T:System.InvalidOperationException">Não é possível criar uma instância de <paramref name="controllerType" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)">
      <summary>Retorna o comportamento da sessão do controlador.</summary>
      <returns>O comportamento da sessão do controlador.</returns>
      <param name="requestContext">O contexto da solicitação.</param>
      <param name="controllerType">O tipo do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.GetControllerType(System.Web.Routing.RequestContext,System.String)">
      <summary>Recupera o tipo do controlador para o contexto de solicitação e nome especificados.</summary>
      <returns>O tipo do controlador.</returns>
      <param name="requestContext">O contexto da solicitação HTTP, que inclui o contexto HTTP e os dados de rota.</param>
      <param name="controllerName">O nome do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>Libera o controlador especificado.</summary>
      <param name="controller">O controlador a ser liberado.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultControllerFactory.System#Web#Mvc#IControllerFactory#GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>Esta API é compatível com a infraestrutura ASP.NET MVC e não se destina a ser usada diretamente de seu código.Este método chama o método <see cref="M:System.Web.Mvc.DefaultControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.Type)" />.</summary>
      <returns>O comportamento da sessão do controlador.</returns>
      <param name="requestContext">O contexto da solicitação.</param>
      <param name="controllerName">O nome do controlador.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultModelBinder">
      <summary>Mapeia uma solicitação do navegador para um objeto de dados.Essa classe fornece uma implementação concreta de um associador de modelo.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.DefaultModelBinder" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.Binders">
      <summary>Obtém ou define os associadores de modelo para o aplicativo.</summary>
      <returns>Os associadores de modelo para o aplicativo.</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Associa o modelo usando o contexto de controlador e o contexto de associação especificados.</summary>
      <returns>O objeto associado.</returns>
      <param name="controllerContext">O contexto no qual o controlador opera.As informações de contexto incluem o controlador, o conteúdo HTTP, o contexto de solicitação e os dados de rota.</param>
      <param name="bindingContext">O contexto no qual o modelo está associado.O contexto inclui informações como o objeto do modelo, nome do modelo, tipo de modelo, filtro de propriedade e provedor de valor.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="bindingContext " /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.BindProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor)">
      <summary>Associa a propriedade especificada usando o contexto de controlador e contexto de associação especificados e o descritor de propriedade especificado.</summary>
      <param name="controllerContext">O contexto no qual o controlador opera.As informações de contexto incluem o controlador, o conteúdo HTTP, o contexto de solicitação e os dados de rota.</param>
      <param name="bindingContext">O contexto no qual o modelo está associado.O contexto inclui informações como o objeto do modelo, nome do modelo, tipo de modelo, filtro de propriedade e provedor de valor.</param>
      <param name="propertyDescriptor">Descreve uma propriedade a ser associada.O descritor fornece informações como o tipo de componente, tipo de propriedade e valor da propriedade.Ele também fornece métodos para obter ou definir o valor da propriedade.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.Type)">
      <summary>Cria o tipo de modelo especificado usando o contexto de controlador e o contexto de associação especificados.</summary>
      <returns>Um objeto de dados do tipo especificado.</returns>
      <param name="controllerContext">O contexto no qual o controlador opera.As informações de contexto incluem o controlador, o conteúdo HTTP, o contexto de solicitação e os dados de rota.</param>
      <param name="bindingContext">O contexto no qual o modelo está associado.O contexto inclui informações como o objeto do modelo, nome do modelo, tipo de modelo, filtro de propriedade e provedor de valor.</param>
      <param name="modelType">O tipo do objeto de modelo a ser retornado.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.Int32)">
      <summary>Cria um índice (um subíndice) com base em uma categoria de componentes que compõem um índice maior, em que o valor do índice especificado é um número inteiro.</summary>
      <returns>O nome do subíndice.</returns>
      <param name="prefix">O prefixo para o subíndice.</param>
      <param name="index">O valor do índice.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubIndexName(System.String,System.String)">
      <summary>Cria um índice (um subíndice) com base em uma categoria de componentes que compõem um índice maior, em que o valor do índice especificado é uma cadeia de caracteres.</summary>
      <returns>O nome do subíndice.</returns>
      <param name="prefix">O prefixo para o subíndice.</param>
      <param name="index">O valor do índice.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.CreateSubPropertyName(System.String,System.String)">
      <summary>Cria o nome da subpropriedade usando o prefixo e o nome da propriedade especificados.</summary>
      <returns>O nome da subpropriedade.</returns>
      <param name="prefix">O prefixo para a subpropriedade.</param>
      <param name="propertyName">O nome da propriedade.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetFilteredModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Retorna um conjunto de propriedades que correspondem às restrições de filtro da propriedade que são estabelecidas pela <paramref name="binding context" /> especificada.</summary>
      <returns>Um conjunto enumerável de descritores de propriedade.</returns>
      <param name="controllerContext">O contexto no qual o controlador opera.As informações de contexto incluem o controlador, o conteúdo HTTP, o contexto de solicitação e os dados de rota.</param>
      <param name="bindingContext">O contexto no qual o modelo está associado.O contexto inclui informações como o objeto do modelo, nome do modelo, tipo de modelo, filtro de propriedade e provedor de valor.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetModelProperties(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Retorna as propriedades do modelo usando o contexto de controlador e o contexto de associação especificados.</summary>
      <returns>Uma coleção de descritores de propriedade.</returns>
      <param name="controllerContext">O contexto no qual o controlador opera.As informações de contexto incluem o controlador, o conteúdo HTTP, o contexto de solicitação e os dados de rota.</param>
      <param name="bindingContext">O contexto no qual o modelo está associado.O contexto inclui informações como o objeto do modelo, nome do modelo, tipo de modelo, filtro de propriedade e provedor de valor.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetPropertyValue(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Web.Mvc.IModelBinder)">
      <summary>Retorna o valor de uma propriedade usando o contexto de controlador, contexto de associação, descritor de propriedade e associador de propriedade especificados.</summary>
      <returns>Um objeto que representa o valor da propriedade.</returns>
      <param name="controllerContext">O contexto no qual o controlador opera.As informações de contexto incluem o controlador, o conteúdo HTTP, o contexto de solicitação e os dados de rota.</param>
      <param name="bindingContext">O contexto no qual o modelo está associado.O contexto inclui informações como o objeto do modelo, nome do modelo, tipo de modelo, filtro de propriedade e provedor de valor.</param>
      <param name="propertyDescriptor">O descritor da propriedade a ser acessada.O descritor fornece informações como o tipo de componente, tipo de propriedade e valor da propriedade.Ele também fornece métodos para obter ou definir o valor da propriedade.</param>
      <param name="propertyBinder">Um objeto que fornece uma maneira de associar a propriedade.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.GetTypeDescriptor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Retorna o objeto descritor para um tipo que é especificado pelo seu contexto de controlador e contexto de associação.</summary>
      <returns>Um objeto descritor de tipo personalizado.</returns>
      <param name="controllerContext">O contexto no qual o controlador opera.As informações de contexto incluem o controlador, o conteúdo HTTP, o contexto de solicitação e os dados de rota.</param>
      <param name="bindingContext">O contexto no qual o modelo está associado.O contexto inclui informações como o objeto do modelo, nome do modelo, tipo de modelo, filtro de propriedade e provedor de valor.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.IsModelValid(System.Web.Mvc.ModelBindingContext)">
      <summary>Determina se um modelo de dados é válido para o contexto de associação especificado.</summary>
      <returns>verdadeiro se o modelo for válido; caso contrário, falso.</returns>
      <param name="bindingContext">O contexto no qual o modelo está associado.O contexto inclui informações como o objeto do modelo, nome do modelo, tipo de modelo, filtro de propriedade e provedor de valor.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="bindingContext" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Chamado quando o modelo é atualizado.</summary>
      <param name="controllerContext">O contexto no qual o controlador opera.As informações de contexto incluem o controlador, o conteúdo HTTP, o contexto de solicitação e os dados de rota.</param>
      <param name="bindingContext">O contexto no qual o modelo está associado.O contexto inclui informações como o objeto do modelo, nome do modelo, tipo de modelo, filtro de propriedade e provedor de valor.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnModelUpdating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Chamado quando o modelo está sendo atualizado.</summary>
      <returns>verdadeiro se o modelo estiver sendo atualizado; caso contrário, falso.</returns>
      <param name="controllerContext">O contexto no qual o controlador opera.As informações de contexto incluem o controlador, o conteúdo HTTP, o contexto de solicitação e os dados de rota.</param>
      <param name="bindingContext">O contexto no qual o modelo está associado.O contexto inclui informações como o objeto do modelo, nome do modelo, tipo de modelo, filtro de propriedade e provedor de valor.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidated(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Chamado quando a propriedade especificada é validada.</summary>
      <param name="controllerContext">O contexto no qual o controlador opera.As informações de contexto incluem o controlador, o conteúdo HTTP, o contexto de solicitação e os dados de rota.</param>
      <param name="bindingContext">O contexto no qual o modelo está associado.O contexto inclui informações como o objeto do modelo, nome do modelo, tipo de modelo, filtro de propriedade e provedor de valor.</param>
      <param name="propertyDescriptor">Descreve uma propriedade a ser validada.O descritor fornece informações como o tipo de componente, tipo de propriedade e valor da propriedade.Ele também fornece métodos para obter ou definir o valor da propriedade.</param>
      <param name="value">O valor a ser definido para a propriedade.</param>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.OnPropertyValidating(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Chamado quando a propriedade especificada está sendo validada.</summary>
      <returns>verdadeiro se a propriedade estiver sendo validada; caso contrário, falso.</returns>
      <param name="controllerContext">O contexto no qual o controlador opera.As informações de contexto incluem o controlador, o conteúdo HTTP, o contexto de solicitação e os dados de rota.</param>
      <param name="bindingContext">O contexto no qual o modelo está associado.O contexto inclui informações como o objeto do modelo, nome do modelo, tipo de modelo, filtro de propriedade e provedor de valor.</param>
      <param name="propertyDescriptor">Descreve uma propriedade que está sendo validada.O descritor fornece informações como tipo de componente, tipo de propriedade e valor da propriedade.Ele também fornece métodos para obter ou definir o valor da propriedade.</param>
      <param name="value">O valor a ser definido para a propriedade.</param>
    </member>
    <member name="P:System.Web.Mvc.DefaultModelBinder.ResourceClassKey">
      <summary>Obtém ou define o nome do arquivo de recurso (chave de classe) que contém valores de cadeia de caracteres localizados.</summary>
      <returns>O nome do arquivo de recurso (chave de classe).</returns>
    </member>
    <member name="M:System.Web.Mvc.DefaultModelBinder.SetProperty(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext,System.ComponentModel.PropertyDescriptor,System.Object)">
      <summary>Define a propriedade especificada usando o contexto de controlador, contexto de associação e valor da propriedade especificados.</summary>
      <param name="controllerContext">O contexto no qual o controlador opera.As informações de contexto incluem o controlador, o conteúdo HTTP, o contexto de solicitação e os dados de rota.</param>
      <param name="bindingContext">O contexto no qual o modelo está associado.O contexto inclui informações como o objeto do modelo, nome do modelo, tipo de modelo, filtro de propriedade e provedor de valor.</param>
      <param name="propertyDescriptor">Descreve uma propriedade a ser definida.O descritor fornece informações como o tipo de componente, tipo de propriedade e valor da propriedade.Ele também fornece métodos para obter ou definir o valor da propriedade.</param>
      <param name="value">O valor a ser definido para a propriedade.</param>
    </member>
    <member name="T:System.Web.Mvc.DefaultViewLocationCache">
      <summary>Representa um cache de memória para locais de exibição.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.DefaultViewLocationCache" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.#ctor(System.TimeSpan)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.DefaultViewLocationCache" /> usando a duração do cache especificada.</summary>
      <param name="timeSpan">A duração do cache.</param>
      <exception cref="T:System.InvalidOperationException">O atributo Ticks do parâmetro <paramref name="timeSpan" /> é definido como um número negativo.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>Recupera o local de exibição padrão usando o contexto HTTP e a chave de cache especificados.</summary>
      <returns>A localização padrão da exibição.</returns>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="key">A chave de cache</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="httpContext" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.DefaultViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>Insere a exibição no caminho virtual especificado usando o contexto HTTP, a chave de cache e o caminho virtual especificados.</summary>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="key">A chave em cache.</param>
      <param name="virtualPath">O caminho virtual</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="httpContext" /> é nulo.</exception>
    </member>
    <member name="F:System.Web.Mvc.DefaultViewLocationCache.Null">
      <summary>Cria um cache de local de exibição vazio.</summary>
    </member>
    <member name="P:System.Web.Mvc.DefaultViewLocationCache.TimeSpan">
      <summary>Obtém ou define a duração do cache.</summary>
      <returns>A duração do cache.</returns>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolver">
      <summary>Fornece um ponto de registro de resolvedores de dependência que implementam <see cref="T:System.Web.Mvc.IDependencyResolver" /> ou a interface IServiceLocator do Localizador de serviço comum.</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.DependencyResolver" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.Current">
      <summary>Obtém a implementação do resolvedor de dependência.</summary>
      <returns>A implementação do resolvedor de dependência.</returns>
    </member>
    <member name="P:System.Web.Mvc.DependencyResolver.InnerCurrent">
      <summary>Esta API é compatível com a infraestrutura ASP.NET MVC e não se destina a ser usada diretamente de seu código.</summary>
      <returns>A implementação do resolvedor de dependência.</returns>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})">
      <summary>Esta API é compatível com a infraestrutura ASP.NET MVC e não se destina a ser usada diretamente de seu código.</summary>
      <param name="getService">A função que fornece o serviço.</param>
      <param name="getServices">A função que fornece os serviços.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Object)">
      <summary>Esta API é compatível com a infraestrutura ASP.NET MVC e não se destina a ser usada diretamente de seu código.</summary>
      <param name="commonServiceLocator">O localizador de serviço comum.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.InnerSetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>Esta API é compatível com a infraestrutura ASP.NET MVC e não se destina a ser usada diretamente de seu código.</summary>
      <param name="resolver">O objeto que implementa o resolvedor de dependência.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Func{System.Type,System.Object},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Object}})">
      <summary>Fornece um ponto de registro de resolvedores de dependência usando o delegado de serviço especificado e delegados de coleta de serviço especificados.</summary>
      <param name="getService">O delegado do serviço.</param>
      <param name="getServices">Os delegados dos serviços.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Object)">
      <summary>Fornece um ponto de registro de resolvedores de dependência usando o localizador de serviço comum fornecido quando se usa uma interface de localizador de serviço.</summary>
      <param name="commonServiceLocator">O localizador de serviço comum.</param>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolver.SetResolver(System.Web.Mvc.IDependencyResolver)">
      <summary>Fornece um ponto de registro de resolvedores de dependência, usando a interface especificada de resolvedor de dependência.</summary>
      <param name="resolver">O resolvedor de dependência.</param>
    </member>
    <member name="T:System.Web.Mvc.DependencyResolverExtensions">
      <summary>Fornece uma implementação fortemente tipada de <see cref="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)" /> e <see cref="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetService``1(System.Web.Mvc.IDependencyResolver)">
      <summary>Resolve serviços registrados isoladamente que dão suporte à criação do objeto arbitrário.</summary>
      <returns>O objeto ou serviço solicitado.</returns>
      <param name="resolver">A instância do resolvedor de dependência que este método estende.</param>
      <typeparam name="TService">O tipo do objeto ou serviço solicitado.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DependencyResolverExtensions.GetServices``1(System.Web.Mvc.IDependencyResolver)">
      <summary>Resolve serviços registrados de multiplicação.</summary>
      <returns>Os serviços solicitados.</returns>
      <param name="resolver">A instância do resolvedor de dependência que este método estende.</param>
      <typeparam name="TService">O tipo dos serviços solicitados.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.DictionaryValueProvider`1">
      <summary>Representa a classe base para os provedores de valor, cujos valores vêm de uma coleção que implementa a interface <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.#ctor(System.Collections.Generic.IDictionary{System.String,`0},System.Globalization.CultureInfo)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.DictionaryValueProvider`1" />.</summary>
      <param name="dictionary">Os pares nome/valor usados ​​para inicializar o provedor de valor.</param>
      <param name="culture">Informações sobre uma cultura específica, como os nomes da cultura, o sistema de escrita e o calendário usado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="dictionary" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.ContainsPrefix(System.String)">
      <summary>Determina se o conjunto contém o prefixo especificado.</summary>
      <returns>verdadeiro se o conjunto contiver o prefixo especificado; caso contrário, falso.</returns>
      <param name="prefix">O prefixo a ser pesquisado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="prefix" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.GetKeysFromPrefix(System.String)">
      <summary>Obtém as chaves do prefixo.</summary>
      <returns>As chaves do prefixo.</returns>
      <param name="prefix">O prefixo.</param>
    </member>
    <member name="M:System.Web.Mvc.DictionaryValueProvider`1.GetValue(System.String)">
      <summary>Retorna um objeto de valor usando a chave e o contexto de controlador especificados.</summary>
      <returns>O objeto de valor para a chave especificada.</returns>
      <param name="key">A chave do objeto de valor a ser recuperado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="key" /> é nulo.</exception>
    </member>
    <member name="T:System.Web.Mvc.EmptyModelMetadataProvider">
      <summary>Fornece um provedor de metadados vazio para modelos de dados que não necessitam de metadados.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.EmptyModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelMetadataProvider.CreateMetadata(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Cria uma nova instância da classe <see cref="T:System.Web.Mvc.ModelMetadata" />.</summary>
      <returns>Uma nova instância da classe <see cref="T:System.Web.Mvc.ModelMetadata" />.</returns>
      <param name="attributes">Os atributos.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="modelAccessor">O acessador do modelo.</param>
      <param name="modelType">O tipo do modelo.</param>
      <param name="propertyName">O nome do modelo.</param>
    </member>
    <member name="T:System.Web.Mvc.EmptyModelValidatorProvider">
      <summary>Fornece um provedor de validação vazio para modelos que não necessitam de validador.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.EmptyModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Obtém o validador de modelos vazio.</summary>
      <returns>O validador de modelos vazio.</returns>
      <param name="metadata">Os metadados.</param>
      <param name="context">O contexto.</param>
    </member>
    <member name="T:System.Web.Mvc.EmptyResult">
      <summary>Representa um resultado que não faz nada, como um método de ação do controlador que retorna nada.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.EmptyResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.EmptyResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Executa o contexto de resultado especificado.</summary>
      <param name="context">O contexto de resultado.</param>
    </member>
    <member name="T:System.Web.Mvc.ExceptionContext">
      <summary>Fornece o contexto para usar a classe <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ExceptionContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExceptionContext.#ctor(System.Web.Mvc.ControllerContext,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ExceptionContext" /> para a exceção especificada usando o contexto do controlador especificado.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="exception">A exceção.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="exception" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Exception">
      <summary>Obtém ou define o objeto de exceção.</summary>
      <returns>O objeto de exceção.</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.ExceptionHandled">
      <summary>Obtém ou define um valor que indica se a exceção foi tratada.</summary>
      <returns>verdadeiro se a exceção foi tratada; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ExceptionContext.Result">
      <summary>Obtém ou define o resultado da ação.</summary>
      <returns>O resultado da ação.</returns>
    </member>
    <member name="T:System.Web.Mvc.ExpressionHelper">
      <summary>Fornece uma classe auxiliar para obter o nome do modelo a partir de uma expressão.</summary>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.Linq.Expressions.LambdaExpression)">
      <summary>Obtém o nome do modelo a partir de uma expressão lambda.</summary>
      <returns>O nome do modelo.</returns>
      <param name="expression">A expressão.</param>
    </member>
    <member name="M:System.Web.Mvc.ExpressionHelper.GetExpressionText(System.String)">
      <summary>Obtém o nome do modelo a partir de uma expressão de cadeia de caracteres.</summary>
      <returns>O nome do modelo.</returns>
      <param name="expression">A expressão.</param>
    </member>
    <member name="T:System.Web.Mvc.FieldValidationMetadata">
      <summary>Fornece um contêiner para os metadados de validação de campo do lado do cliente.</summary>
    </member>
    <member name="M:System.Web.Mvc.FieldValidationMetadata.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.FieldValidationMetadata" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.FieldName">
      <summary>Obtém ou define o nome do campo de dados.</summary>
      <returns>O nome do campo de dados.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ReplaceValidationMessageContents">
      <summary>Obtém ou define um valor que indica se o conteúdo da mensagem de validação deve ser substituído pelo erro de validação do cliente.</summary>
      <returns>verdadeiro se o conteúdo da mensagem de validação deve ser substituído pelo erro de validação do cliente; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationMessageId">
      <summary>Obtém ou define a ID de mensagem de validador.</summary>
      <returns>A ID de mensagem de validador.</returns>
    </member>
    <member name="P:System.Web.Mvc.FieldValidationMetadata.ValidationRules">
      <summary>Obtém as regras de validação do cliente.</summary>
      <returns>As regras de validação do cliente.</returns>
    </member>
    <member name="T:System.Web.Mvc.FileContentResult">
      <summary>Envia o conteúdo de um arquivo binário para a resposta.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.#ctor(System.Byte[],System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.FileContentResult" /> usando o conteúdo do arquivo e tipo de conteúdo especificados.</summary>
      <param name="fileContents">A matriz de bytes a ser enviada para a resposta.</param>
      <param name="contentType">O tipo de conteúdo a ser usado para a resposta.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="fileContents" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileContentResult.FileContents">
      <summary>O conteúdo binário a ser enviado para a resposta.</summary>
      <returns>O conteúdo do arquivo.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileContentResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Grava o conteúdo do arquivo na resposta.</summary>
      <param name="response">A resposta.</param>
    </member>
    <member name="T:System.Web.Mvc.FilePathResult">
      <summary>Envia o conteúdo de um arquivo à resposta.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.FilePathResult" /> usando o nome de arquivo e o tipo de conteúdo especificados.</summary>
      <param name="fileName">O nome do arquivo a ser enviado para a resposta.</param>
      <param name="contentType">O tipo do conteúdo da resposta.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="fileName" /> é nulo ou está vazio.</exception>
    </member>
    <member name="P:System.Web.Mvc.FilePathResult.FileName">
      <summary>Obtém ou define o caminho do arquivo enviado à resposta.</summary>
      <returns>O caminho do arquivo enviado para a resposta.</returns>
    </member>
    <member name="M:System.Web.Mvc.FilePathResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Grava o arquivo com a resposta.</summary>
      <param name="response">A resposta.</param>
    </member>
    <member name="T:System.Web.Mvc.FileResult">
      <summary>Representa uma classe base usada para enviar conteúdo de arquivo binário para a resposta.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileResult.#ctor(System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.FileResult" />.</summary>
      <param name="contentType">O tipo do conteúdo.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="contentType" /> é nulo ou está vazio.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.ContentType">
      <summary>Obtém o tipo de conteúdo a ser usado para a resposta.</summary>
      <returns>O tipo do conteúdo.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Habilita o processamento do resultado de um método de ação por um tipo personalizado que herda da classe <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">O contexto no qual o resultado é executado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="context" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileResult.FileDownloadName">
      <summary>Obtém ou define o cabeçalho de disposição do conteúdo para que uma caixa de diálogo de download de arquivo seja exibida no navegador com o nome do arquivo especificado.</summary>
      <returns>O nome do arquivo.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Grava o arquivo com a resposta.</summary>
      <param name="response">A resposta.</param>
    </member>
    <member name="T:System.Web.Mvc.FileStreamResult">
      <summary>Envia conteúdo binário para a resposta usando uma instância <see cref="T:System.IO.Stream" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.#ctor(System.IO.Stream,System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.FileStreamResult" />.</summary>
      <param name="fileStream">O fluxo a ser enviado para a resposta.</param>
      <param name="contentType">O tipo de conteúdo a ser usado para a resposta.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="fileStream" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.FileStreamResult.FileStream">
      <summary>Obtém o fluxo que será enviado para a resposta.</summary>
      <returns>O fluxo de arquivo.</returns>
    </member>
    <member name="M:System.Web.Mvc.FileStreamResult.WriteFile(System.Web.HttpResponseBase)">
      <summary>Grava o arquivo com a resposta.</summary>
      <param name="response">A resposta.</param>
    </member>
    <member name="T:System.Web.Mvc.Filter">
      <summary>Representa uma classe de metadados que contém uma referência para a implementação de uma ou mais das interfaces de filtro, da ordem do filtro e do escopo do filtro.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filter.#ctor(System.Object,System.Web.Mvc.FilterScope,System.Nullable{System.Int32})">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Filter" />.</summary>
      <param name="instance">A instância.</param>
      <param name="scope">O escopo.</param>
      <param name="order">A ordem.</param>
    </member>
    <member name="F:System.Web.Mvc.Filter.DefaultOrder">
      <summary>Representa uma constante usada para especificar a ordem padrão de filtros.</summary>
    </member>
    <member name="P:System.Web.Mvc.Filter.Instance">
      <summary>Obtém a instância desta classe.</summary>
      <returns>A instância desta classe.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Order">
      <summary>Obtém a ordem na qual o filtro é aplicado.</summary>
      <returns>A ordem na qual o filtro é aplicado.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filter.Scope">
      <summary>Obtém a ordenação do escopo do filtro.</summary>
      <returns>A ordenação do escopo do filtro.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttribute">
      <summary>Representa a classe base para atributos de filtro de ação e resultado.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.FilterAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.AllowMultiple">
      <summary>Obtém ou define um valor que indica se mais de uma instância do atributo de filtro pode ser especificada.</summary>
      <returns>verdadeiro se mais de uma instância do atributo de filtro puder ser especificada; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterAttribute.Order">
      <summary>Obtém ou define a ordem em que os filtros de ação são executados.</summary>
      <returns>A ordem em que os filtros de ação são executados.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterAttributeFilterProvider">
      <summary>Define um provedor de filtro para os atributos de filtro.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.FilterAttributeFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.#ctor(System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.FilterAttributeFilterProvider" /> e opcionalmente armazena em cache instâncias de atributo.</summary>
      <param name="cacheAttributeInstances">verdadeiro para armazenar em cache instâncias de atributo; caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetActionAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Obtém uma coleção de atributos de ação personalizados.</summary>
      <returns>Uma coleção de atributos de ação personalizados.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetControllerAttributes(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Obtém uma coleção de atributos de controlador.</summary>
      <returns>Uma coleção de atributos de controlador.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterAttributeFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Agrega os filtros de todos os provedores de filtro em uma coleção.</summary>
      <returns>Os filtros de coleção de todos os provedores de filtro.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="T:System.Web.Mvc.FilterInfo">
      <summary>Encapsula informações sobre os filtros de ação disponíveis.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.FilterInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterInfo.#ctor(System.Collections.Generic.IEnumerable{System.Web.Mvc.Filter})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.FilterInfo" /> usando a coleção de filtros especificada.</summary>
      <param name="filters">A coleção de filtros.</param>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ActionFilters">
      <summary>Obtém todos os filtros de ação do aplicativo.</summary>
      <returns>Os filtros de ação.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.AuthenticationFilters">
      <summary>Obtém todos os filtros de autenticação no aplicativo.</summary>
      <returns>A lista de filtros de autenticação.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.AuthorizationFilters">
      <summary>Obtém todos os filtros de autorização do aplicativo.</summary>
      <returns>Os filtros de autorização.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ExceptionFilters">
      <summary>Obtém todos os filtros de exceção do aplicativo.</summary>
      <returns>Os filtros de exceção.</returns>
    </member>
    <member name="P:System.Web.Mvc.FilterInfo.ResultFilters">
      <summary>Obtém todos os filtros de resultado no aplicativo.</summary>
      <returns>Os filtros de resultado.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterProviderCollection">
      <summary>Representa a coleção de provedores de filtro para o aplicativo.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.FilterProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IFilterProvider})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.FilterProviderCollection" /> com a lista especificada de provedores de filtro.</summary>
      <param name="providers">A lista de provedores de filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.ClearItems">
      <summary>Remove todos os elementos da coleção.</summary>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Retorna a coleção de provedores de filtro.</summary>
      <returns>A coleção de provedores de filtro.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IFilterProvider)">
      <summary>Insere um elemento na coleção no índice especificado.</summary>
      <param name="index">O índice baseado em zero em que o item deve ser inserido.</param>
      <param name="item">O objeto a ser inserido.O valor pode ser nulo para tipos de referência.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.RemoveItem(System.Int32)">
      <summary>Remove o elemento no índice especificado da coleção.</summary>
      <param name="index">O índice baseado em zero do elemento a ser removido.</param>
    </member>
    <member name="M:System.Web.Mvc.FilterProviderCollection.SetItem(System.Int32,System.Web.Mvc.IFilterProvider)">
      <summary>Substitui o elemento no índice especificado.</summary>
      <param name="index">O índice baseado em zero do elemento a ser substituído.</param>
      <param name="item">O novo valor do elemento no índice especificado.O valor pode ser nulo para tipos de referência.</param>
    </member>
    <member name="T:System.Web.Mvc.FilterProviders">
      <summary>Fornece um ponto de registro para filtros.</summary>
    </member>
    <member name="P:System.Web.Mvc.FilterProviders.Providers">
      <summary>Fornece um ponto de registro para filtros.</summary>
      <returns>A coleção de filtros.</returns>
    </member>
    <member name="T:System.Web.Mvc.FilterScope">
      <summary>Define valores que especificam a ordem em que os filtros ASP.NET MVC são executados no mesmo tipo e ordem do filtro.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Action">
      <summary>Especifica uma ordem antes de <see cref="F:System.Web.Mvc.FilterScope.Last" /> e após o <see cref="F:System.Web.Mvc.FilterScope.Controller" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Controller">
      <summary>Especifica uma ordem antes de <see cref="F:System.Web.Mvc.FilterScope.Action" /> e após o <see cref="F:System.Web.Mvc.FilterScope.Global" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.First">
      <summary>Especifica primeiro.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Global">
      <summary>Especifica uma ordem antes de <see cref="F:System.Web.Mvc.FilterScope.Controller" /> e após o <see cref="F:System.Web.Mvc.FilterScope.First" />.</summary>
    </member>
    <member name="F:System.Web.Mvc.FilterScope.Last">
      <summary>Especifica por último.</summary>
    </member>
    <member name="T:System.Web.Mvc.FormCollection">
      <summary>Contém os provedores de valor de formulário para o aplicativo.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.FormCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.#ctor(System.Collections.Specialized.NameValueCollection)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.FormCollection" />.</summary>
      <param name="collection">A coleção.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="collection" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.GetValue(System.String)">
      <summary>Obtém o provedor de valor especificado.</summary>
      <returns>O provedor de valor.</returns>
      <param name="name">O nome do provedor de valor a ser obtido.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>Obtém um valor que indica se o provedor de valor contém uma entrada que tem o prefixo especificado.</summary>
      <returns>verdadeiro se o provedor de valor contiver uma entrada que tem o prefixo especificado; caso contrário, falso.</returns>
      <param name="prefix">O prefixo a ser procurado.</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>Obtém um valor do provedor de valor usando a chave especificada.</summary>
      <returns>Um valor do provedor de valor.</returns>
      <param name="key">A chave.</param>
    </member>
    <member name="M:System.Web.Mvc.FormCollection.ToValueProvider">
      <summary>Retorna um dicionário que contém os provedores de valor.</summary>
      <returns>Um dicionários dos provedores de valor.</returns>
    </member>
    <member name="T:System.Web.Mvc.FormContext">
      <summary>Encapsula informações necessárias para validar e processar os dados de entrada de um formulário HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormContext.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.FormContext" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FieldValidators">
      <summary>Obtém os validadores de campo para o formulário.</summary>
      <returns>Um dicionário de validadores de campo para o formulário.</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.FormId">
      <summary>Obtém ou define o identificador de formulário.</summary>
      <returns>O identificador de formulário.</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetJsonValidationMetadata">
      <summary>Retorna um objeto serializado que contém o identificador de formulário e valores de validação de campo para o formulário.</summary>
      <returns>Um objeto serializado que contém o identificador de formulário e valores de validação de campo para o formulário.</returns>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String)">
      <summary>Retorna o valor de validação para o campo de entrada especificado.</summary>
      <returns>O valor com o qual validar a entrada do campo.</returns>
      <param name="fieldName">O nome do campo para o qual recuperar o valor de validação.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="fieldName" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.GetValidationMetadataForField(System.String,System.Boolean)">
      <summary>Retorna o valor de validação para o campo de entrada especificado e um valor que indica o que fazer se o valor de validação não for encontrado.</summary>
      <returns>O valor com o qual validar a entrada do campo.</returns>
      <param name="fieldName">O nome do campo para o qual recuperar o valor de validação.</param>
      <param name="createIfNotFound">verdadeiro para criar um valor de validação se um não for encontrado; caso contrário, falso.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="fieldName" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String)">
      <summary>Retorna um valor que indica se o campo especificado foi renderizado no formulário.</summary>
      <returns>verdadeiro se o campo tiver sido renderizado; caso contrário, falso.</returns>
      <param name="fieldName">O nome do campo.</param>
    </member>
    <member name="M:System.Web.Mvc.FormContext.RenderedField(System.String,System.Boolean)">
      <summary>Define um valor que indica se o campo especificado foi renderizado no formulário.</summary>
      <param name="fieldName">O nome do campo.</param>
      <param name="value">verdadeiro para especificar que o campo foi renderizado no formulário; caso contrário, falso.</param>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ReplaceValidationSummary">
      <summary>Determina se os erros de validação de cliente devem ser adicionados dinamicamente ao resumo de validação.</summary>
      <returns>verdadeiro se os erros de validação de cliente devem ser adicionados ao resumo de validação; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.FormContext.ValidationSummaryId">
      <summary>Obtém ou define o identificador para o resumo de validação.</summary>
      <returns>O identificador para o resumo de validação.</returns>
    </member>
    <member name="T:System.Web.Mvc.FormMethod">
      <summary>Enumera os tipos de solicitação HTTP para um formulário.</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Get">
      <summary>Especifica uma solicitação GET.</summary>
    </member>
    <member name="F:System.Web.Mvc.FormMethod.Post">
      <summary>Especifica uma solicitação POST.</summary>
    </member>
    <member name="T:System.Web.Mvc.FormValueProvider">
      <summary>Representa um provedor de valor para valores de formulário contidos em um objeto <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.FormValueProvider" />.</summary>
      <param name="controllerContext">Um objeto que encapsula informações sobre a solicitação HTTP atual.</param>
    </member>
    <member name="T:System.Web.Mvc.FormValueProviderFactory">
      <summary>Representa uma classe responsável pela criação de uma nova instância de um objeto de provedor de valor de formulário.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.FormValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.FormValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Retorna um objeto de provedor de valor de formulário para o contexto de controlador especificado.</summary>
      <returns>Um objeto de provedor de valor de formulário.</returns>
      <param name="controllerContext">Um objeto que encapsula informações sobre a solicitação HTTP atual.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="controllerContext" /> é nulo.</exception>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilterCollection">
      <summary>Representa uma classe que contém todos os filtros globais.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.GlobalFilterCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object)">
      <summary>Adiciona o filtro especificado à coleção de filtros globais.</summary>
      <param name="filter">O filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Add(System.Object,System.Int32)">
      <summary>Adiciona o filtro especificado à coleção de filtros globais usando a ordem de execução de filtro especificada.</summary>
      <param name="filter">O filtro.</param>
      <param name="order">A ordem de execução de filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Clear">
      <summary>Remove todos os filtros da coleção de filtros globais.</summary>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Contains(System.Object)">
      <summary>Determina se um filtro está na coleção de filtros globais.</summary>
      <returns>verdadeiro se <paramref name="filter" /> for encontrado na coleção de filtros globais; caso contrário, falso.</returns>
      <param name="filter">O filtro.</param>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilterCollection.Count">
      <summary>Obtém o número de filtros na coleção de filtros globais.</summary>
      <returns>O número de filtros na coleção de filtros globais.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.GetEnumerator">
      <summary>Retorna um enumerador que itera por meio da coleção de filtros globais.</summary>
      <returns>Um enumerador que itera por meio da coleção de filtros globais.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.Remove(System.Object)">
      <summary>Remove todos os filtros que correspondem ao filtro especificado.</summary>
      <param name="filter">O filtro a ser removido.</param>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Esta API é compatível com a infraestrutura ASP.NET MVC e não se destina a ser usada diretamente de seu código. </summary>
      <returns>Um enumerador que itera por meio da coleção de filtros globais.</returns>
    </member>
    <member name="M:System.Web.Mvc.GlobalFilterCollection.System#Web#Mvc#IFilterProvider#GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Esta API é compatível com a infraestrutura ASP.NET MVC e não se destina a ser usada diretamente de seu código.</summary>
      <returns>Um enumerador que itera por meio da coleção de filtros globais.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="T:System.Web.Mvc.GlobalFilters">
      <summary>Representa a coleção de filtros globais.</summary>
    </member>
    <member name="P:System.Web.Mvc.GlobalFilters.Filters">
      <summary>Obtém ou define a coleção de filtros globais.</summary>
      <returns>A coleção de filtros globais.</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorAttribute">
      <summary>Representa um atributo usado para tratar uma exceção que é lançada por um método de ação.</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.HandleErrorAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.ExceptionType">
      <summary>Obtém ou define o tipo da exceção.</summary>
      <returns>O tipo da exceção.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.Master">
      <summary>Obtém ou define o modo de exibição mestre para exibir informações de exceção.</summary>
      <returns>O modo de exibição mestre.</returns>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Chamado quando ocorre uma exceção.</summary>
      <param name="filterContext">O contexto do filtro de ação.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="filterContext" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.TypeId">
      <summary>Obtém um identificador exclusivo para este atributo.</summary>
      <returns>O identificador exclusivo para este atributo.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorAttribute.View">
      <summary>Obtém ou define a exibição de página para exibir informações de exceção.</summary>
      <returns>A exibição de página.</returns>
    </member>
    <member name="T:System.Web.Mvc.HandleErrorInfo">
      <summary>Encapsula as informações para tratamento de um erro que foi lançado por um método de ação.</summary>
    </member>
    <member name="M:System.Web.Mvc.HandleErrorInfo.#ctor(System.Exception,System.String,System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.HandleErrorInfo" />.</summary>
      <param name="exception">A exceção.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="actionName">O nome da ação.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="exception" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="controllerName" /> ou <paramref name="actionName" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ActionName">
      <summary>Obtém ou define o nome da ação que estava sendo executada quando a exceção foi lançada.</summary>
      <returns>O nome da ação.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.ControllerName">
      <summary>Obtém ou define o nome do controlador que contém o método de ação que lançou a exceção.</summary>
      <returns>O nome do controlador.</returns>
    </member>
    <member name="P:System.Web.Mvc.HandleErrorInfo.Exception">
      <summary>Obtém ou define o objeto de exceção.</summary>
      <returns>O objeto de exceção.</returns>
    </member>
    <member name="T:System.Web.Mvc.HiddenInputAttribute">
      <summary>Representa um atributo usado para indicar se um valor de propriedade ou de campo deve ser renderizado como elemento de entrada oculto.</summary>
    </member>
    <member name="M:System.Web.Mvc.HiddenInputAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.HiddenInputAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.HiddenInputAttribute.DisplayValue">
      <summary>Obtém ou define um valor que indica se será exibido ou não o valor do elemento de entrada oculto.</summary>
      <returns>verdadeiro se o valor deve ser exibido; caso contrário, falso.</returns>
    </member>
    <member name="T:System.Web.Mvc.Html5DateRenderingMode">
      <summary>Enumera o modo de renderização de data para HTML5.</summary>
    </member>
    <member name="F:System.Web.Mvc.Html5DateRenderingMode.CurrentCulture">
      <summary>A formatação da cultura atual.</summary>
    </member>
    <member name="F:System.Web.Mvc.Html5DateRenderingMode.Rfc3339">
      <summary>A formatação RFC 3339.</summary>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper">
      <summary>Suporta a renderização de controles HTML em uma exibição.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.HtmlHelper" /> ao usar o contexto da exibição e contêiner de dados de exibição especificados.</summary>
      <param name="viewContext">O contexto da exibição.</param>
      <param name="viewDataContainer">O contêiner de dados de exibição.</param>
      <exception cref="T:System.ArgumentNullException">O <see cref="T:System.Web.Mvc.ViewContext" /> ou o parâmetro viewDataContainer é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.HtmlHelper" /> ao usar o contexto da exibição, contêiner de dados de exibição e coleção de rotas especificados.</summary>
      <param name="viewContext">O contexto da exibição.</param>
      <param name="viewDataContainer">O contêiner de dados de exibição.</param>
      <param name="routeCollection">A coleção de rotas.</param>
      <exception cref="T:System.ArgumentNullException">Um ou mais parâmetros são nulos.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AnonymousObjectToHtmlAttributes(System.Object)">
      <summary>Substitui caracteres de sublinhado (_) por hífenes (-) nos atributos HTML especificados.</summary>
      <returns>Os atributos HTML com caracteres de sublinhado substituídos por hífenes.</returns>
      <param name="htmlAttributes">Os atributos HTML.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken">
      <summary>Gera um campo de formulário oculto (token antifalsificação) que é validado quando o formulário é enviado.</summary>
      <returns>O campo de formulário gerado (token antifalsificação).</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String)">
      <summary>Gera um campo de formulário oculto (token antifalsificação) que é validado quando o formulário é enviado.O valor do campo é gerado usando o valor de sal especificado.</summary>
      <returns>O campo de formulário gerado (token antifalsificação).</returns>
      <param name="salt">O valor de sal, que pode ser qualquer cadeia de caracteres não vazia.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String,System.String,System.String)">
      <summary>Gera um campo de formulário oculto (token antifalsificação) que é validado quando o formulário é enviado.O valor do campo é gerado usando o valor de sal, domínio e caminho especificados.</summary>
      <returns>O campo de formulário gerado (token antifalsificação).</returns>
      <param name="salt">O valor de sal, que pode ser qualquer cadeia de caracteres não vazia.</param>
      <param name="domain">O domínio do aplicativo.</param>
      <param name="path">O caminho virtual.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.Object)">
      <summary>Converte o valor de atributo especificado em uma cadeia de caracteres codificada em HTML.</summary>
      <returns>A cadeia de caracteres codificada em HTML.Se o parâmetro de valor for nulo ou estiver vazio, este método retornará uma cadeia de caracteres vazia.</returns>
      <param name="value">O objeto a ser codificado.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.String)">
      <summary>Converte o valor de atributo especificado em uma cadeia de caracteres codificada em HTML.</summary>
      <returns>A cadeia de caracteres codificada em HTML.Se o parâmetro de valor for nulo ou estiver vazio, este método retornará uma cadeia de caracteres vazia.</returns>
      <param name="value">A cadeia de caracteres a ser codificada.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ClientValidationEnabled">
      <summary>Obtém ou define um valor que indica se a validação de cliente está habilitada.</summary>
      <returns>verdadeiro se habilitar a validação do cliente estiver habilitada; caso contrário, falso.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation">
      <summary>Habilita a validação de entrada que é realizada usando script de cliente no navegador.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableClientValidation(System.Boolean)">
      <summary>Habilita ou desabilita a validação do cliente.</summary>
      <param name="enabled">verdadeiro para habilitar a validação do cliente; caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript">
      <summary>Habilita ou desabilita o JavaScript discreto.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.EnableUnobtrusiveJavaScript(System.Boolean)">
      <summary>Habilita ou desabilita o JavaScript discreto.</summary>
      <param name="enabled">verdadeiro para habilitar o JavaScript discreto; caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.Object)">
      <summary>Converte o valor do objeto especificado em uma cadeia de caracteres codificada em HTML.</summary>
      <returns>A cadeia de caracteres codificada em HTML.</returns>
      <param name="value">O objeto a ser codificado.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.String)">
      <summary>Converte a cadeia de caracteres especificada em uma cadeia de caracteres codificada em HTML.</summary>
      <returns>A cadeia de caracteres codificada em HTML.</returns>
      <param name="value">A cadeia de caracteres a ser codificada.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.FormatValue(System.Object,System.String)">
      <summary>Formata o valor.</summary>
      <returns>O valor formatado.</returns>
      <param name="value">O valor.</param>
      <param name="format">A cadeia de caracteres de formato.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String)">
      <summary>Cria uma ID de elemento HTML usando o nome do elemento especificado.</summary>
      <returns>A ID do elemento HTML.</returns>
      <param name="name">O nome do elemento HTML.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro name é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateIdFromName(System.String,System.String)">
      <summary>Cria uma ID de elemento HTML usando o nome do elemento especificado e uma cadeia de caracteres que substitui os pontos no nome.</summary>
      <returns>A ID do elemento HTML.</returns>
      <param name="name">O nome do elemento HTML.</param>
      <param name="idAttributeDotReplacement">A cadeia de caracteres que representa pontos (.) no parâmetro de nome.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro name ou o parâmetro idAttributeDotReplacement é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gera um elemento âncora HTML (elemento a) que vincula-se ao método de ação especificado e habilita o usuário a especificar o protocolo de comunicação, nome do host e um fragmento de URL.</summary>
      <returns>Um elemento HTML que vincula-se ao método de ação especificado.</returns>
      <param name="requestContext">O contexto da solicitação HTTP.</param>
      <param name="routeCollection">A coleção de rotas de URL.</param>
      <param name="linkText">A legenda de texto a ser exibida para o link.</param>
      <param name="routeName">O nome da rota que é usada para retornar um caminho virtual.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="protocol">O protocolo de comunicação, tal como HTTP ou HTTPS.Se este parâmetro for nulo, o protocolo usa por padrão o HTTP.</param>
      <param name="hostName">O nome do host.</param>
      <param name="fragment">O identificador do fragmento.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gera um elemento âncora HTML (elemento a) que vincula-se ao método de ação especificado.</summary>
      <returns>Um elemento HTML que vincula-se ao método de ação especificado.</returns>
      <param name="requestContext">O contexto da solicitação HTTP.</param>
      <param name="routeCollection">A coleção de rotas de URL.</param>
      <param name="linkText">A legenda de texto a ser exibida para o link.</param>
      <param name="routeName">O nome da rota que é usada para retornar um caminho virtual.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gera um elemento âncora HTML (elemento a) que vincula-se à rota de URL especificada e habilita o usuário a especificar o protocolo de comunicação, nome do host e um fragmento de URL.</summary>
      <returns>Um elemento HTML que vincula-se à rota de URL especificada.</returns>
      <param name="requestContext">O contexto da solicitação HTTP.</param>
      <param name="routeCollection">A coleção de rotas de URL.</param>
      <param name="linkText">A legenda de texto a ser exibida para o link.</param>
      <param name="routeName">O nome da rota que é usada para retornar um caminho virtual.</param>
      <param name="protocol">O protocolo de comunicação, tal como HTTP ou HTTPS.Se este parâmetro for nulo, o protocolo usa por padrão o HTTP.</param>
      <param name="hostName">O nome do host.</param>
      <param name="fragment">O identificador do fragmento.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GenerateRouteLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Gera um elemento âncora HTML (elemento a) que vincula-se a uma rota de URL especificada.</summary>
      <returns>Um elemento HTML que vincula-se à rota de URL especificada.</returns>
      <param name="requestContext">O contexto da solicitação HTTP.</param>
      <param name="routeCollection">A coleção de rotas de URL.</param>
      <param name="linkText">A legenda de texto a ser exibida para o link.</param>
      <param name="routeName">O nome da rota que é usada para retornar um caminho virtual.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetFormMethodString(System.Web.Mvc.FormMethod)">
      <summary>Retorna o método HTTP que trata a entrada de formulário (GET ou POST) como uma cadeia de caracteres.</summary>
      <returns>A cadeia de caracteres do método de formulário, seja "get" ou "post".</returns>
      <param name="method">O método HTTP que trata do formulário.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetInputTypeString(System.Web.Mvc.InputType)">
      <summary>Retorna o tipo de controle HTML de entrada como uma cadeia de caracteres.</summary>
      <returns>A cadeia de caracteres de tipo de entrada ("caixa de seleção", "oculto", "senha", "opção" ou "texto").</returns>
      <param name="inputType">O tipo de entrada enumerado.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String)">
      <summary>Obtém a coleção de atributos de validação de JavaScript discreto usando o atributo HTML de nome especificado.</summary>
      <returns>A coleção de atributos de validação de JavaScript discreto.</returns>
      <param name="name">O atributo do nome de HTML.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.GetUnobtrusiveValidationAttributes(System.String,System.Web.Mvc.ModelMetadata)">
      <summary>Obtém a coleção de atributos de validação de JavaScript discreto usando o atributo HTML de nome e metadados de modelo especificados.</summary>
      <returns>A coleção de atributos de validação de JavaScript discreto.</returns>
      <param name="name">O atributo do nome de HTML.</param>
      <param name="metadata">Os metadados do modelo.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.Html5DateRenderingMode">
      <summary>Obtém ou define o modo de renderização de data HTML5.</summary>
      <returns>O modo de renderização de data HTML5.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.String)">
      <summary>Retorna um elemento de entrada oculta que identifica o método de substituição para o método HTTP de transferência de dados especificado que foi usado pelo cliente.</summary>
      <returns>O método de substituição que usa o método HTTP de transferência de dados usado pelo cliente.</returns>
      <param name="httpMethod">O método HTTP de transferência de dados usado pelo cliente (DELETE, HEAD ou PUT).</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro httpVerb não é "PUT", "DELETE" nem "HEAD".</exception>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.HttpMethodOverride(System.Web.Mvc.HttpVerbs)">
      <summary>Retorna um elemento de entrada oculto que identifica o método de substituição para o verbo especificado que representa o método HTTP de transferência de dados usado pelo cliente.</summary>
      <returns>O método de substituição que usa o verbo que representa o método HTTP de transferência de dados usado pelo cliente.</returns>
      <param name="httpVerb">O verbo que representa o método HTTP de transferência de dados usado pelo cliente.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro httpVerb não é "PUT", "DELETE" nem "HEAD".</exception>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.IdAttributeDotReplacement">
      <summary>Obtém ou define o caractere que substitui os pontos no atributo de ID de um elemento.</summary>
      <returns>O caractere que substitui pontos no atributo de ID de um elemento.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.ObjectToDictionary(System.Object)">
      <summary>Cria um dicionário de um objeto, ao adicionar cada propriedade de instância pública como uma chave com seu valor associado ao dicionário.Isso também exporá as propriedades públicas dos tipos derivados.Isso é normalmente usado com objetos de um tipo anônimo.</summary>
      <returns>O dicionário criado de nomes e valores de propriedade.</returns>
      <param name="value">O objeto a ser convertido.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Raw(System.Object)">
      <summary>Retorna marcação que não esteja codificada em HTML.</summary>
      <returns>A marcação HTML sem codificação.</returns>
      <param name="value">A marcação HTML.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.Raw(System.String)">
      <summary>Retorna marcação que não esteja codificada em HTML.</summary>
      <returns>A marcação HTML sem codificação.</returns>
      <param name="value">A marcação HTML.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.RouteCollection">
      <summary>Obtém ou define a coleção de rotas para o aplicativo.</summary>
      <returns>A coleção de rotas para o aplicativo.</returns>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.SetValidationMessageElement(System.String)">
      <summary>Defina o nome do elemento usado para envolver a mensagem de validação gerada por <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)" /> e outras sobrecargas.</summary>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper.SetValidationSummaryMessageElement(System.String)">
      <summary>Defina o nome do elemento usado para envolver uma mensagem de nível superior em <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)" /> e outras sobrecargas.</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.UnobtrusiveJavaScriptEnabled">
      <summary>Obtém ou define um valor que indica se o JavaScript discreto está habilitado.</summary>
      <returns>verdadeiro se o JavaScript discreto estiver habilitado; caso contrário, falso.</returns>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputCssClassName">
      <summary>O nome da classe CSS usada para fazer o estilo de um campo de entrada quando um erro de validação ocorre.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationInputValidCssClassName">
      <summary>O nome da classe CSS usada para fazer o estilo de um campo de entrada quando a entrada é válida.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageCssClassName">
      <summary>O nome da classe CSS usada para fazer o estilo da mensagem de erro quando um erro de validação ocorre.</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ValidationMessageElement">
      <summary>Nome do elemento usado para envolver a mensagem de validação gerada por <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)" /> e outras sobrecargas.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationMessageValidCssClassName">
      <summary>O nome da classe CSS usada para fazer o estilo da mensagem de validação quando a entrada é válida.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryCssClassName">
      <summary>O nome da classe CSS usada para fazer o estilo de mensagens de resumo de erro de validação.</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ValidationSummaryMessageElement">
      <summary>Nome do elemento usado para envolver uma mensagem de nível superior em <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)" /> e outras sobrecargas.</summary>
    </member>
    <member name="F:System.Web.Mvc.HtmlHelper.ValidationSummaryValidCssClassName">
      <summary>O nome da classe CSS usada para fazer o estilo do resumo da validação quando a entrada é válida.</summary>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewBag">
      <summary>Obtém o multiconjunto da exibição.</summary>
      <returns>O multiconjunto da exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewContext">
      <summary>Obtém ou define as informações de contexto sobre a exibição.</summary>
      <returns>O contexto da exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewData">
      <summary>Obtém o dicionário atual de dados de exibição.</summary>
      <returns>O dicionário de dados de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper.ViewDataContainer">
      <summary>Obtém ou define o contêiner de dados de exibição.</summary>
      <returns>O contêiner de dados de exibição.</returns>
    </member>
    <member name="T:System.Web.Mvc.HtmlHelper`1">
      <summary>Representa o suporte para a renderização de controles HTML em uma exibição fortemente tipada.</summary>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.HtmlHelper`1" /> ao usar o contexto da exibição e contêiner de dados de exibição especificados.</summary>
      <param name="viewContext">O contexto da exibição.</param>
      <param name="viewDataContainer">O contêiner de dados de exibição.</param>
    </member>
    <member name="M:System.Web.Mvc.HtmlHelper`1.#ctor(System.Web.Mvc.ViewContext,System.Web.Mvc.IViewDataContainer,System.Web.Routing.RouteCollection)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.HtmlHelper`1" /> ao usar o contexto da exibição, contêiner de dados de exibição e coleção de rotas especificados.</summary>
      <param name="viewContext">O contexto da exibição.</param>
      <param name="viewDataContainer">O contêiner de dados de exibição.</param>
      <param name="routeCollection">A coleção de rotas.</param>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper`1.ViewBag">
      <summary>Obtém o multiconjunto da exibição.</summary>
      <returns>O multiconjunto da exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.HtmlHelper`1.ViewData">
      <summary>Obtém o dicionário de dados de exibição fortemente tipado.</summary>
      <returns>O dicionário de dados de exibição fortemente tipado.</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpDeleteAttribute">
      <summary>Representa um atributo usado para restringir um método de ação para que o método trate apenas de solicitações HTTP DELETE.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.HttpDeleteAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpDeleteAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina se a solicitação de exclusão do método de ação é válida para o contexto de controlador especificado.</summary>
      <returns>verdadeiro se a solicitação do método de ação for válida para o contexto de controlador especificado; caso contrário, falso.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="methodInfo">Informações sobre o método de ação.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProvider">
      <summary>Representa um provedor de valores a ser usado com valores que vêm de uma coleção de arquivos HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.HttpFileCollectionValueProvider" />.</summary>
      <param name="controllerContext">Um objeto que encapsula informações sobre a solicitação HTTP atual.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory">
      <summary>Representa uma classe que é responsável pela criação de uma nova instância de um objeto de provedor de valor de coleção de arquivos HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.HttpFileCollectionValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpFileCollectionValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Retorna um objeto de provedor de valor para o contexto de controlador especificado.</summary>
      <returns>Um provedor de valor da coleção de arquivos HTTP.</returns>
      <param name="controllerContext">Um objeto que encapsula informações sobre a solicitação HTTP.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="controllerContext" /> é nulo.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpGetAttribute">
      <summary>Representa um atributo usado para restringir um método de ação a fim de que o método trate apenas das solicitações HTTP GET.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.HttpGetAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpGetAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina se a solicitação para obter método de ação é válida para o contexto de controlador especificado.</summary>
      <returns>verdadeiro se a solicitação do método de ação for válida para o contexto de controlador especificado; caso contrário, falso.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="methodInfo">Informações sobre o método de ação.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpHeadAttribute">
      <summary>Especifica que a solicitação HTTP deve ser o método HTTP HEAD.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpHeadAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.HttpHeadAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpHeadAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina se a solicitação do método de ação é válida para o contexto de controlador especificado.</summary>
      <returns>verdadeiro se a solicitação do método de ação for válida para o contexto de controlador especificado; caso contrário, falso.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="methodInfo">Informações sobre o método de ação.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpNotFoundResult">
      <summary>Define um objeto usado para indicar que o recurso solicitado não foi encontrado.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.HttpNotFoundResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpNotFoundResult.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.HttpNotFoundResult" /> usando uma descrição de status.</summary>
      <param name="statusDescription">A descrição do status.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpOptionsAttribute">
      <summary>Representa um atributo usado para restringir um método de ação a fim de que o método trate apenas das solicitações HTTP OPTIONS.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpOptionsAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.HttpOptionsAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpOptionsAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina se a solicitação do método de ação é válida para o contexto de controlador especificado.</summary>
      <returns>verdadeiro se a solicitação do método de ação for válida para o contexto de controlador especificado; caso contrário, falso.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="methodInfo">Informações sobre o método de ação.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPatchAttribute">
      <summary>Representa um atributo usado para restringir um método de ação a fim de que o método trate apenas das solicitações HTTP PATCH.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPatchAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.HttpPatchAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPatchAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina se a solicitação do método de ação é válida para o contexto de controlador especificado.</summary>
      <returns>verdadeiro se a solicitação do método de ação for válida para o contexto de controlador especificado; caso contrário, falso.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="methodInfo">Informações sobre o método de ação.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostAttribute">
      <summary>Representa um atributo usado para restringir um método de ação a fim de que o método trate apenas das solicitações HTTP POST.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.HttpPostAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina se a solicitação para publicar método de ação é válida para o contexto de controlador especificado.</summary>
      <returns>verdadeiro se a solicitação do método de ação for válida para o contexto de controlador especificado; caso contrário, falso.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="methodInfo">Informações sobre o método de ação.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpPostedFileBaseModelBinder">
      <summary>Associa um modelo a um arquivo publicado.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.HttpPostedFileBaseModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPostedFileBaseModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Associa o modelo.</summary>
      <returns>O valor associado.Implementa<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" /></returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="bindingContext">O contexto de associação.</param>
      <exception cref="T:System.ArgumentNullException">Um ou mais parâmetros são nulos.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpPutAttribute">
      <summary>Representa um atributo usado para restringir um método de ação para que o método trate apenas de solicitações HTTP PUT.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.HttpPutAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpPutAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina se a solicitação Put do método de ação é válida para o contexto de controlador especificado.</summary>
      <returns>verdadeiro se a solicitação do método de ação for válida para o contexto de controlador especificado; caso contrário, falso.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="methodInfo">Informações sobre o método de ação.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpRequestExtensions">
      <summary>Estende a classe <see cref="T:System.Web.HttpRequestBase" /> que contém os valores HTTP que foram enviados por um cliente durante uma solicitação da Web.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpRequestExtensions.GetHttpMethodOverride(System.Web.HttpRequestBase)">
      <summary>Recupera a substituição de método de transferência de dados HTTP que foi usada pelo cliente.</summary>
      <returns>A substituição de método de transferência de dados HTTP que foi usada pelo cliente.</returns>
      <param name="request">Um objeto que contém os valores HTTP que foram enviados por um cliente durante uma solicitação da Web.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="request" /> é nulo.</exception>
      <exception cref="T:System.NotImplementedException">A substituição de método de transferência de dados HTTP não foi implementada.</exception>
    </member>
    <member name="T:System.Web.Mvc.HttpStatusCodeResult">
      <summary>Fornece uma maneira de retornar um resultado de ação com uma descrição e código de status de resposta HTTP específicos.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> usando um código de status.</summary>
      <param name="statusCode">O código do status.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Int32,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> usando uma descrição de status e um código de status.</summary>
      <param name="statusCode">O código do status.</param>
      <param name="statusDescription">A descrição do status.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Net.HttpStatusCode)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> usando um código de status.</summary>
      <param name="statusCode">O código do status.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.#ctor(System.Net.HttpStatusCode,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.HttpStatusCodeResult" /> usando uma descrição de status e um código de status.</summary>
      <param name="statusCode">O código do status.</param>
      <param name="statusDescription">A descrição do status.</param>
    </member>
    <member name="M:System.Web.Mvc.HttpStatusCodeResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Habilita o processamento do resultado de um método de ação por um tipo personalizado que herda da classe <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">O contexto no qual o resultado é executado.As informações de contexto incluem o controlador, o conteúdo HTTP, o contexto de solicitação e os dados de rota.</param>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusCode">
      <summary>Obtém o código do status HTTP.</summary>
      <returns>O código do status HTTP.</returns>
    </member>
    <member name="P:System.Web.Mvc.HttpStatusCodeResult.StatusDescription">
      <summary>Obtém a descrição do status HTTP.</summary>
      <returns>A descrição do status HTTP.</returns>
    </member>
    <member name="T:System.Web.Mvc.HttpUnauthorizedResult">
      <summary>Representa o resultado de uma solicitação HTTP não autorizada.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.HttpUnauthorizedResult.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.HttpUnauthorizedResult" /> usando a descrição de status.</summary>
      <param name="statusDescription">A descrição do status.</param>
    </member>
    <member name="T:System.Web.Mvc.HttpVerbs">
      <summary>Enumera os verbos HTTP.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Delete">
      <summary>Solicita que um URI especificado seja excluído.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Get">
      <summary>Recupera as informações ou a entidade identificadas pelo URI da solicitação.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Head">
      <summary>Recupera os cabeçalhos da mensagem para as informações ou entidade identificadas pelo URI da solicitação.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Options">
      <summary>Representa uma solicitação de informações sobre as opções de comunicação disponíveis na cadeia de solicitações/respostas, identificadas pelo URI da solicitação.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Patch">
      <summary>Solicita que um conjunto de alterações descritas na entidade de solicitação seja aplicado ao recurso identificado pelo URI da solicitação.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Post">
      <summary>Publica uma nova entidade como adição ao URI.</summary>
    </member>
    <member name="F:System.Web.Mvc.HttpVerbs.Put">
      <summary>Substitui uma entidade identificada por um URI.</summary>
    </member>
    <member name="T:System.Web.Mvc.IActionFilter">
      <summary>Define os métodos usados em um filtro de ação.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Chamado após o método da ação ser executado.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Chamado antes de um método de ação ser executado.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="T:System.Web.Mvc.IActionInvoker">
      <summary>Define um contrato para um chamador de ação, usado para invocar uma ação em resposta a uma solicitação HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Invoca a ação especificada usando o contexto de controlador especificado.</summary>
      <returns>verdadeiro se a ação foi encontrada; caso contrário, falso.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionName">O nome da ação.</param>
    </member>
    <member name="T:System.Web.Mvc.IActionInvokerFactory">
      <summary>Usado para criar uma instância de <see cref="T:System.Web.Mvc.IActionInvoker" /> da solicitação atual.</summary>
    </member>
    <member name="M:System.Web.Mvc.IActionInvokerFactory.CreateInstance">
      <summary>Cria uma instância do invocador de ação da solicitação atual.</summary>
      <returns>O <see cref="T:System.Web.Mvc.IActionInvoker" /> criado.</returns>
    </member>
    <member name="T:System.Web.Mvc.IAuthorizationFilter">
      <summary>Define os métodos necessários para um filtro de autorização.</summary>
    </member>
    <member name="M:System.Web.Mvc.IAuthorizationFilter.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Chamado quando é necessária uma autorização.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="T:System.Web.Mvc.IClientValidatable">
      <summary>Fornece uma maneira de a estrutura de validação ASP.NET MVC descobrir em tempo de execução se um validador tem suporte para a validação do cliente.</summary>
    </member>
    <member name="M:System.Web.Mvc.IClientValidatable.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Quando implementado em uma classe, retorna regras de validação do cliente para essa classe.</summary>
      <returns>As regras de validação do cliente para este validador.</returns>
      <param name="metadata">Os metadados do modelo.</param>
      <param name="context">O contexto do controlador.</param>
    </member>
    <member name="T:System.Web.Mvc.IController">
      <summary>Define os métodos necessários para um controlador.</summary>
    </member>
    <member name="M:System.Web.Mvc.IController.Execute(System.Web.Routing.RequestContext)">
      <summary>Executa o contexto de solicitação especificado.</summary>
      <param name="requestContext">O contexto da solicitação.</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerActivator">
      <summary>Fornece um controle específico sobre como as instâncias de controladores são criadas usando a injeção de dependência.</summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerActivator.Create(System.Web.Routing.RequestContext,System.Type)">
      <summary>Quando implementado em uma classe, cria um controlador.</summary>
      <returns>O controlador criado.</returns>
      <param name="requestContext">O contexto da solicitação.</param>
      <param name="controllerType">O tipo do controlador.</param>
    </member>
    <member name="T:System.Web.Mvc.IControllerFactory">
      <summary>Define os métodos necessários para uma fábrica de controlador.</summary>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.CreateController(System.Web.Routing.RequestContext,System.String)">
      <summary>Cria o controlador especificado usando o contexto de solicitação especificado.</summary>
      <returns>O controlador.</returns>
      <param name="requestContext">O contexto da solicitação.</param>
      <param name="controllerName">O nome do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.GetControllerSessionBehavior(System.Web.Routing.RequestContext,System.String)">
      <summary>Obtém o comportamento da sessão do controlador.</summary>
      <returns>O comportamento da sessão do controlador.</returns>
      <param name="requestContext">O contexto da solicitação.</param>
      <param name="controllerName">O nome do controlador cujo comportamento de sessão você deseja obter.</param>
    </member>
    <member name="M:System.Web.Mvc.IControllerFactory.ReleaseController(System.Web.Mvc.IController)">
      <summary>Libera o controlador especificado.</summary>
      <param name="controller">O controlador.</param>
    </member>
    <member name="T:System.Web.Mvc.IDependencyResolver">
      <summary>Define os métodos que simplificam a localização de serviços e resolução de dependências.</summary>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetService(System.Type)">
      <summary>Resolve serviços registrados isoladamente que dão suporte à criação do objeto arbitrário.</summary>
      <returns>O objeto ou serviço solicitado.</returns>
      <param name="serviceType">O tipo do objeto ou serviço solicitado.</param>
    </member>
    <member name="M:System.Web.Mvc.IDependencyResolver.GetServices(System.Type)">
      <summary>Resolve serviços registrados de multiplicação.</summary>
      <returns>Os serviços solicitados.</returns>
      <param name="serviceType">O tipo dos serviços solicitados.</param>
    </member>
    <member name="T:System.Web.Mvc.IEnumerableValueProvider">
      <summary>Representa um <see cref="T:System.Web.Mvc.IValueProvider" /> especial que pode ser enumerado.</summary>
    </member>
    <member name="M:System.Web.Mvc.IEnumerableValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Obtém as chaves do prefixo.</summary>
      <returns>As chaves.</returns>
      <param name="prefix">O prefixo.</param>
    </member>
    <member name="T:System.Web.Mvc.IExceptionFilter">
      <summary>Define os métodos necessários para um filtro de exceção.</summary>
    </member>
    <member name="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Chamado quando ocorre uma exceção.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="T:System.Web.Mvc.IFilterProvider">
      <summary>Fornece uma interface para encontrar filtros.</summary>
    </member>
    <member name="M:System.Web.Mvc.IFilterProvider.GetFilters(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor)">
      <summary>Retorna um enumerador que contém todas as instâncias de <see cref="T:System.Web.Mvc.IFilterProvider" /> no localizador de serviços.</summary>
      <returns>O enumerador que contém todas as instâncias de <see cref="T:System.Web.Mvc.IFilterProvider" /> no localizador de serviços.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="T:System.Web.Mvc.IMetadataAware">
      <summary>Fornece uma interface para expor atributos para a classe <see cref="T:System.Web.Mvc.AssociatedMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.IMetadataAware.OnMetadataCreated(System.Web.Mvc.ModelMetadata)">
      <summary>Quando implementado em uma classe, fornece metadados para o processo de criação de metadados do modelo.</summary>
      <param name="metadata">Os metadados do modelo.</param>
    </member>
    <member name="T:System.Web.Mvc.IMethodInfoActionDescriptor">
      <summary>Uma interface opcional para tipos de <see cref="T:System.Web.Mvc.ActionDescriptor" /> que fornece um <see cref="P:System.Web.Mvc.IMethodInfoActionDescriptor.MethodInfo" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.IMethodInfoActionDescriptor.MethodInfo">
      <summary>Obtém o MethodInfo</summary>
    </member>
    <member name="T:System.Web.Mvc.IModelBinder">
      <summary>Define os métodos necessários para um associador de modelo.</summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Associa o modelo a um valor usando o contexto de controlador especificado e o contexto de associação.</summary>
      <returns>O valor associado.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="bindingContext">O contexto de associação.</param>
    </member>
    <member name="T:System.Web.Mvc.IModelBinderProvider">
      <summary>Define os métodos que habilitam implementações dinâmicas de associação de modelo para classes que implementam a interface <see cref="T:System.Web.Mvc.IModelBinder" />. </summary>
    </member>
    <member name="M:System.Web.Mvc.IModelBinderProvider.GetBinder(System.Type)">
      <summary>Retorna o associador de modelo para o tipo especificado.</summary>
      <returns>O associador de modelo para o tipo especificado.</returns>
      <param name="modelType">O tipo do modelo.</param>
    </member>
    <member name="T:System.Web.Mvc.IMvcFilter">
      <summary>Define os membros que especificam a ordem de filtros e se vários filtros são permitidos.</summary>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.AllowMultiple">
      <summary>Quando implementado em uma classe, obtém ou define um valor que indica se vários filtros são permitidos.</summary>
      <returns>verdadeiro se vários filtros forem permitidos; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.IMvcFilter.Order">
      <summary>Quando implementado em uma classe, obtém a ordem do filtro.</summary>
      <returns>A ordem do filtro.</returns>
    </member>
    <member name="T:System.Web.Mvc.InputType">
      <summary>Enumera os tipos de controles de entrada.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.CheckBox">
      <summary>Uma caixa de seleção.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Hidden">
      <summary>Um campo oculto.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Password">
      <summary>Uma caixa de senha.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Radio">
      <summary>Um botão de opção.</summary>
    </member>
    <member name="F:System.Web.Mvc.InputType.Text">
      <summary>Uma caixa de texto.</summary>
    </member>
    <member name="T:System.Web.Mvc.IResultFilter">
      <summary>Define os métodos necessários para um filtro de resultados.</summary>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Chamado após um resultado de ação ser executado.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.IResultFilter.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Chamado antes de um resultado de ação ser executado.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="T:System.Web.Mvc.IRouteWithArea">
      <summary>Associa uma rota a uma área em um aplicativo ASP.NET MVC.</summary>
    </member>
    <member name="P:System.Web.Mvc.IRouteWithArea.Area">
      <summary>Obtém o nome da área à qual associar a rota.</summary>
      <returns>O nome da área à qual associar a rota.</returns>
    </member>
    <member name="T:System.Web.Mvc.ITempDataProvider">
      <summary>Define o contrato para os provedores de dados temporários que armazenam dados que serão exibidos na próxima solicitação.</summary>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>Carrega os dados temporários.</summary>
      <returns>Os dados temporários.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Salva os dados temporários.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="values">Os valores.</param>
    </member>
    <member name="T:System.Web.Mvc.ITempDataProviderFactory">
      <summary>Usado para criar uma instância de <see cref="T:System.Web.Mvc.ITempDataProvider" /> do controlador.</summary>
    </member>
    <member name="M:System.Web.Mvc.ITempDataProviderFactory.CreateInstance">
      <summary>Cria uma instância de <see cref="T:System.Web.Mvc.ITempDataProvider" /> para o controlador.</summary>
      <returns>O <see cref="T:System.Web.Mvc.ITempDataProvider" /> criado.</returns>
    </member>
    <member name="T:System.Web.Mvc.IUnvalidatedValueProvider">
      <summary>Representa uma interface <see cref="T:System.Web.Mvc.IValueProvider" /> que pode ignorar a validação de solicitação.</summary>
    </member>
    <member name="M:System.Web.Mvc.IUnvalidatedValueProvider.GetValue(System.String,System.Boolean)">
      <summary>Recupera o valor do objeto associado à chave especificada.</summary>
      <returns>O valor do objeto para a chave especificada.</returns>
      <param name="key">A chave.</param>
      <param name="skipValidation">verdadeiro se a validação deve ser ignorada; caso contrário, falso.</param>
    </member>
    <member name="T:System.Web.Mvc.IValueProvider">
      <summary>Define os métodos necessários para um provedor de valor no ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.ContainsPrefix(System.String)">
      <summary>Determina se o conjunto contém o prefixo especificado.</summary>
      <returns>verdadeiro se o conjunto contiver o prefixo especificado; caso contrário, falso.</returns>
      <param name="prefix">O prefixo a ser pesquisado.</param>
    </member>
    <member name="M:System.Web.Mvc.IValueProvider.GetValue(System.String)">
      <summary>Recupera um objeto de valor usando a chave especificada.</summary>
      <returns>O objeto de valor para a chave especificada, ou null se chave não for encontrada.</returns>
      <param name="key">A chave do objeto de valor a ser recuperado.</param>
    </member>
    <member name="T:System.Web.Mvc.IView">
      <summary>Define os métodos necessários para uma exibição.</summary>
    </member>
    <member name="M:System.Web.Mvc.IView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
      <summary>Renderiza o contexto de exibição especificado usando o objeto gravador especificado.</summary>
      <param name="viewContext">O contexto da exibição.</param>
      <param name="writer">O objeto gravador.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewDataContainer">
      <summary>Define os métodos necessários para um dicionário de dados de exibição.</summary>
    </member>
    <member name="P:System.Web.Mvc.IViewDataContainer.ViewData">
      <summary>Obtém ou define o dicionário de dados de exibição.</summary>
      <returns>O dicionário de dados de exibição.</returns>
    </member>
    <member name="T:System.Web.Mvc.IViewEngine">
      <summary>Define os métodos necessários para um mecanismo de exibição.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>Encontra a exibição parcial especificada usando o contexto de controlador especificado.</summary>
      <returns>A exibição parcial.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="partialViewName">O nome da exibição parcial.</param>
      <param name="useCache">verdadeiro para especificar que o mecanismo de exibição retorna a exibição em cache, se houver uma exibição armazenada em cache; caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>Encontra a exibição especificada usando o contexto de controlador especificado.</summary>
      <returns>A exibição de página.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="viewName">O nome da exibição.</param>
      <param name="masterName">O nome do mestre.</param>
      <param name="useCache">verdadeiro para especificar que o mecanismo de exibição retorna a exibição em cache, se houver uma exibição armazenada em cache; caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>Libera a exibição especificada usando o contexto de controlador especificado.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="view">A exibição.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewLocationCache">
      <summary>Define os métodos necessários para armazenar em cache locais de exibição na memória.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.GetViewLocation(System.Web.HttpContextBase,System.String)">
      <summary>Obtém o local de exibição usando o contexto HTTP especificado e a chave de cache.</summary>
      <returns>A localização da exibição.</returns>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="key">A chave em cache.</param>
    </member>
    <member name="M:System.Web.Mvc.IViewLocationCache.InsertViewLocation(System.Web.HttpContextBase,System.String,System.String)">
      <summary>Insere no cache o local de exibição especificado usando o contexto HTTP e a chave de cache especificados.</summary>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="key">A chave em cache.</param>
      <param name="virtualPath">O caminho virtual.</param>
    </member>
    <member name="T:System.Web.Mvc.IViewPageActivator">
      <summary>Fornece um controle específico sobre como as páginas de exibição são criadas usando a injeção de dependência.</summary>
    </member>
    <member name="M:System.Web.Mvc.IViewPageActivator.Create(System.Web.Mvc.ControllerContext,System.Type)">
      <summary>Fornece um controle específico sobre como as páginas de exibição são criadas usando a injeção de dependência.</summary>
      <returns>A página de exibição criada.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="type">O tipo do controlador.</param>
    </member>
    <member name="T:System.Web.Mvc.JavaScriptResult">
      <summary>Envia conteúdo JavaScript para a resposta.</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.JavaScriptResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.JavaScriptResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Habilita o processamento do resultado de um método de ação por um tipo personalizado que herda da classe <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">O contexto no qual o resultado é executado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="context" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.JavaScriptResult.Script">
      <summary>Obtém ou define o script.</summary>
      <returns>O script.</returns>
    </member>
    <member name="T:System.Web.Mvc.JQueryFormValueProvider">
      <summary>O provedor de Valor de formulário JQuery é usado para lidar com dados formatados em JQuery nos Formulários solicitados.</summary>
    </member>
    <member name="M:System.Web.Mvc.JQueryFormValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Constrói uma nova instância de ValueProvider de formulário JQuery</summary>
      <param name="controllerContext">O contexto no qual o ValueProvider opera.</param>
    </member>
    <member name="T:System.Web.Mvc.JQueryFormValueProviderFactory">
      <summary>Fornece o ValueProvider necessário para lidar com os dados de Formulário JQuery.</summary>
    </member>
    <member name="M:System.Web.Mvc.JQueryFormValueProviderFactory.#ctor">
      <summary>Constrói uma nova instância do alocador que fornece ValueProviders de formulário JQuery.</summary>
    </member>
    <member name="M:System.Web.Mvc.JQueryFormValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Retorna o ValueProvider adequado.</summary>
      <param name="controllerContext">O contexto no qual o ValueProvider deve operar.</param>
    </member>
    <member name="T:System.Web.Mvc.JsonRequestBehavior">
      <summary>Especifica se solicitações HTTP GET do cliente são permitidas.</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.AllowGet">
      <summary>Solicitações HTTP GET do cliente são permitidas.</summary>
    </member>
    <member name="F:System.Web.Mvc.JsonRequestBehavior.DenyGet">
      <summary>Solicitações HTTP GET do cliente não são permitidas.</summary>
    </member>
    <member name="T:System.Web.Mvc.JsonResult">
      <summary>Representa uma classe usada para enviar conteúdo formatado em JSON para a resposta.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.JsonResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentEncoding">
      <summary>Obtém ou define a codificação do conteúdo.</summary>
      <returns>A codificação do conteúdo.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.ContentType">
      <summary>Obtém ou define o tipo do conteúdo.</summary>
      <returns>O tipo do conteúdo.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.Data">
      <summary>Obtém ou define os dados.</summary>
      <returns>Os dados.</returns>
    </member>
    <member name="M:System.Web.Mvc.JsonResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Habilita o processamento do resultado de um método de ação por um tipo personalizado que herda da classe <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">O contexto no qual o resultado é executado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="context" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.JsonRequestBehavior">
      <summary>Obtém ou define um valor que indica se solicitações HTTP GET do cliente são permitidas.</summary>
      <returns>Um valor que indica se solicitações HTTP GET do cliente são permitidas.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.MaxJsonLength">
      <summary>Obtém ou define o comprimento máximo dos dados.</summary>
      <returns>O comprimento máximo dos dados.</returns>
    </member>
    <member name="P:System.Web.Mvc.JsonResult.RecursionLimit">
      <summary>Obtém ou define o limite de recursão.</summary>
      <returns>O limite de recursão.</returns>
    </member>
    <member name="T:System.Web.Mvc.JsonValueProviderFactory">
      <summary>Habilita os métodos de ação a enviar e receber texto formatado em JSON e associar a modelo o texto JSON para parâmetros de métodos de ação.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.JsonValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.JsonValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Retorna um objeto de provedor de valor JSON para o contexto de controlador especificado.</summary>
      <returns>Um objeto de provedor de valor JSON para o contexto de controlador especificado.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
    </member>
    <member name="T:System.Web.Mvc.LinqBinaryModelBinder">
      <summary>Mapeia uma solicitação do navegador para um objeto <see cref="T:System.Data.Linq.Binary" /> LINQ.</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.LinqBinaryModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.LinqBinaryModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
      <summary>Associa o modelo usando o contexto de controlador e o contexto de associação especificados.</summary>
      <returns>O objeto de dados associados.Se o modelo não puder ser associado, este método retorna nulo.Implementa<see cref="M:System.Web.Mvc.IModelBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" />.</returns>
      <param name="controllerContext">O contexto no qual o controlador opera.As informações de contexto incluem o controlador, o conteúdo HTTP, o contexto de solicitação e os dados de rota.</param>
      <param name="bindingContext">O contexto no qual o modelo está associado.O contexto inclui informações como o objeto do modelo, nome do modelo, tipo de modelo, filtro de propriedade e provedor de valor.</param>
    </member>
    <member name="T:System.Web.Mvc.MaxLengthAttributeAdapter">
      <summary>Fornece um adaptador para o atributo MaxLengthAttribute.</summary>
    </member>
    <member name="M:System.Web.Mvc.MaxLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.MaxLengthAttribute)">
      <summary>Inicia uma nova instância da classe MaxLengthAttribute.</summary>
      <param name="metadata">Os metadados do modelo.</param>
      <param name="context">O contexto do controlador.</param>
      <param name="attribute">O atributo MaxLength.</param>
    </member>
    <member name="M:System.Web.Mvc.MaxLengthAttributeAdapter.GetClientValidationRules">
      <summary>Obtém uma lista de regras de validação do cliente para uma verificação do comprimento máximo.</summary>
      <returns>Uma lista de regras de validação do cliente para a verificação.</returns>
    </member>
    <member name="T:System.Web.Mvc.MinLengthAttributeAdapter">
      <summary>Fornece um adaptador para o atributo MinLengthAttribute.</summary>
    </member>
    <member name="M:System.Web.Mvc.MinLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.MinLengthAttribute)">
      <summary>Inicia uma nova instância da classe MinLengthAttribute.</summary>
      <param name="metadata">Os metadados do modelo.</param>
      <param name="context">O contexto do controlador.</param>
      <param name="attribute">O atributo de comprimento mínimo.</param>
    </member>
    <member name="M:System.Web.Mvc.MinLengthAttributeAdapter.GetClientValidationRules">
      <summary>Obtém uma lista de regras de validação do cliente para verificação do comprimento mínimo.</summary>
      <returns>Uma lista de regras de validação do cliente para uma verificação.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderAttribute">
      <summary>Representa um atributo usado para associar um tipo de modelo a um tipo de construtor de modelo.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.#ctor(System.Type)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ModelBinderAttribute" />.</summary>
      <param name="binderType">O tipo do associador.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="binderType" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderAttribute.BinderType">
      <summary>Obtém ou define o tipo do associador.</summary>
      <returns>O tipo do associador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderAttribute.GetBinder">
      <summary>Recupera uma instância do associador de modelo.</summary>
      <returns>Uma referência a um objeto que implementa a interface do <see cref="T:System.Web.Mvc.IModelBinder" />.</returns>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro enquanto uma instância do associador de modelo estava sendo criada.</exception>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderDictionary">
      <summary>Representa uma classe que contém todos os associadores de modelo para o aplicativo, listados por tipo de associador.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ModelBinderDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Adiciona o item especificado ao dicionário de associador de modelo.</summary>
      <param name="item">O objeto a ser adicionado à instância <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Collections.Generic.ICollection`1" /> é somente leitura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Add(System.Type,System.Web.Mvc.IModelBinder)">
      <summary>Adiciona o item especificado ao dicionário de associador de modelo usando a chave especificada.</summary>
      <param name="key">A chave do elemento a ser adicionado.</param>
      <param name="value">O valor do elemento a ser adicionado.</param>
      <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Collections.Generic.IDictionary`2" /> é somente leitura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nula.</exception>
      <exception cref="T:System.ArgumentException">Um elemento que tem a mesma chave já existe no objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Clear">
      <summary>Remove todos os itens do dicionário de associador de modelo.</summary>
      <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Collections.Generic.ICollection`1" /> é somente leitura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Determina se o dicionário de associador de modelo contém um valor especificado.</summary>
      <returns>verdadeiro se <paramref name="item" /> for encontrado no dicionário de associador de modelo; caso contrário, falso.</returns>
      <param name="item">O objeto a ser localizado no objeto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.ContainsKey(System.Type)">
      <summary>Determina se o dicionário de associador de modelo contém um elemento que tem a chave especificada.</summary>
      <returns>verdadeiro se o dicionário de associador de modelo contiver um elemento que tem a chave especificada; caso contrário, falso.</returns>
      <param name="key">A chave a ser localizada no objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder}[],System.Int32)">
      <summary>Copia os elementos do dicionário de associador de modelo para uma matriz, começando em um índice especificado.</summary>
      <param name="array">A matriz unidimensional que é o destino dos elementos copiados de <see cref="T:System.Collections.Generic.ICollection`1" />.A matriz deve ter indexação baseada em zero.</param>
      <param name="arrayIndex">O índice baseado em zero na <paramref name="array" /> na qual a cópia inicia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é nula.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> é menor que 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimencional.-ou- <paramref name="arrayIndex" /> é igual a ou maior que o comprimento da <paramref name="array" />.-ou- A quantidade de elementos no objeto <see cref="T:System.Collections.Generic.ICollection`1" /> de origem é maior que o espaço disponível do <paramref name="arrayIndex" /> ao fim da matriz de destino. -ou- O tipo <paramref name="T" /> não pode ser convertido automaticamente no tipo da matriz de destino.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Count">
      <summary>Obtém o número de elementos no dicionário de associador de modelo.</summary>
      <returns>O número de elementos no dicionário de associador de modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.DefaultBinder">
      <summary>Obtém ou define o associador de modelo padrão.</summary>
      <returns>O associador de modelo padrão.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type)">
      <summary>Recupera o associador de modelo para o tipo especificado.</summary>
      <returns>O associador de modelos.</returns>
      <param name="modelType">O tipo do modelo a ser recuperado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="modelType" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetBinder(System.Type,System.Boolean)">
      <summary>Recupera o associador de modelo para o tipo especificado ou o associador de modelo padrão.</summary>
      <returns>O associador de modelos.</returns>
      <param name="modelType">O tipo do modelo a ser recuperado.</param>
      <param name="fallbackToDefault">verdadeiro para recuperar o associador de modelo padrão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="modelType" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.GetEnumerator">
      <summary>Retorna um enumerador que pode ser usado para iterar por meio do conjunto.</summary>
      <returns>Um enumerador que pode ser usado para iterar por meio do conjunto.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.IsReadOnly">
      <summary>Obtém um valor que indica se o dicionário de associador de modelo é somente leitura.</summary>
      <returns>verdadeiro se o dicionário de associador de modelo for somente leitura; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Item(System.Type)">
      <summary>Obtém ou define a chave especificada em um objeto que implementa a interface <see cref="T:System.Web.Mvc.IModelBinder" />.</summary>
      <returns>A chave para o item especificado.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Keys">
      <summary>Obtém uma coleção que contém as chaves no dicionário de associador de modelo.</summary>
      <returns>Uma coleção que contém as chaves no dicionário de associador de modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.Type,System.Web.Mvc.IModelBinder})">
      <summary>Remove a primeira ocorrência do elemento especificado do dicionário de associador de modelo.</summary>
      <returns>verdadeiro se <paramref name="item" /> foi removido com êxito do dicionário de associador de modelo; caso contrário, falso.Este método também retorna falso se o <paramref name="item" /> não for encontrado no dicionário de associador de modelo.</returns>
      <param name="item">O objeto a ser removido do objeto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Collections.Generic.ICollection`1" /> é somente leitura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.Remove(System.Type)">
      <summary>Remove o elemento que tem a chave especificada do dicionário de associador de modelo.</summary>
      <returns>verdadeiro se o elemento for removido com êxito; caso contrário, falso.Este método também retorna falso se a <paramref name="key" /> não for encontrada no dicionário de associador de modelo.</returns>
      <param name="key">A chave do elemento a ser removido.</param>
      <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Collections.Generic.IDictionary`2" /> é somente leitura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nula.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um enumerador que pode ser usado para iterar por meio de uma coleção.</summary>
      <returns>Um enumerador que pode ser usado para iterar por meio do conjunto.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderDictionary.TryGetValue(System.Type,System.Web.Mvc.IModelBinder@)">
      <summary>Obtém o valor associado à chave especificada.</summary>
      <returns>verdadeiro se o objeto que implementa <see cref="T:System.Collections.Generic.IDictionary`2" /> contiver um elemento que contém a chave especificada; caso contrário, falso.</returns>
      <param name="key">A chave do valor a ser obtido.</param>
      <param name="value">Quando esse método retorna, o valor associado à chave especificada, se a chave for encontrada; caso contrário, o valor padrão para o tipo do parâmetro do <paramref name="value" />.Este parâmetro é passado não inicializado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nula.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderDictionary.Values">
      <summary>Obtém uma coleção que contém os valores no dicionário de associador de modelo.</summary>
      <returns>Uma coleção que contém os valores no dicionário de associador de modelo.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviderCollection">
      <summary>Representa a coleção de provedores de associador de modelo.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IModelBinderProvider})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ModelBinderProviderCollection" /> usando uma lista de provedores do associador de modelo.</summary>
      <param name="list">Uma lista de provedores do associador de modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.ClearItems">
      <summary>Remove todos os elementos da coleção.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.GetBinder(System.Type)">
      <summary>Retorna um associador de modelo do tipo especificado.</summary>
      <returns>Um associador de modelo do tipo especificado.</returns>
      <param name="modelType">O tipo do associador de modelo</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>Insere um provedor do associador de modelo no ModelBinderProviderCollection no índice especificado.</summary>
      <param name="index">O índice.</param>
      <param name="item">O provedor do associador de modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.RemoveItem(System.Int32)">
      <summary>Remove o elemento no índice especificado da coleção.</summary>
      <param name="index">O índice baseado em zero do elemento a ser removido.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelBinderProviderCollection.SetItem(System.Int32,System.Web.Mvc.IModelBinderProvider)">
      <summary>Substitui o provedor do associador de modelo no índice especificado.</summary>
      <param name="index">O índice.</param>
      <param name="item">O provedor do associador de modelo.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelBinderProviders">
      <summary>Fornece um contêiner para os provedores do associador de modelo.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinderProviders.BinderProviders">
      <summary>Fornece um ponto de registro para os provedores do associador de modelo para aplicativos que não usam a injeção de dependência.</summary>
      <returns>A coleção de provedor do associador de modelo.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBinders">
      <summary>Fornece acesso global aos associadores de modelo para o aplicativo.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelBinders.Binders">
      <summary>Obtém os associadores de modelo para o aplicativo.</summary>
      <returns>Os associadores de modelo para o aplicativo.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelBindingContext">
      <summary>Fornece o contexto em que funciona um associador de modelos.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ModelBindingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelBindingContext.#ctor(System.Web.Mvc.ModelBindingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ModelBindingContext" /> usando o contexto de associação.</summary>
      <param name="bindingContext">O contexto de associação.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.FallbackToEmptyPrefix">
      <summary>Obtém ou define um valor que indica se o associador deve usar um prefixo vazio.</summary>
      <returns>verdadeiro se o associador deve usar um prefixo vazio; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.Model">
      <summary>Obtém ou define o modelo.</summary>
      <returns>O modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelMetadata">
      <summary>Obtém ou define os metadados do modelo.</summary>
      <returns>Os metadados do modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelName">
      <summary>Obtém ou define o nome do modelo.</summary>
      <returns>O nome do modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelState">
      <summary>Obtém ou define o estado do modelo.</summary>
      <returns>O estado do modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ModelType">
      <summary>Obtém ou define o tipo do modelo.</summary>
      <returns>O tipo do modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyFilter">
      <summary>Obtém ou define o filtro de propriedade.</summary>
      <returns>O filtro de propriedade.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.PropertyMetadata">
      <summary>Obtém os metadados da propriedade.</summary>
      <returns>Os metadados da propriedade.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelBindingContext.ValueProvider">
      <summary>Obtém ou define o provedor de valor.</summary>
      <returns>O provedor de valor.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelError">
      <summary>Representa um erro que ocorre durante a associação de modelo.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ModelError" /> usando a exceção especificada.</summary>
      <param name="exception">A exceção.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="exception" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ModelError" /> usando a mensagem de erro e a exceção especificadas.</summary>
      <param name="exception">A exceção.</param>
      <param name="errorMessage">A mensagem de erro.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="exception" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelError.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ModelError" /> usando a mensagem de erro especificada.</summary>
      <param name="errorMessage">A mensagem de erro.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelError.ErrorMessage">
      <summary>Obtém ou define a mensagem de erro.</summary>
      <returns>A mensagem de erro.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelError.Exception">
      <summary>Obtém ou define o objeto de exceção.</summary>
      <returns>O objeto de exceção.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelErrorCollection">
      <summary>Um conjunto de instâncias de <see cref="T:System.Web.Mvc.ModelError" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ModelErrorCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.Exception)">
      <summary>Adiciona o objeto <see cref="T:System.Exception" /> especificado à coleção de erros de modelo.</summary>
      <param name="exception">A exceção.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.String)">
      <summary>Adiciona a mensagem de erro especificada à coleção de erros de modelo.</summary>
      <param name="errorMessage">A mensagem de erro.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadata">
      <summary>Fornece um contêiner para metadados comuns, para a classe <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> e para a classe <see cref="T:System.Web.Mvc.ModelValidator" /> para um modelo de dados.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.#ctor(System.Web.Mvc.ModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ModelMetadata" />.</summary>
      <param name="provider">O provedor.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="modelAccessor">O acessador do modelo.</param>
      <param name="modelType">O tipo do modelo.</param>
      <param name="propertyName">O nome do modelo.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.AdditionalValues">
      <summary>Obtém um dicionário que contém metadados adicionais sobre o modelo.</summary>
      <returns>Um dicionário que contém metadados adicionais sobre o modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Container">
      <summary>Uma referência ao objeto de contêiner do modelo.Será não nulo se o modelo representar uma propriedade.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ContainerType">
      <summary>Obtém ou define o tipo do contêiner para o modelo.</summary>
      <returns>O tipo do contêiner para o modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ConvertEmptyStringToNull">
      <summary>Obtém ou define um valor que indica se cadeias de caracteres vazias que são postadas em formulários devem ser convertidas em nulo.</summary>
      <returns>verdadeiro se as cadeias de caracteres vazias que são postadas nos formulários devem ser convertidas em nulo; caso contrário, falso.O valor padrão é verdadeiro.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DataTypeName">
      <summary>Obtém ou define informações meta sobre o tipo de dados. </summary>
      <returns>Informações meta sobre o tipo de dados. </returns>
    </member>
    <member name="F:System.Web.Mvc.ModelMetadata.DefaultOrder">
      <summary>O valor de ordem padrão, que é 10000.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Description">
      <summary>Obtém ou define a descrição do modelo.</summary>
      <returns>A descrição do modelo.O valor padrão é nulo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayFormatString">
      <summary>Obtém ou define a cadeia de caracteres de formato de exibição do modelo.</summary>
      <returns>A cadeia de caracteres de formato de exibição do modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.DisplayName">
      <summary>Obtém ou define o nome de exibição do modelo.</summary>
      <returns>O nome de exibição do modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.EditFormatString">
      <summary>Obtém ou define a cadeia de caracteres de formato de edição do modelo.</summary>
      <returns>A cadeia de caracteres de formato de edição do modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromLambdaExpression``2(System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Web.Mvc.ViewDataDictionary{``0})">
      <summary>Retorna os metadados do parâmetro <see cref="T:System.Linq.Expressions.Expression" /> para o modelo.</summary>
      <returns>Os metadados.</returns>
      <param name="expression">Uma expressão que identifica o modelo.</param>
      <param name="viewData">O dicionário de dados de exibição.</param>
      <typeparam name="TParameter">O tipo do parâmetro.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.FromStringExpression(System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Obtém os metadados do parâmetro de expressão para o modelo.</summary>
      <returns>Os metadados para o modelo.</returns>
      <param name="expression">Uma expressão que identifica o modelo.</param>
      <param name="viewData">O dicionário de dados de exibição.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetDisplayName">
      <summary>Obtém o nome de exibição do modelo.</summary>
      <returns>O nome de exibição do modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetSimpleDisplayText">
      <summary>Retorna a descrição simples do modelo.</summary>
      <returns>A descrição simples do modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadata.GetValidators(System.Web.Mvc.ControllerContext)">
      <summary>Obtém uma lista de validadores para o modelo.</summary>
      <returns>Uma lista de validadores para o modelo.</returns>
      <param name="context">O contexto do controlador.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.HideSurroundingHtml">
      <summary>Obtém ou define um valor que indica se o objeto de modelo deve ser renderizado usando-se elementos HTML associados.</summary>
      <returns>verdadeiro se os elementos HTML associados que contêm o objeto do modelo devem ser incluídos com o objeto; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.HtmlEncode"></member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsComplexType">
      <summary>Obtém ou define um valor que indica se o modelo é um tipo complexo.</summary>
      <returns>Um valor que indica se o modelo é considerado um tipo complexo pela estrutura MVC.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsNullableValueType">
      <summary>Obtém um valor que indica se o tipo é anulável.</summary>
      <returns>verdadeiro se o tipo for anulável; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsReadOnly">
      <summary>Obtém ou define um valor que indica se o modelo é somente leitura.</summary>
      <returns>verdadeiro se o modelo for somente leitura; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.IsRequired">
      <summary>Obtém ou define um valor que indica se o modelo é necessário.</summary>
      <returns>verdadeiro se o modelo for necessário; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Model">
      <summary>Obtém o valor do modelo.</summary>
      <returns>O valor do modelo.Para obter mais informações sobre o <see cref="T:System.Web.Mvc.ModelMetadata" />, consulte a postagem ASP.NET MVC 2 Templates, Part 2: ModelMetadata no blog de Brad Wilson</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ModelType">
      <summary>Obtém o tipo do modelo.</summary>
      <returns>O tipo do modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.NullDisplayText">
      <summary>Obtém ou define a cadeia de caracteres a ser exibida para valores nulos.</summary>
      <returns>A cadeia de caracteres a ser exibida para valores nulos.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Order">
      <summary>Obtém ou define um valor que representa a ordem dos metadados atuais.</summary>
      <returns>O valor da ordem dos metadados atuais.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Properties">
      <summary>Obtém um conjunto de objetos de metadados de modelo que descrevem as propriedades do modelo.</summary>
      <returns>Um conjunto de objetos de metadados de modelo que descrevem as propriedades do modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.PropertyName">
      <summary>Obtém o nome da propriedade.</summary>
      <returns>O nome da propriedade.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Provider">
      <summary>Obtém ou define o provedor.</summary>
      <returns>O provedor.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.RequestValidationEnabled">
      <summary>Obtém ou define um valor que indica se a validação de solicitação está habilitada.</summary>
      <returns>verdadeiro se a validação da solicitação estiver habilitada; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShortDisplayName">
      <summary>Obtém ou define um nome de exibição curto.</summary>
      <returns>O nome de exibição curto.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForDisplay">
      <summary>Obtém ou define um valor que indica se a propriedade deve ser exibida nas visualizações somente leitura, como visualizações de listas e detalhes.</summary>
      <returns>verdadeiro se o modelo deve ser exibido em visualizações somente leitura; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.ShowForEdit">
      <summary>Obtém ou define um valor que indica se o modelo deve ser exibido em visualizações editáveis.</summary>
      <returns>verdadeiro se o modelo deve ser exibido em visualizações editáveis; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.SimpleDisplayText">
      <summary>Obtém ou define a cadeia de caracteres de exibição simples do modelo.</summary>
      <returns>A cadeia de caracteres de exibição simples do modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.TemplateHint">
      <summary>Obtém ou define uma dica que sugere qual modelo usar para este modelo.</summary>
      <returns>Uma dica que sugere qual modelo usar para este modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadata.Watermark">
      <summary>Obtém ou define um valor que pode ser usado como uma marca d'água.</summary>
      <returns>A marca d'água.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadataProvider">
      <summary>Fornece uma classe base abstrata para um provedor de metadados personalizado.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.#ctor">
      <summary>Quando substituído em uma classe derivada, inicializa uma nova instância do objeto que deriva da classe <see cref="T:System.Web.Mvc.ModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Obtém um objeto de <see cref="T:System.Web.Mvc.ModelMetadata" /> para cada propriedade de um modelo.</summary>
      <returns>Um objeto de <see cref="T:System.Web.Mvc.ModelMetadata" /> para cada propriedade de um modelo.</returns>
      <param name="container">O contêiner.</param>
      <param name="containerType">O tipo do contêiner.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Obtém metadados para a propriedade especificada.</summary>
      <returns>Um objeto <see cref="T:System.Web.Mvc.ModelMetadata" /> para a propriedade.</returns>
      <param name="modelAccessor">O acessador do modelo.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="propertyName">A propriedade para se obter o modelo de metadados.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Obtém os metadados para o tipo de modelo e o acessador de modelo especificados.</summary>
      <returns>Um objeto <see cref="T:System.Web.Mvc.ModelMetadata" /> para o tipo de modelo e o acessador de modelo especificados.</returns>
      <param name="modelAccessor">O acessador do modelo.</param>
      <param name="modelType">O tipo do modelo.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelMetadataProviders">
      <summary>Fornece um contêiner para a instância <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> atual.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelMetadataProviders.Current">
      <summary>Obtém ou define o objeto <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> atual.</summary>
      <returns>O objeto <see cref="T:System.Web.Mvc.ModelMetadataProvider" /> atual.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelState">
      <summary>Encapsula o estado de associação de modelo em uma propriedade de um argumento de método de ação ou para o argumento em si.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelState.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ModelState" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Errors">
      <summary>Retorna um objeto <see cref="T:System.Web.Mvc.ModelErrorCollection" /> contendo quaisquer erros que ocorreram durante a associação de modelo.</summary>
      <returns>Os erros.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelState.Value">
      <summary>Retorna um objeto <see cref="T:System.Web.Mvc.ValueProviderResult" /> que encapsula o valor que estava sendo associado durante a associação de modelo.</summary>
      <returns>O valor.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelStateDictionary">
      <summary>Representa o estado de uma tentativa de associar um formulário postado a um método de ação, que inclui informações de validação.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor(System.Web.Mvc.ModelStateDictionary)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ModelStateDictionary" /> ao usar valores que são copiados do dicionário de estado de modelo especificado.</summary>
      <param name="dictionary">O dicionário de estado de modelo.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="dictionary " /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Adiciona o item especificado ao dicionário de estado de modelo.</summary>
      <param name="item">O objeto a ser adicionado ao dicionário de estado de modelo.</param>
      <exception cref="T:System.NotSupportedException">O dicionário de estado de modelo é somente leitura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Add(System.String,System.Web.Mvc.ModelState)">
      <summary>Adiciona um elemento que tem a chave especificada e o valor ao dicionário de estado de modelo.</summary>
      <param name="key">A chave do elemento a ser adicionado.</param>
      <param name="value">O valor do elemento a ser adicionado.</param>
      <exception cref="T:System.NotSupportedException">O dicionário de estado de modelo é somente leitura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">Um elemento que tem a chave especificada já ocorre no dicionário de estado de modelo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.Exception)">
      <summary>Adiciona o erro do modelo especificado ao conjunto de erros do dicionário de estado de modelo que está associado à chave especificada.</summary>
      <param name="key">A chave.</param>
      <param name="exception">A exceção.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.String)">
      <summary>Adiciona a mensagem de erro especificada ao conjunto de erros do dicionário de estado de modelo que está associado à chave especificada.</summary>
      <param name="key">A chave.</param>
      <param name="errorMessage">A mensagem de erro.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Clear">
      <summary>Remove todos os itens do dicionário de estado de modelo.</summary>
      <exception cref="T:System.NotSupportedException">O dicionário de estado de modelo é somente leitura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Determina se o dicionário de estado do modelo contém um valor específico.</summary>
      <returns>verdadeiro se <paramref name="item" /> for encontrado no dicionário de estado de modelo; caso contrário, falso.</returns>
      <param name="item">O objeto a ser localizado no dicionário de estado de modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.ContainsKey(System.String)">
      <summary>Determina se o dicionário de estado de modelo contém a chave especificada.</summary>
      <returns>verdadeiro se o dicionário de estado de modelo contiver a chave especificada; caso contrário, falso.</returns>
      <param name="key">A chave a ser localizada no dicionário de estado de modelo. </param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState}[],System.Int32)">
      <summary>Copia os elementos do dicionário de estado de modelo para uma matriz, começando em um índice especificado.</summary>
      <param name="array">A matriz unidimensional que é o destino dos elementos copiados a partir do objeto <see cref="T:System.Collections.Generic.ICollection`1" />.A matriz deve ter indexação baseada em zero.</param>
      <param name="arrayIndex">O índice baseado em zero na <paramref name="array" /> na qual a cópia inicia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é nulo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> é menor que 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimencional.-ou- <paramref name="arrayIndex" /> é igual a ou maior que o comprimento da <paramref name="array" />.-ou- O número de elementos na coleção de origem é maior que o espaço disponível do <paramref name="arrayIndex" /> ao fim da <paramref name="array" /> de destino.-ou- O tipo <paramref name="T" /> não pode ser convertido automaticamente no tipo da <paramref name="array" /> de destino.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Count">
      <summary>Obtém o número de pares chave/valor no conjunto.</summary>
      <returns>O número de pares chave/valor no conjunto.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.GetEnumerator">
      <summary>Retorna um enumerador que pode ser usado para iterar por meio do conjunto.</summary>
      <returns>Um enumerador que pode ser usado para iterar por meio do conjunto.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsReadOnly">
      <summary>Obtém um valor que indica se o conjunto é somente leitura.</summary>
      <returns>verdadeiro se o conjunto for somente leitura; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.IsValid">
      <summary>Obtém um valor que indica se esta instância do dicionário do estado de modelo é válida.</summary>
      <returns>verdadeiro se a instância for válida; caso contrário, falso.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.IsValidField(System.String)">
      <summary>Determina se há quaisquer objetos de <see cref="T:System.Web.Mvc.ModelError" /> que estão associados a ou prefixados com a chave especificada.</summary>
      <returns>verdadeiro se o dicionário de estado de modelo contiver um valor associado à chave especificada; caso contrário, falso.</returns>
      <param name="key">A chave.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="key" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Item(System.String)">
      <summary>Obtém ou define o valor que é associado à chave especificada.</summary>
      <returns>O item de estado de modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Keys">
      <summary>Obtém um conjunto que contém as chaves no dicionário.</summary>
      <returns>Um conjunto que contém as chaves do dicionário de estado de modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Merge(System.Web.Mvc.ModelStateDictionary)">
      <summary>Copia os valores do objeto do <see cref="T:System.Web.Mvc.ModelStateDictionary" /> especificado neste dicionário, substituindo os valores existentes caso as chaves sejam as mesmas.</summary>
      <param name="dictionary">O dicionário.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ModelState})">
      <summary>Remove a primeira ocorrência do objeto especificado do dicionário de estado de modelo.</summary>
      <returns>verdadeiro se <paramref name="item" /> foi removido com êxito do dicionário de estado de modelo; caso contrário, falso.Este método também retorna falso se <paramref name="item" /> não for encontrado no dicionário de estado de modelo.</returns>
      <param name="item">O objeto a ser removido do dicionário de estado de modelo.</param>
      <exception cref="T:System.NotSupportedException">O dicionário de estado de modelo é somente leitura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.Remove(System.String)">
      <summary>Remove o elemento que tem a chave especificada do dicionário de estado de modelo.</summary>
      <returns>verdadeiro se o elemento for removido com êxito; caso contrário, falso.Este método também retorna falso se <paramref name="key" /> não for encontrada no dicionário de estado de modelo.</returns>
      <param name="key">A chave do elemento a ser removido.</param>
      <exception cref="T:System.NotSupportedException">O dicionário de estado de modelo é somente leitura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.SetModelValue(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>Define o valor da chave especificada usando o dicionário de provedor de valor especificado.</summary>
      <param name="key">A chave.</param>
      <param name="value">O valor.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um enumerador que pode ser usado para iterar por meio do conjunto.</summary>
      <returns>Um enumerador que pode ser usado para iterar por meio do conjunto.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelStateDictionary.TryGetValue(System.String,System.Web.Mvc.ModelState@)">
      <summary>Tenta obter o valor que é associado à chave especificada.</summary>
      <returns>verdadeiro se o objeto que implementa <see cref="T:System.Collections.Generic.IDictionary`2" /> contiver um elemento que contém a chave especificada; caso contrário, falso.</returns>
      <param name="key">A chave do valor a ser obtido.</param>
      <param name="value">Quando esse método retorna, o valor associado à chave especificada, se a chave for encontrada; caso contrário, o valor padrão para o tipo do parâmetro do <paramref name="value" />.Este parâmetro é passado não inicializado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.ModelStateDictionary.Values">
      <summary>Obtém um conjunto que contém os valores no dicionário.</summary>
      <returns>Um conjunto que contém os valores do dicionário de estado de modelo.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidationResult">
      <summary>Fornece um contêiner para um resultado de validação.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidationResult.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ModelValidationResult" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.MemberName">
      <summary>Obtém ou define o nome do membro.</summary>
      <returns>O nome do membro.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidationResult.Message">
      <summary>Obtém ou define a mensagem do resultado da validação.</summary>
      <returns>A mensagem do resultado da validação.</returns>
    </member>
    <member name="T:System.Web.Mvc.ModelValidator">
      <summary>Fornece uma classe base para a implementação da lógica de validação.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Chamado a partir de construtores em classes derivadas para inicializar a classe <see cref="T:System.Web.Mvc.ModelValidator" />.</summary>
      <param name="metadata">Os metadados.</param>
      <param name="controllerContext">O contexto do controlador.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.ControllerContext">
      <summary>Obtém o contexto do controlador.</summary>
      <returns>O contexto do controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetClientValidationRules">
      <summary>Quando implementado em um classe derivada, retorna metadados para a validação do cliente.</summary>
      <returns>Os metadados para a validação do cliente.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.GetModelValidator(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Retorna um validador de modelo composto para o modelo.</summary>
      <returns>Um validador de modelo composto para o modelo.</returns>
      <param name="metadata">Os metadados.</param>
      <param name="context">O contexto do controlador.</param>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.IsRequired">
      <summary>Obtém ou define um valor que indica se uma propriedade de modelo é necessária.</summary>
      <returns>verdadeiro se a propriedade de modelo for necessária; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ModelValidator.Metadata">
      <summary>Obtém os metadados para o validador do modelo.</summary>
      <returns>Os metadados para o validador do modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.ModelValidator.Validate(System.Object)">
      <summary>Quando implementado em uma classe derivada, valida o objeto.</summary>
      <returns>Uma lista de resultados de validação.</returns>
      <param name="container">O contêiner.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProvider">
      <summary>Fornece uma lista de validadores para um modelo.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.#ctor">
      <summary>Quando implementada em uma classe derivada, inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProvider.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Obtém uma lista de validadores.</summary>
      <returns>Uma lista de validadores.</returns>
      <param name="metadata">Os metadados.</param>
      <param name="context">O contexto.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviderCollection">
      <summary>Representa a coleção de provedores de validador de modelo.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ModelValidatorProvider})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ModelValidatorProviderCollection" /> usando uma lista de provedores de validação de modelo.</summary>
      <param name="list">Uma lista de provedores de validação de modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.ClearItems">
      <summary>Remove todos os elementos da coleção.</summary>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.GetValidators(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Retorna a lista de validadores de modelo.</summary>
      <returns>A lista de validadores de modelo.</returns>
      <param name="metadata">Os metadados do modelo.</param>
      <param name="context">O contexto do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.InsertItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>Insere um provedor de validador de modelo na coleção.</summary>
      <param name="index">O índice baseado em zero em que o item deve ser inserido.</param>
      <param name="item">O objeto do provedor de validador de modelo a ser inserido.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.RemoveItem(System.Int32)">
      <summary>Remove o elemento no índice especificado da coleção.</summary>
      <param name="index">O índice baseado em zero do elemento a ser removido.</param>
    </member>
    <member name="M:System.Web.Mvc.ModelValidatorProviderCollection.SetItem(System.Int32,System.Web.Mvc.ModelValidatorProvider)">
      <summary>Substitui o elemento provedor de validador de modelo no índice especificado.</summary>
      <param name="index">O índice baseado em zero do elemento provedor de validador de modelo a ser substituído.</param>
      <param name="item">O novo valor para o elemento provedor de validador de modelo.</param>
    </member>
    <member name="T:System.Web.Mvc.ModelValidatorProviders">
      <summary>Fornece um contêiner para o provedor de validação atual.</summary>
    </member>
    <member name="P:System.Web.Mvc.ModelValidatorProviders.Providers">
      <summary>Obtém a coleção de provedores de validadores de modelo.</summary>
      <returns>A coleção de provedores de validadores de modelo.</returns>
    </member>
    <member name="T:System.Web.Mvc.MultiSelectList">
      <summary>Representa uma lista de itens na qual os usuários podem selecionar mais de um item.</summary>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.MultiSelectList" /> usando os itens especificados para incluir na lista.</summary>
      <param name="items">Os itens.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="items" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.MultiSelectList" /> usando os itens especificados para incluir na lista e os valores selecionados.</summary>
      <param name="items">Os itens.</param>
      <param name="selectedValues">Os valores selecionados.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="items" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicializa uma nova instância da classe MultiSelectList usando os itens para incluir na lista, os valores selecionados e os valores desabilitados.</summary>
      <param name="items">Os itens usados para construir cada <see cref="T:System.Web.Mvc.SelectListItem" /> da lista.</param>
      <param name="selectedValues">O campo de valores selecionados.Usado para corresponder a propriedade Selected do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="disabledValues">Os valores desabilitados.Usado para corresponder a propriedade Disabled do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.MultiSelectList" /> usando os itens a incluir na lista, o campo de valor de dados e o campo de texto de dados.</summary>
      <param name="items">Os itens.</param>
      <param name="dataValueField">O campo do valor dos dados.</param>
      <param name="dataTextField">O campo de texto dos dados.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="items" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.MultiSelectList" /> usando os itens a incluir na lista, o campo de valor de dados, o campo de texto de dados e os valores selecionados.</summary>
      <param name="items">Os itens.</param>
      <param name="dataValueField">O campo do valor dos dados.</param>
      <param name="dataTextField">O campo de texto dos dados.</param>
      <param name="selectedValues">Os valores selecionados.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="items" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicializa uma nova instância da classe MultiSelectList usando os itens a incluir na lista, o campo de valor de dados, o campo de texto de dados, os valores selecionados e os valores desabilitados.</summary>
      <param name="items">Os itens usados para construir cada <see cref="T:System.Web.Mvc.SelectListItem" /> da lista.</param>
      <param name="dataValueField">O campo do valor dos dados.Usado para corresponder a propriedade Value do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="dataTextField">O campo de texto dos dados.Usado para corresponder a propriedade Text do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="selectedValues">O campo de valores selecionados.Usado para corresponder a propriedade Selected do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="disabledValues">Os valores desabilitados.Usado para corresponder a propriedade Disabled do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe MultiSelectList usando os itens a incluir na lista, o campo de valor de dados, o campo de texto de dados e o campo de grupo de dados.</summary>
      <param name="items">Os itens usados para construir cada <see cref="T:System.Web.Mvc.SelectListItem" /> da lista.</param>
      <param name="dataValueField">O campo do valor dos dados.Usado para corresponder a propriedade Value do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="dataTextField">O campo de texto dos dados.Usado para corresponder a propriedade Text do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="dataGroupField">O campo de grupo de dados.Usado para corresponder a propriedade Group do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Collections.IEnumerable)">
      <summary>Inicializa uma nova instância da classe MultiSelectList usando os itens a incluir na lista, o campo de valor de dados, o campo de texto de dados, o campo de grupo de dados e os valores selecionados.</summary>
      <param name="items">Os itens usados para construir cada <see cref="T:System.Web.Mvc.SelectListItem" /> da lista.</param>
      <param name="dataValueField">O campo do valor dos dados.Usado para corresponder a propriedade Value do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="dataTextField">O campo de texto dos dados.Usado para corresponder a propriedade Text do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="dataGroupField">O campo de grupo de dados.Usado para corresponder a propriedade Group do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="selectedValues">O campo de valores selecionados.Usado para corresponder a propriedade Selected do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicializa uma nova instância da classe MultiSelectList usando os itens a incluir na lista, o campo de valor de dados, o campo de texto de dados, o campo de grupo de dados, os valores selecionados e os valores desabilitados.</summary>
      <param name="items">Os itens usados para construir cada <see cref="T:System.Web.Mvc.SelectListItem" /> da lista.</param>
      <param name="dataValueField">O campo do valor dos dados.Usado para corresponder a propriedade Value do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="dataTextField">O campo de texto dos dados.Usado para corresponder a propriedade Text do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="dataGroupField">O campo de grupo de dados.Usado para corresponder a propriedade Group do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="selectedValues">O campo de valores selecionados.Usado para corresponder a propriedade Selected do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="disabledValues">Os valores desabilitados.Usado para corresponder a propriedade Disabled do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Collections.IEnumerable,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicializa uma nova instância da classe MultiSelectList usando os itens a incluir na lista, o campo de valor de dados, o campo de texto de dados, o campo de grupo de dados, os valores selecionados, os valores desabilitados e os grupos desabilitados.</summary>
      <param name="items">Os itens usados para construir cada <see cref="T:System.Web.Mvc.SelectListItem" /> da lista.</param>
      <param name="dataValueField">O campo do valor dos dados.Usado para corresponder a propriedade Value do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="dataTextField">O campo de texto dos dados.Usado para corresponder a propriedade Text do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="dataGroupField">O campo de grupo de dados.Usado para corresponder a propriedade Group do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="selectedValues">O campo de valores selecionados.Usado para corresponder a propriedade Selected do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="disabledValues">Os valores desabilitados.Usado para corresponder a propriedade Disabled do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="disabledGroups">Os grupos desabilitados.Usado para corresponder a propriedade Disabled do <see cref="T:System.Web.Mvc.SelectListGroup" /> correspondente.</param>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataGroupField">
      <summary>Obtém o campo de grupo de dados.</summary>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataTextField">
      <summary>Obtém ou define o campo de texto de dados.</summary>
      <returns>O campo de texto dos dados.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DataValueField">
      <summary>Obtém ou define o campo de valor de dados.</summary>
      <returns>O campo do valor dos dados.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DisabledGroups">
      <summary>Obtém os grupos desabilitados.</summary>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.DisabledValues">
      <summary>Obtém os valores desabilitados.</summary>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.GetEnumerator">
      <summary>Retorna um enumerador que pode ser usado para iterar por meio do conjunto.</summary>
      <returns>Um enumerador que pode ser usado para iterar por meio do conjunto.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.Items">
      <summary>Obtém ou define os itens da lista.</summary>
      <returns>Os itens da lista.</returns>
    </member>
    <member name="P:System.Web.Mvc.MultiSelectList.SelectedValues">
      <summary>Obtém ou define os valores selecionados.</summary>
      <returns>Os valores selecionados.</returns>
    </member>
    <member name="M:System.Web.Mvc.MultiSelectList.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um enumerador que pode ser usado para iterar por meio de uma coleção.</summary>
      <returns>Um enumerador que pode ser usado para iterar por meio do conjunto.</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcFilter">
      <summary>Quando implementado em uma classe derivada, fornece uma classe de metadados que contém uma referência para a implementação de uma ou mais das interfaces de filtro, da ordem do filtro e do escopo do filtro.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.MvcFilter" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcFilter.#ctor(System.Boolean,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.MvcFilter" /> e especifica a ordem dos filtros e se vários filtros são permitidos.</summary>
      <param name="allowMultiple">verdadeiro para especificar que vários filtros do mesmo tipo são permitidos; caso contrário, falso.</param>
      <param name="order">A ordem do filtro.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.AllowMultiple">
      <summary>Obtém um valor que indica se mais de uma instância do atributo de filtro pode ser especificada.</summary>
      <returns>verdadeiro se mais de uma instância do atributo de filtro for permitida; caso contrário, falso.Implementa<see cref="P:System.Web.Mvc.IMvcFilter.AllowMultiple" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.MvcFilter.Order">
      <summary>Obtém um valor que indica a ordem em que um filtro é aplicado.</summary>
      <returns>Um valor que indica a ordem em que um filtro é aplicado.Implementa<see cref="P:System.Web.Mvc.IMvcFilter.Order" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.MvcHandler">
      <summary>Seleciona o controlador que tratará de uma solicitação HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.#ctor(System.Web.Routing.RequestContext)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.MvcHandler" />.</summary>
      <param name="requestContext">O contexto da solicitação.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="requestContext" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.AddVersionHeader(System.Web.HttpContextBase)">
      <summary>Adiciona o cabeçalho da versão usando o contexto HTTP especificado.</summary>
      <param name="httpContext">O contexto HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Chamado pelo ASP.NET para iniciar o processamento assíncrono da solicitação.</summary>
      <returns>O estado da chamada assíncrona.</returns>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="callback">O método de retorno de chamada assíncrono.</param>
      <param name="state">O estado do objeto assíncrono.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>Chamado pelo ASP.NET para iniciar o processamento assíncrono da solicitação usando o contexto base de HTTP.</summary>
      <returns>O estado da chamada assíncrona.</returns>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="callback">O método de retorno de chamada assíncrono.</param>
      <param name="state">O estado do objeto assíncrono.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.DisableMvcResponseHeader">
      <summary>Obtém ou define um valor que indica se o cabeçalho de resposta MVC está desabilitado.</summary>
      <returns>verdadeiro se o cabeçalho de resposta MVC estiver desabilitado; caso contrário, falso.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>Chamado pelo ASP.NET quando o processamento assíncrono da solicitação terminou.</summary>
      <param name="asyncResult">O resultado assíncrono.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.IsReusable">
      <summary>Obtém um valor que indica se outra solicitação pode usar a instância <see cref="T:System.Web.IHttpHandler" />.</summary>
      <returns>verdadeiro se a instância <see cref="T:System.Web.IHttpHandler" /> for reutilizável; caso contrário, falso.</returns>
    </member>
    <member name="F:System.Web.Mvc.MvcHandler.MvcVersionHeaderName">
      <summary>Contém o nome do cabeçalho da versão do ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContext)">
      <summary>Processa a solicitação usando o contexto de solicitação HTTP especificado.</summary>
      <param name="httpContext">O contexto HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.ProcessRequest(System.Web.HttpContextBase)">
      <summary>Processa a solicitação usando o contexto de solicitação HTTP base especificado.</summary>
      <param name="httpContext">O contexto HTTP.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.RequestContext">
      <summary>Obtém o contexto da solicitação.</summary>
      <returns>O contexto da solicitação.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Chamado pelo ASP.NET para iniciar o processamento assíncrono da solicitação usando o contexto base de HTTP.</summary>
      <returns>O estado da chamada assíncrona.</returns>
      <param name="context">O contexto HTTP.</param>
      <param name="cb">O método de retorno de chamada assíncrono.</param>
      <param name="extraData">Os dados.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>Chamado pelo ASP.NET quando o processamento assíncrono da solicitação terminou.</summary>
      <param name="result">O resultado assíncrono.</param>
    </member>
    <member name="P:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#IsReusable">
      <summary>Obtém um valor que indica se outra solicitação pode usar a instância <see cref="T:System.Web.IHttpHandler" />.</summary>
      <returns>verdadeiro se a instância <see cref="T:System.Web.IHttpHandler" /> for reutilizável; caso contrário, falso.</returns>
    </member>
    <member name="M:System.Web.Mvc.MvcHandler.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
      <summary>Habilita o processamento de solicitações da Web HTTP por um manipulador HTTP personalizado que implementa a interface <see cref="T:System.Web.IHttpHandler" />.</summary>
      <param name="httpContext">Um objeto <see cref="T:System.Web.HttpContext" /> que fornece referências aos objetos do servidor intrínsecos (por exemplo, Solicitação, Resposta, Sessão e Servidor) que são usados para solicitações HTTP de serviço.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHtmlString">
      <summary>Representa uma cadeia de caracteres codificada em HTML que não deve ser codificada novamente.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.#ctor(System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.MvcHtmlString" />.</summary>
      <param name="value">A cadeia de caracteres a ser criada.Se nenhum valor for atribuído, o objeto é criado usando um valor de cadeia de caracteres vazia.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.Create(System.String)">
      <summary>Cria uma cadeia de caracteres codificada em HTML usando o valor de texto especificado.</summary>
      <returns>Uma cadeia de caracteres codificada em HTML.</returns>
      <param name="value">O valor da cadeia de caracteres a ser criada.</param>
    </member>
    <member name="F:System.Web.Mvc.MvcHtmlString.Empty">
      <summary>Contém uma cadeia de caracteres em HTML vazia.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHtmlString.IsNullOrEmpty(System.Web.Mvc.MvcHtmlString)">
      <summary>Determina se a cadeia de caracteres especificada contém conteúdo ou é nula ou está vazia.</summary>
      <returns>verdadeiro se a cadeia de caracteres for nula ou estiver vazia; caso contrário, falso.</returns>
      <param name="value">A cadeia de caracteres.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcHttpHandler">
      <summary>Verifica e processa uma solicitação HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.MvcHttpHandler" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Chamado pelo ASP.NET para iniciar o processamento assíncrono da solicitação.</summary>
      <returns>O estado da chamada assíncrona.</returns>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="callback">O método de retorno de chamada assíncrono.</param>
      <param name="state">O estado.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.BeginProcessRequest(System.Web.HttpContextBase,System.AsyncCallback,System.Object)">
      <summary>Chamado pelo ASP.NET para iniciar o processamento assíncrono da solicitação.</summary>
      <returns>O estado da chamada assíncrona.</returns>
      <param name="httpContext">O contexto HTTP base.</param>
      <param name="callback">O método de retorno de chamada assíncrono.</param>
      <param name="state">O estado.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.EndProcessRequest(System.IAsyncResult)">
      <summary>Chamado pelo ASP.NET quando o processamento assíncrono da solicitação terminou.</summary>
      <param name="asyncResult">O resultado assíncrono.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
      <summary>Chamado pelo ASP.NET para iniciar o processamento assíncrono da solicitação.</summary>
      <returns>O estado da chamada assíncrona.</returns>
      <param name="context">O contexto.</param>
      <param name="cb">O método de retorno de chamada assíncrono.</param>
      <param name="extraData">Um objeto que contém dados.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
      <summary>Chamado pelo ASP.NET quando o processamento assíncrono da solicitação terminou.</summary>
      <param name="result">O status das operações assíncronas.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcHttpHandler.VerifyAndProcessRequest(System.Web.IHttpHandler,System.Web.HttpContextBase)">
      <summary>Verifica e processa uma solicitação HTTP.</summary>
      <param name="httpHandler">O manipulador HTTP.</param>
      <param name="httpContext">O contexto HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcRouteHandler">
      <summary>Cria um objeto que implementa a interface IHttpHandler e passa a ela o contexto de solicitação.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.MvcRouteHandler" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.#ctor(System.Web.Mvc.IControllerFactory)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.MvcRouteHandler" /> usando o objeto controlador de fábrica especificado.</summary>
      <param name="controllerFactory">A fábrica do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Retorna um manipulador HTTP usando o contexto HTTP especificado.</summary>
      <returns>O manipulador HTTP.</returns>
      <param name="requestContext">O contexto da solicitação.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.GetSessionStateBehavior(System.Web.Routing.RequestContext)">
      <summary>Retorna o comportamento da sessão.</summary>
      <returns>O comportamento da sessão.</returns>
      <param name="requestContext">O contexto da solicitação.</param>
    </member>
    <member name="M:System.Web.Mvc.MvcRouteHandler.System#Web#Routing#IRouteHandler#GetHttpHandler(System.Web.Routing.RequestContext)">
      <summary>Retorna um manipulador HTTP usando o contexto de solicitação especificado.</summary>
      <returns>O manipulador HTTP.</returns>
      <param name="requestContext">O contexto da solicitação.</param>
    </member>
    <member name="T:System.Web.Mvc.MvcWebRazorHostFactory">
      <summary>Cria instâncias de arquivos <see cref="T:System.Web.Mvc.MvcWebPageRazorHost" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.MvcWebRazorHostFactory" />. </summary>
    </member>
    <member name="M:System.Web.Mvc.MvcWebRazorHostFactory.CreateHost(System.String,System.String)">
      <summary>Cria um host Razor.</summary>
      <returns>Um host Razor.</returns>
      <param name="virtualPath">O caminho virtual para o arquivo de destino.</param>
      <param name="physicalPath">O caminho físico para o arquivo de destino.</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionExtensions">
      <summary>Estende um objeto NameValueCollection para que a coleção possa ser copiada para um dicionário especificado.</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Copia a coleção especificada para o destino especificado.</summary>
      <param name="collection">A coleção.</param>
      <param name="destination">O destino.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionExtensions.CopyTo(System.Collections.Specialized.NameValueCollection,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
      <summary>Copia a coleção especificada para o destino especificado e, opcionalmente, substitui as entradas anteriores.</summary>
      <param name="collection">A coleção.</param>
      <param name="destination">O destino.</param>
      <param name="replaceEntries">verdadeiro para substituir entradas anteriores; caso contrário, falso.</param>
    </member>
    <member name="T:System.Web.Mvc.NameValueCollectionValueProvider">
      <summary>Representa a classe base para os provedores de valor, cujos valores vêm de um objeto de <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" /> usando a coleção invalidada especificada.</summary>
      <param name="collection">Uma coleção que contém os valores usados ​​para inicializar o provedor.</param>
      <param name="unvalidatedCollection">Uma coleção que contém os valores usados ​​para inicializar o provedor.Essa coleção não será validada.</param>
      <param name="culture">Um objeto que contém informações sobre a cultura de destino.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo,System.Boolean)">
      <summary>Inicia o provedor de coleção Valor de nome.</summary>
      <param name="collection">Coleção de valor de chave da solicitação.</param>
      <param name="unvalidatedCollection">Coleção de valor de chave não validada da solicitação.</param>
      <param name="culture">Cultura com quais valores devem ser usados.</param>
      <param name="jQueryToMvcRequestNormalizationRequired">POST jQuery ao enviar objetos Javascript complexos ao servidor não codifica de forma compreensível pelo MVC.Este sinalizador deve ser definido se a solicitação for normalizada para a forma MVC - https://aspnetwebstack.codeplex.com/workitem/1564.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.#ctor(System.Collections.Specialized.NameValueCollection,System.Globalization.CultureInfo)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.NameValueCollectionValueProvider" />.</summary>
      <param name="collection">Uma coleção que contém os valores usados ​​para inicializar o provedor.</param>
      <param name="culture">Um objeto que contém informações sobre a cultura de destino.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="collection" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.ContainsPrefix(System.String)">
      <summary>Determina se o conjunto contém o prefixo especificado.</summary>
      <returns>verdadeiro se o conjunto contiver o prefixo especificado; caso contrário, falso.</returns>
      <param name="prefix">O prefixo a ser pesquisado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="prefix" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Obtém as chaves do prefixo especificado.</summary>
      <returns>As chaves.</returns>
      <param name="prefix">O prefixo.</param>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String)">
      <summary>Retorna um objeto de valor usando a chave especificada.</summary>
      <returns>O objeto de valor para a chave especificada.</returns>
      <param name="key">A chave do objeto de valor a ser recuperado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="key" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.NameValueCollectionValueProvider.GetValue(System.String,System.Boolean)">
      <summary>Retorna um objeto de valor usando a chave especificada e a regra de validação.</summary>
      <returns>O objeto de valor para a chave especificada.</returns>
      <param name="key">A chave.</param>
      <param name="skipValidation">verdadeiro se a validação deve ser ignorada; caso contrário, falso.</param>
    </member>
    <member name="T:System.Web.Mvc.NoAsyncTimeoutAttribute">
      <summary>Fornece um wrapper de conveniência para o atributo <see cref="T:System.Web.Mvc.AsyncTimeoutAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NoAsyncTimeoutAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.NoAsyncTimeoutAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.NonActionAttribute">
      <summary>Representa um atributo que é usado para indicar que um método de controlador não é um método de ação.</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.NonActionAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.NonActionAttribute.IsValidForRequest(System.Web.Mvc.ControllerContext,System.Reflection.MethodInfo)">
      <summary>Determina se o atributo marca um método que não seja um método de ação usando o contexto de controlador especificado.</summary>
      <returns>verdadeiro se o atributo marcar um método válido que não seja de ação; caso contrário, falso.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="methodInfo">As informações do método.</param>
    </member>
    <member name="T:System.Web.Mvc.OutputCacheAttribute">
      <summary>Representa um atributo usado para marcar um método de ação cuja saída será armazenada em cache.</summary>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.OutputCacheAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.CacheProfile">
      <summary>Obtém ou define o nome de perfil do cache.</summary>
      <returns>O nome de perfil do cache.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.ChildActionCache">
      <summary>Obtém ou define o cache da ação filha.</summary>
      <returns>O cache da ação filha.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Duration">
      <summary>Obtém ou define a duração do cache, em segundos.</summary>
      <returns>A duração do cache.</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.IsChildActionCacheActive(System.Web.Mvc.ControllerContext)">
      <summary>Retorna um valor que indica se um cache de ação filha está ativo.</summary>
      <returns>verdadeiro se o cache da ação filha estiver ativo; caso contrário, falso.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.Location">
      <summary>Obtém ou define o local.</summary>
      <returns>O local.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.NoStore">
      <summary>Obtém ou define um valor que indica se o armazenamento de cache é necessário ou não.</summary>
      <returns>verdadeiro se o cache deve ser armazenado; caso contrário, falso.</returns>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
      <summary>Este método é uma implementação do <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)" /> e é compatível com a infraestrutura ASP.NET MVC.Não se destina a ser usado diretamente de seu código.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
      <summary>Este método é uma implementação do <see cref="M:System.Web.Mvc.IActionFilter.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)" /> e é compatível com a infraestrutura ASP.NET MVC.Não se destina a ser usado diretamente de seu código.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnException(System.Web.Mvc.ExceptionContext)">
      <summary>Este método é uma implementação do <see cref="M:System.Web.Mvc.IExceptionFilter.OnException(System.Web.Mvc.ExceptionContext)" /> e é compatível com a infraestrutura ASP.NET MVC.Não se destina a ser usado diretamente de seu código.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
      <summary>Este método é uma implementação do <see cref="M:System.Web.Mvc.IResultFilter.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" /> e é compatível com a infraestrutura ASP.NET MVC.Não se destina a ser usado diretamente de seu código.</summary>
      <param name="filterContext">O contexto do filtro.</param>
    </member>
    <member name="M:System.Web.Mvc.OutputCacheAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
      <summary>Chamado antes de o resultado da ação ser executado.</summary>
      <param name="filterContext">O contexto do filtro, que encapsula as informações para usar o <see cref="T:System.Web.Mvc.AuthorizeAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="filterContext" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.SqlDependency">
      <summary>Obtém ou define a dependência do SQL.</summary>
      <returns>A dependência do SQL.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByContentEncoding">
      <summary>Obtém ou define a codificação variada por conteúdo.</summary>
      <returns>A codificação variada por conteúdo.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByCustom">
      <summary>Obtém ou define o valor variado por personalização.</summary>
      <returns>O valor variado por personalização.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByHeader">
      <summary>Obtém ou define o valor variado por cabeçalho.</summary>
      <returns>O valor variado por cabeçalho.</returns>
    </member>
    <member name="P:System.Web.Mvc.OutputCacheAttribute.VaryByParam">
      <summary>Obtém ou define o valor variado por parâmetro.</summary>
      <returns>O valor variado por parâmetro.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideActionFiltersAttribute">
      <summary>Representa os atributos associados ao filtro de substituição.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideActionFiltersAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.OverrideActionFiltersAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideActionFiltersAttribute.FiltersToOverride">
      <summary>Obtém os filtros a substituir para esta instância.</summary>
      <returns>Os filtros a substituir para esta instância.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideAuthenticationAttribute">
      <summary>Representa os atributos associados à autenticação.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideAuthenticationAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.OverrideAuthenticationAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideAuthenticationAttribute.FiltersToOverride">
      <summary>Obtém os filtros a substituir para esta instância.</summary>
      <returns>Os filtros a substituir para esta instância.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideAuthorizationAttribute">
      <summary>Representa os atributos associados à autorização.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideAuthorizationAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.OverrideAuthorizationAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideAuthorizationAttribute.FiltersToOverride">
      <summary>Obtém os filtros a substituir para esta instância.</summary>
      <returns>Os filtros a substituir para esta instância.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideExceptionFiltersAttribute">
      <summary>Representa os atributos associados ao filtro de exceção.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideExceptionFiltersAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.OverrideExceptionFiltersAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideExceptionFiltersAttribute.FiltersToOverride">
      <summary>Obtém os filtros a substituir para esta instância.</summary>
      <returns>Os filtros a substituir para esta instância.</returns>
    </member>
    <member name="T:System.Web.Mvc.OverrideResultFiltersAttribute">
      <summary>Representa os atributos associados ao filtro de resultado.</summary>
    </member>
    <member name="M:System.Web.Mvc.OverrideResultFiltersAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.OverrideResultFiltersAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.OverrideResultFiltersAttribute.FiltersToOverride">
      <summary>Obtém os filtros a substituir para esta instância.</summary>
      <returns>Os filtros a substituir para esta instância.</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterBindingInfo">
      <summary>Encapsula as informações para associar parâmetros de método de ação a um modelo de dados.</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterBindingInfo.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ParameterBindingInfo" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Binder">
      <summary>Obtém o associador de modelo.</summary>
      <returns>O associador de modelos.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Exclude">
      <summary>Obtém uma lista delimitada por vírgulas de nomes de propriedades para as quais a associação está desabilitada.</summary>
      <returns>A lista de exclusões.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Include">
      <summary>Obtém uma lista delimitada por vírgulas de nomes de propriedades para as quais a associação está habilitada.</summary>
      <returns>A lista de inclusões.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterBindingInfo.Prefix">
      <summary>Obtém o prefixo a ser usado quando a estrutura do MVC associa um valor a um parâmetro de ação ou a uma propriedade de modelo.</summary>
      <returns>O prefixo.</returns>
    </member>
    <member name="T:System.Web.Mvc.ParameterDescriptor">
      <summary>Contém informações que descrevem um parâmetro.</summary>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ParameterDescriptor" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ActionDescriptor">
      <summary>Obtém o descritor da ação.</summary>
      <returns>O descritor da ação.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.BindingInfo">
      <summary>Obtém as informações de associação.</summary>
      <returns>As informações de associação.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.DefaultValue">
      <summary>Obtém o valor padrão do parâmetro.</summary>
      <returns>O valor padrão do parâmetro.</returns>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Retorna uma matriz de atributos personalizados definidos para esse membro, excluindo atributos nomeados.</summary>
      <returns>Uma matriz de atributos personalizados ou uma matriz vazia se não existirem atributos personalizados.</returns>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
      <exception cref="T:System.TypeLoadException">Não é possível carregar o tipo de atributo personalizado.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Há mais de um atributo do tipo <paramref name="attributeType" /> definido por este membro.</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Retorna uma matriz de atributos personalizados definidos para esse membro, identificados por tipo.</summary>
      <returns>Uma matriz de atributos personalizados ou uma matriz vazia se não existirem atributos personalizados.</returns>
      <param name="attributeType">O tipo dos atributos personalizados.</param>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
      <exception cref="T:System.TypeLoadException">Não é possível carregar o tipo de atributo personalizado.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Há mais de um atributo do tipo <paramref name="attributeType" /> definido por este membro.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="attributeType" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Indica se uma ou mais instâncias de um tipo de atributo personalizado são definidas para esse membro.</summary>
      <returns>verdadeiro se o tipo de atributo personalizado é definido para este membro, caso contrário, falso.</returns>
      <param name="attributeType">O tipo dos atributos personalizados.</param>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="attributeType" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterName">
      <summary>Obtém o nome do parâmetro.</summary>
      <returns>O nome do parâmetro.</returns>
    </member>
    <member name="P:System.Web.Mvc.ParameterDescriptor.ParameterType">
      <summary>Obtém o tipo do parâmetro.</summary>
      <returns>O tipo do parâmetro.</returns>
    </member>
    <member name="T:System.Web.Mvc.PartialViewResult">
      <summary>Representa uma classe básica usada para enviar uma exibição parcial à resposta.</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.PartialViewResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.PartialViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Retorna o objeto <see cref="T:System.Web.Mvc.ViewEngineResult" /> usado para renderizar a exibição.</summary>
      <returns>O resultado do mecanismo de exibição.</returns>
      <param name="context">O contexto do controlador.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro enquanto o método tentava encontrar a exibição.</exception>
    </member>
    <member name="T:System.Web.Mvc.PreApplicationStartCode">
      <summary>Fornece um ponto de registro para um código inicial pré-aplicativo do ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.PreApplicationStartCode.Start">
      <summary>Registra o código inicial pré-aplicativo do Razor.</summary>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProvider">
      <summary>Representa um provedor de valor para cadeias de consulta contidas em um objeto de <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.QueryStringValueProvider" />.</summary>
      <param name="controllerContext">Um objeto que encapsula informações sobre a solicitação HTTP atual.</param>
    </member>
    <member name="T:System.Web.Mvc.QueryStringValueProviderFactory">
      <summary>Representa uma classe responsável pela criação de uma nova instância de um objeto de provedor de valor de cadeia de consulta.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.QueryStringValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.QueryStringValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Retorna um objeto de provedor de valor para o contexto de controlador especificado.</summary>
      <returns>Um objeto de provedor de valor de cadeia de consulta.</returns>
      <param name="controllerContext">Um objeto que encapsula informações sobre a solicitação HTTP atual.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="controllerContext" /> é nulo.</exception>
    </member>
    <member name="T:System.Web.Mvc.RangeAttributeAdapter">
      <summary>Fornece um adaptador para o atributo <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RangeAttribute)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute" />.</summary>
      <param name="metadata">Os metadados do modelo.</param>
      <param name="context">O contexto do controlador.</param>
      <param name="attribute">O atributo do intervalo.</param>
    </member>
    <member name="M:System.Web.Mvc.RangeAttributeAdapter.GetClientValidationRules">
      <summary>Obtém uma lista de regras de validação do cliente para uma verificação de intervalos.</summary>
      <returns>Uma lista de regras de validação do cliente para uma verificação de intervalos.</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorView">
      <summary>Representa a classe usada para criar exibições que têm sintaxe Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.RazorView" />.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="viewPath">O caminho da exibição.</param>
      <param name="layoutPath">O layout ou página mestra.</param>
      <param name="runViewStartPages">Um valor que indica se os arquivos de início de exibição devem ser executados antes da exibição.</param>
      <param name="viewStartFileExtensions">O conjunto de extensões que serão usadas ao procurar arquivos de início de exibição.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String},System.Web.Mvc.IViewPageActivator)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.RazorView" /> usando o ativador da página de exibição.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="viewPath">O caminho da exibição.</param>
      <param name="layoutPath">O layout ou página mestra.</param>
      <param name="runViewStartPages">Um valor que indica se os arquivos de início de exibição devem ser executados antes da exibição.</param>
      <param name="viewStartFileExtensions">O conjunto de extensões que serão usadas ao procurar arquivos de início de exibição.</param>
      <param name="viewPageActivator">O ativador da página de exibição.</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.LayoutPath">
      <summary>Obtém o layout ou página mestra.</summary>
      <returns>O layout ou página mestra.</returns>
    </member>
    <member name="M:System.Web.Mvc.RazorView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Renderiza o contexto de exibição especificado usando o gravador e a instância <see cref="T:System.Web.Mvc.WebViewPage" /> especificados.</summary>
      <param name="viewContext">O contexto da exibição.</param>
      <param name="writer">O gravador usado para renderizar a exibição para a resposta.</param>
      <param name="instance">A instância <see cref="T:System.Web.Mvc.WebViewPage" />.</param>
    </member>
    <member name="P:System.Web.Mvc.RazorView.RunViewStartPages">
      <summary>Obtém um valor que indica se os arquivos de início de exibição devem ser executados antes da exibição.</summary>
      <returns>Um valor que indica se os arquivos de início de exibição devem ser executados antes da exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.RazorView.ViewStartFileExtensions">
      <summary>Obtém ou define o conjunto de extensões de arquivo que serão usadas ao procurar arquivos de início de exibição.</summary>
      <returns>O conjunto de extensões de arquivo que serão usadas ao procurar arquivos de início de exibição.</returns>
    </member>
    <member name="T:System.Web.Mvc.RazorViewEngine">
      <summary>Representa um mecanismo de exibição usado para renderizar uma página da Web que usa a sintaxe ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.RazorViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.RazorViewEngine" /> usando o ativador da página de exibição.</summary>
      <param name="viewPageActivator">O ativador da página de exibição.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Cria uma exibição parcial usando o contexto de controlador e caminho parcial especificados.</summary>
      <returns>A exibição parcial.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="partialPath">O caminho para a exibição parcial.</param>
    </member>
    <member name="M:System.Web.Mvc.RazorViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Cria uma exibição usando o contexto de controlador especificado e os caminhos da exibição e do modo de exibição mestre.</summary>
      <returns>A exibição.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="viewPath">O caminho para a exibição.</param>
      <param name="masterPath">O caminho para o modo de exibição mestre.</param>
    </member>
    <member name="T:System.Web.Mvc.RedirectResult">
      <summary>Controla o processamento de ações de aplicativos ao redirecionar para um URI especificado.</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.RedirectResult" />.</summary>
      <param name="url">A URL de destino.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="url" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.#ctor(System.String,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.RedirectResult" /> usando a URL e o sinalizador de redirecionamento permanente especificados.</summary>
      <param name="url">A URL.</param>
      <param name="permanent">Um valor que indica se o redirecionamento deve ser permanente.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Habilita o processamento do resultado de um método de ação por um tipo personalizado que herda da classe <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">O contexto no qual o resultado é executado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="context" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Permanent">
      <summary>Obtém um valor que indica se o redirecionamento deve ser permanente.</summary>
      <returns>verdadeiro se o redirecionamento deve ser permanente; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectResult.Url">
      <summary>Obtém ou define a URL de destino.</summary>
      <returns>A URL de destino.</returns>
    </member>
    <member name="T:System.Web.Mvc.RedirectToRouteResult">
      <summary>Representa um resultado que realiza um redirecionamento usando o dicionário de valores de rota especificado.</summary>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> usando o nome de rota e os valores de rota especificados.</summary>
      <param name="routeName">O nome da rota.</param>
      <param name="routeValues">Os valores de rota.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Boolean)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> usando o nome da rota, os valores de rota e o sinalizador de redirecionamento permanente especificados.</summary>
      <param name="routeName">O nome da rota.</param>
      <param name="routeValues">Os valores de rota.</param>
      <param name="permanent">Um valor que indica se o redirecionamento deve ser permanente.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.#ctor(System.Web.Routing.RouteValueDictionary)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.RedirectToRouteResult" /> usando os valores de rota especificados.</summary>
      <param name="routeValues">Os valores de rota.</param>
    </member>
    <member name="M:System.Web.Mvc.RedirectToRouteResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Habilita o processamento do resultado de um método de ação por um tipo personalizado que herda da classe <see cref="T:System.Web.Mvc.ActionResult" />.</summary>
      <param name="context">O contexto no qual o resultado é executado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="context" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.Permanent">
      <summary>Obtém um valor que indica se o redirecionamento deve ser permanente.</summary>
      <returns>verdadeiro se o redirecionamento deve ser permanente; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteName">
      <summary>Obtém ou define o nome da rota.</summary>
      <returns>O nome da rota.</returns>
    </member>
    <member name="P:System.Web.Mvc.RedirectToRouteResult.RouteValues">
      <summary>Obtém ou define os valores de rota.</summary>
      <returns>Os valores de rota.</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedActionDescriptor">
      <summary>Contém as informações que descrevem um método de ação refletido.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ReflectedActionDescriptor" />.</summary>
      <param name="methodInfo">As informações do método de ação.</param>
      <param name="actionName">O nome da ação.</param>
      <param name="controllerDescriptor">O descritor do controlador.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="methodInfo" /> ou <paramref name="controllerDescriptor" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="actionName" /> é nulo ou está vazio.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ActionName">
      <summary>Obtém o nome da ação.</summary>
      <returns>O nome da ação.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.ControllerDescriptor">
      <summary>Obtém o descritor do controlador.</summary>
      <returns>O descritor do controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Executa o contexto de controlador especificado usando os parâmetros de método de ação especificados.</summary>
      <returns>O valor de retorno da ação.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="parameters">Os parâmetros.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="parameters" /> ou parâmetro <paramref name="controllerContext" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Retorna uma matriz de atributos personalizados definidos para esse membro, excluindo atributos nomeados.</summary>
      <returns>Uma matriz de atributos personalizados ou uma matriz vazia se não existirem atributos personalizados.</returns>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
      <exception cref="T:System.TypeLoadException">Não é possível carregar o tipo de atributo personalizado.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Há mais de um atributo do tipo <paramref name="attributeType" /> definido por este membro.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Retorna uma matriz de atributos personalizados definidos para esse membro, identificados por tipo.</summary>
      <returns>Uma matriz de atributos personalizados ou uma matriz vazia se não existirem atributos personalizados.</returns>
      <param name="attributeType">O tipo dos atributos personalizados.</param>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
      <exception cref="T:System.TypeLoadException">Não é possível carregar o tipo de atributo personalizado.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Há mais de um atributo do tipo <paramref name="attributeType" /> definido por este membro.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Obtém os atributos do filtro.</summary>
      <returns>Os atributos do filtro.</returns>
      <param name="useCache">verdadeiro para usar em cache; caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetParameters">
      <summary>Recupera os parâmetros do método de ação.</summary>
      <returns>Os parâmetros do método de ação.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.GetSelectors">
      <summary>Recupera os seletores de ação.</summary>
      <returns>Os seletores de ação.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Indica se uma ou mais instâncias de um tipo de atributo personalizado são definidas para esse membro.</summary>
      <returns>verdadeiro se o tipo de atributo personalizado é definido para este membro, caso contrário, falso.</returns>
      <param name="attributeType">O tipo dos atributos personalizados.</param>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.MethodInfo">
      <summary>Obtém ou define as informações do método de ação.</summary>
      <returns>As informações do método de ação.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedActionDescriptor.UniqueId">
      <summary>Obtém a ID exclusiva para o descritor da ação refletido usando inicialização lenta.</summary>
      <returns>A ID exclusiva.</returns>
    </member>
    <member name="T:System.Web.Mvc.ReflectedControllerDescriptor">
      <summary>Contém informações que descrevem um controlador refletido.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.#ctor(System.Type)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ReflectedControllerDescriptor" />.</summary>
      <param name="controllerType">O tipo do controlador.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="controllerType" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedControllerDescriptor.ControllerType">
      <summary>Obtém o tipo do controlador.</summary>
      <returns>O tipo do controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Encontra a ação especificada para o contexto de controlador especificado.</summary>
      <returns>As informações sobre a ação.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionName">O nome da ação.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="controllerContext" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="actionName" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCanonicalActions">
      <summary>Retorna a lista de ações para o controlador.</summary>
      <returns>Uma lista dos descritores de ação para o controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Retorna uma matriz de atributos personalizados definidos para esse membro, excluindo atributos nomeados.</summary>
      <returns>Uma matriz de atributos personalizados ou uma matriz vazia se não existirem atributos personalizados.</returns>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
      <exception cref="T:System.TypeLoadException">Não é possível carregar o tipo de atributo personalizado.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Há mais de um atributo do tipo <paramref name="attributeType" /> definido por este membro.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Retorna uma matriz de atributos personalizados definidos para esse membro, identificados por tipo.</summary>
      <returns>Uma matriz de atributos personalizados ou uma matriz vazia se não existirem atributos personalizados.</returns>
      <param name="attributeType">O tipo dos atributos personalizados.</param>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
      <exception cref="T:System.TypeLoadException">Não é possível carregar o tipo de atributo personalizado.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Há mais de um atributo do tipo <paramref name="attributeType" /> definido por este membro.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Obtém os atributos do filtro.</summary>
      <returns>Os atributos do filtro.</returns>
      <param name="useCache">verdadeiro para usar em cache; caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.ReflectedControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Retorna um valor que indica se uma ou mais instâncias de um tipo de atributo personalizado são definidas para esse membro.</summary>
      <returns>verdadeiro se o tipo de atributo personalizado é definido para este membro, caso contrário, falso.</returns>
      <param name="attributeType">O tipo dos atributos personalizados.</param>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
    </member>
    <member name="T:System.Web.Mvc.ReflectedParameterDescriptor">
      <summary>Contém as informações que descrevem um parâmetro de método de ação refletido.</summary>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.#ctor(System.Reflection.ParameterInfo,System.Web.Mvc.ActionDescriptor)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ReflectedParameterDescriptor" />.</summary>
      <param name="parameterInfo">As informações do parâmetro.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="parameterInfo" /> ou parâmetro <paramref name="actionDescriptor" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ActionDescriptor">
      <summary>Obtém o descritor da ação.</summary>
      <returns>O descritor da ação.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.BindingInfo">
      <summary>Obtém as informações de associação.</summary>
      <returns>As informações de associação.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.DefaultValue">
      <summary>Obtém o valor padrão do parâmetro refletido.</summary>
      <returns>O valor padrão do parâmetro refletido.</returns>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Retorna uma matriz de atributos personalizados definidos para esse membro, excluindo atributos nomeados.</summary>
      <returns>Uma matriz de atributos personalizados ou uma matriz vazia se não existirem atributos personalizados.</returns>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
      <exception cref="T:System.TypeLoadException">Não é possível carregar o tipo de atributo personalizado.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Há mais de um atributo do tipo <paramref name="attributeType" /> definido por este membro.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Retorna uma matriz de atributos personalizados definidos para esse membro, identificados por tipo.</summary>
      <returns>Uma matriz de atributos personalizados ou uma matriz vazia se não existirem atributos personalizados.</returns>
      <param name="attributeType">O tipo dos atributos personalizados.</param>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
      <exception cref="T:System.TypeLoadException">Não é possível carregar o tipo de atributo personalizado.</exception>
      <exception cref="T:System.Reflection.AmbiguousMatchException">Há mais de um atributo do tipo <paramref name="attributeType" /> definido por este membro.</exception>
    </member>
    <member name="M:System.Web.Mvc.ReflectedParameterDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Retorna um valor que indica se uma ou mais instâncias de um tipo de atributo personalizado são definidas para esse membro.</summary>
      <returns>verdadeiro se o tipo de atributo personalizado é definido para este membro, caso contrário, falso.</returns>
      <param name="attributeType">O tipo dos atributos personalizados.</param>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterInfo">
      <summary>Obtém ou define as informações do parâmetro.</summary>
      <returns>As informações do parâmetro.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterName">
      <summary>Obtém o nome do parâmetro.</summary>
      <returns>O nome do parâmetro.</returns>
    </member>
    <member name="P:System.Web.Mvc.ReflectedParameterDescriptor.ParameterType">
      <summary>Obtém o tipo do parâmetro.</summary>
      <returns>O tipo do parâmetro.</returns>
    </member>
    <member name="T:System.Web.Mvc.RegularExpressionAttributeAdapter">
      <summary>Fornece um adaptador para o atributo <see cref="T:System.ComponentModel.DataAnnotations.RegularExpressionAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RegularExpressionAttribute)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.RegularExpressionAttributeAdapter" />.</summary>
      <param name="metadata">Os metadados do modelo.</param>
      <param name="context">O contexto do controlador.</param>
      <param name="attribute">O atributo de expressão regular.</param>
    </member>
    <member name="M:System.Web.Mvc.RegularExpressionAttributeAdapter.GetClientValidationRules">
      <summary>Obtém uma lista de regras de validação de cliente de expressão regular.</summary>
      <returns>Uma lista de regras de validação de cliente de expressão regular.</returns>
    </member>
    <member name="T:System.Web.Mvc.RemoteAttribute">
      <summary>Fornece um atributo que usa o validador remoto de plug-in jQuery. </summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.RemoteAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.RemoteAttribute" /> usando o nome de rota especificado.</summary>
      <param name="routeName">O nome da rota.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.RemoteAttribute" /> usando o nome do controlador e o nome do método de ação especificados.</summary>
      <param name="action">O nome do método de ação.</param>
      <param name="controller">O nome do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.RemoteAttribute" /> usando o nome do método de ação, o nome do controlador e o nome da área especificados.</summary>
      <param name="action">O nome do método de ação.</param>
      <param name="controller">O nome do controlador.</param>
      <param name="areaName">O nome da área.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.#ctor(System.String,System.String,System.Web.Mvc.AreaReference)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.RemoteAttribute" />.</summary>
      <param name="action">O nome da rota.</param>
      <param name="controller">O nome do controlador.</param>
      <param name="areaReference">Encontre o controlador na raiz se <see cref="F:System.Web.Mvc.AreaReference.UseRoot" />.Caso contrário, procure na área atual.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.AdditionalFields">
      <summary>Obtém ou define os campos adicionais necessários para validação.</summary>
      <returns>Os campos adicionais necessários para a validação.</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatAdditionalFieldsForClientValidation(System.String)">
      <summary>Retorna uma cadeia de caracteres delimitada por vírgulas de nomes de campos de validação.</summary>
      <returns>Uma cadeia de caracteres delimitada por vírgulas de nomes de campos de validação.</returns>
      <param name="property">O nome da propriedade de validação.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatErrorMessage(System.String)">
      <summary>Formata a mensagem de erro exibida quando a validação falha.</summary>
      <returns>Uma mensagem de erro formatada.</returns>
      <param name="name">Um nome a ser exibido com a mensagem de erro.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.FormatPropertyForClientValidation(System.String)">
      <summary>Formata a propriedade para a validação do cliente, precedendo um asterisco (*) e um ponto.</summary>
      <returns>A cadeia de caracteres "*." É colocada antes da propriedade.</returns>
      <param name="property">A propriedade.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetClientValidationRules(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Obtém uma lista de regras de validação do cliente para a propriedade.</summary>
      <returns>Uma lista de regras de validação do cliente para a propriedade.</returns>
      <param name="metadata">Os metadados do modelo.</param>
      <param name="context">O contexto do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.GetUrl(System.Web.Mvc.ControllerContext)">
      <summary>Obtém a URL para a chamada de validação remota.</summary>
      <returns>A URL para a chamada de validação remota.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.HttpMethod">
      <summary>Obtém ou define o método HTTP usado para a validação remota.</summary>
      <returns>O método HTTP usado para a validação remota.O valor padrão é "Get".</returns>
    </member>
    <member name="M:System.Web.Mvc.RemoteAttribute.IsValid(System.Object)">
      <summary>Este método sempre retorna verdadeiro.</summary>
      <returns>verdadeiro</returns>
      <param name="value">O destino de validação.</param>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteData">
      <summary>Obtém o dicionário de dados de rota.</summary>
      <returns>O dicionário de dados de rota.</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.RouteName">
      <summary>Obtém ou define o nome da rota.</summary>
      <returns>O nome da rota.</returns>
    </member>
    <member name="P:System.Web.Mvc.RemoteAttribute.Routes">
      <summary>Obtém a coleção de rotas a partir da tabela de rotas.</summary>
      <returns>A coleção de rotas a partir da tabela de rotas.</returns>
    </member>
    <member name="T:System.Web.Mvc.RequiredAttributeAdapter">
      <summary>Fornece um adaptador para o atributo <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.RequiredAttribute)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Runtime.CompilerServices.RequiredAttributeAttribute" />.</summary>
      <param name="metadata">Os metadados do modelo.</param>
      <param name="context">O contexto do controlador.</param>
      <param name="attribute">O atributo necessário.</param>
    </member>
    <member name="M:System.Web.Mvc.RequiredAttributeAdapter.GetClientValidationRules">
      <summary>Obtém uma lista de regras de validação de cliente de valor necessário.</summary>
      <returns>Uma lista de regras de validação de cliente de valor necessário.</returns>
    </member>
    <member name="T:System.Web.Mvc.RequireHttpsAttribute">
      <summary>Representa um atributo que força uma solicitação HTTP insegura a ser reenviada via HTTPS.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)">
      <summary>Trata de solicitações HTTP inseguras enviadas ao método de ação.</summary>
      <param name="filterContext">Um objeto que encapsula as informações necessárias a fim de usar o atributo <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</param>
      <exception cref="T:System.InvalidOperationException">A solicitação HTTP contém uma substituição de método de transferência inválida.Todas as solicitações GET são consideradas inválidas.</exception>
    </member>
    <member name="M:System.Web.Mvc.RequireHttpsAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Determina se uma solicitação é segura (HTTPS) e, se não for, chama o método <see cref="M:System.Web.Mvc.RequireHttpsAttribute.HandleNonHttpsRequest(System.Web.Mvc.AuthorizationContext)" />.</summary>
      <param name="filterContext">Um objeto que encapsula as informações necessárias a fim de usar o atributo <see cref="T:System.Web.Mvc.RequireHttpsAttribute" />.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="filterContext" /> é nulo.</exception>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutedContext">
      <summary>Fornece o contexto para o método <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)" /> da classe <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ResultExecutedContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutedContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult,System.Boolean,System.Exception)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ResultExecutedContext" />.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="result">O objeto de resultado.</param>
      <param name="canceled">verdadeiro para cancelar a execução; caso contrário, falso.</param>
      <param name="exception">O objeto de exceção.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="result" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Canceled">
      <summary>Obtém ou define um valor que indica se esta instância de <see cref="T:System.Web.Mvc.ResultExecutedContext" /> foi cancelada.</summary>
      <returns>verdadeiro se a instância foi cancelada; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Exception">
      <summary>Obtém ou define o objeto de exceção.</summary>
      <returns>O objeto de exceção.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.ExceptionHandled">
      <summary>Obtém ou define um valor que indica se a exceção foi tratada.</summary>
      <returns>verdadeiro se a exceção foi tratada; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutedContext.Result">
      <summary>Obtém ou define o resultado da ação.</summary>
      <returns>O resultado da ação.</returns>
    </member>
    <member name="T:System.Web.Mvc.ResultExecutingContext">
      <summary>Fornece o contexto para o método <see cref="M:System.Web.Mvc.ActionFilterAttribute.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)" /> da classe <see cref="T:System.Web.Mvc.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ResultExecutingContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ResultExecutingContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionResult)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ResultExecutingContext" /> usando o contexto do controlador e resultado de ação especificados.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="result">O resultado da ação.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="result" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Cancel">
      <summary>Obtém ou define um valor que indica se este valor <see cref="T:System.Web.Mvc.ResultExecutingContext" /> é "cancelar".</summary>
      <returns>verdadeiro se o valor for "cancelar"; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ResultExecutingContext.Result">
      <summary>Obtém ou define o resultado da ação.</summary>
      <returns>O resultado da ação.</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteAreaAttribute">
      <summary>Define a área para todas as rotas definidas neste controlador.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAreaAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.RouteAreaAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAreaAttribute.#ctor(System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.RouteAreaAttribute" />.</summary>
      <param name="areaName">O nome da área.Se o valor for nulo, uma tentativa será feita para inferir o nome da área a partir do namespace do controlador de destino.</param>
    </member>
    <member name="P:System.Web.Mvc.RouteAreaAttribute.AreaName">
      <summary>Obtém o nome da área para todas as rotas definidas no controlador.Se o valor for nulo, uma tentativa será feita para inferir o nome da área a partir do namespace do controlador de destino.</summary>
      <returns>O nome da área para todas as rotas definidas no controlador.</returns>
    </member>
    <member name="P:System.Web.Mvc.RouteAreaAttribute.AreaPrefix">
      <summary>Obtém o prefixo da URL a ser aplicado às rotas desta área.Usa o nome da área por padrão.</summary>
      <returns>O prefixo da URL a ser aplicado às rotas desta área.</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteAttribute">
      <summary>Coloque em um controlador ou ação para que seja exposto diretamente por meio de uma rota.Quando posicionado em um controlador, aplica-se a ações que não têm qualquer System.Web.Mvc.RouteAttribute’s em si.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.RouteAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.RouteAttribute" /> com o modelo especificado.</summary>
      <param name="template">O padrão da rota a coincidir.</param>
    </member>
    <member name="P:System.Web.Mvc.RouteAttribute.Name">
      <summary>Obtém ou define o nome da rota.</summary>
      <returns>O nome da rota</returns>
    </member>
    <member name="P:System.Web.Mvc.RouteAttribute.Order">
      <summary>Obtém a ordem na qual a rota está aplicada.</summary>
      <returns>A ordem na qual a rota está aplicada.</returns>
    </member>
    <member name="M:System.Web.Mvc.RouteAttribute.System#Web#Mvc#Routing#IDirectRouteFactory#CreateRoute(System.Web.Mvc.Routing.DirectRouteFactoryContext)">
      <summary>Cria uma entrada direta de rota.</summary>
      <returns>A entrada direta de rota.</returns>
      <param name="context">O contexto a utilizar para criar a rota.</param>
    </member>
    <member name="P:System.Web.Mvc.RouteAttribute.Template">
      <summary>Obtém o padrão de URL para a rota coincidir.</summary>
      <returns>O padrão para correspondência.</returns>
    </member>
    <member name="T:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions">
      <summary>Fornece extensões de roteamento para o atributo de coleção de rota.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection)">
      <summary>Mapeia as rotas definidas por atributos para o aplicativo.</summary>
      <param name="routes">Uma coleção de rotas.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IDirectRouteProvider)">
      <summary>Mapeia as rotas definidas por atributos para o aplicativo.</summary>
      <param name="directRouteProvider">O <see cref="T:System.Web.Mvc.Routing.IDirectRouteProvider" /> a ser usado mapeamento de rotas.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Mapeia as rotas definidas por atributos para o aplicativo.</summary>
      <param name="routes">Uma coleção de rotas.</param>
      <param name="constraintResolver">O <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" /> a ser usado para resolver restrições embutidas em modelos de rota.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionAttributeRoutingExtensions.MapMvcAttributeRoutes(System.Web.Routing.RouteCollection,System.Web.Mvc.Routing.IInlineConstraintResolver,System.Web.Mvc.Routing.IDirectRouteProvider)">
      <summary>Mapeia as rotas definidas por atributos para o aplicativo.</summary>
      <param name="constraintResolver">O <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" /> a ser usado para resolver restrições embutidas em modelos de rota.</param>
      <param name="directRouteProvider">O <see cref="T:System.Web.Mvc.Routing.IDirectRouteProvider" /> a ser usado mapeamento de rotas.</param>
    </member>
    <member name="T:System.Web.Mvc.RouteCollectionExtensions">
      <summary>Estende um objeto <see cref="T:System.Web.Routing.RouteCollection" /> para o roteamento MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Retorna um objeto que contém informações sobre a rota e o caminho virtual que são o resultado da geração de uma URL na área atual.</summary>
      <returns>Um objeto que contém informações sobre a rota e o caminho virtual que são o resultado da geração de uma URL na área atual.</returns>
      <param name="routes">Um objeto que contém as rotas para os aplicativos.</param>
      <param name="requestContext">Um objeto que encapsula informações sobre a rota solicitada.</param>
      <param name="name">O nome da rota a ser usada ao recuperar informações sobre o caminho da URL.</param>
      <param name="values">Um objeto que contém os parâmetros para uma rota.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.GetVirtualPathForArea(System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)">
      <summary>Retorna um objeto que contém informações sobre a rota e o caminho virtual que são o resultado da geração de uma URL na área atual.</summary>
      <returns>Um objeto que contém informações sobre a rota e o caminho virtual que são o resultado da geração de uma URL na área atual.</returns>
      <param name="routes">Um objeto que contém as rotas para os aplicativos.</param>
      <param name="requestContext">Um objeto que encapsula informações sobre a rota solicitada.</param>
      <param name="values">Um objeto que contém os parâmetros para uma rota.</param>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String)">
      <summary>Ignora a rota URL especificada para a lista fornecida de rotas disponíveis.</summary>
      <param name="routes">Um conjunto de rotas para o aplicativo.</param>
      <param name="url">O padrão de URL para a rota a ser ignorada.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="routes" /> ou parâmetro <paramref name="url" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.IgnoreRoute(System.Web.Routing.RouteCollection,System.String,System.Object)">
      <summary>Ignora a rota URL especificada para a lista fornecida de rotas disponíveis e uma lista de restrições.</summary>
      <param name="routes">Um conjunto de rotas para o aplicativo.</param>
      <param name="url">O padrão de URL para a rota a ser ignorada.</param>
      <param name="constraints">Um conjunto de expressões que especificam valores para o parâmetro <paramref name="url" />.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="routes" /> ou parâmetro <paramref name="url" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String)">
      <summary>Mapeia a rota URL especificada.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="routes">Um conjunto de rotas para o aplicativo.</param>
      <param name="name">O nome da rota a ser mapeada.</param>
      <param name="url">O padrão de URL para a rota.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="routes" /> ou parâmetro <paramref name="url" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object)">
      <summary>Mapeia a rota URL especificada e define valores de rota padrão.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="routes">Um conjunto de rotas para o aplicativo.</param>
      <param name="name">O nome da rota a ser mapeada.</param>
      <param name="url">O padrão de URL para a rota.</param>
      <param name="defaults">Um objeto que contém valores de rota padrão.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="routes" /> ou parâmetro <paramref name="url" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>Mapeia a rota URL especificada e define as restrições e os valores de rota padrão.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="routes">Um conjunto de rotas para o aplicativo.</param>
      <param name="name">O nome da rota a ser mapeada.</param>
      <param name="url">O padrão de URL para a rota.</param>
      <param name="defaults">Um objeto que contém valores de rota padrão.</param>
      <param name="constraints">Um conjunto de expressões que especificam valores para o parâmetro <paramref name="url" />.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="routes" /> ou parâmetro <paramref name="url" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.Object,System.String[])">
      <summary>Mapeia a rota URL especificada e define as restrições, os valores e os namespaces da rota padrão.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="routes">Um conjunto de rotas para o aplicativo.</param>
      <param name="name">O nome da rota a ser mapeada.</param>
      <param name="url">O padrão de URL para a rota.</param>
      <param name="defaults">Um objeto que contém valores de rota padrão.</param>
      <param name="constraints">Um conjunto de expressões que especificam valores para o parâmetro <paramref name="url" />.</param>
      <param name="namespaces">Um conjunto de namespaces para o aplicativo.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="routes" /> ou parâmetro <paramref name="url" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.Object,System.String[])">
      <summary>Mapeia a rota URL especificada e define os namespaces e valores de rota padrão.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="routes">Um conjunto de rotas para o aplicativo.</param>
      <param name="name">O nome da rota a ser mapeada.</param>
      <param name="url">O padrão de URL para a rota.</param>
      <param name="defaults">Um objeto que contém valores de rota padrão.</param>
      <param name="namespaces">Um conjunto de namespaces para o aplicativo.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="routes" /> ou parâmetro <paramref name="url" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.RouteCollectionExtensions.MapRoute(System.Web.Routing.RouteCollection,System.String,System.String,System.String[])">
      <summary>Mapeia a rota URL especificada e define os namespaces.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="routes">Um conjunto de rotas para o aplicativo.</param>
      <param name="name">O nome da rota a ser mapeada.</param>
      <param name="url">O padrão de URL para a rota.</param>
      <param name="namespaces">Um conjunto de namespaces para o aplicativo.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="routes" /> ou parâmetro <paramref name="url" /> é nulo.</exception>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProvider">
      <summary>Representa um provedor de valor para dados de rota contidos em um objeto que implementa a interface <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProvider.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.RouteDataValueProvider" />.</summary>
      <param name="controllerContext">Um objeto que contém informações sobre a solicitação HTTP.</param>
    </member>
    <member name="T:System.Web.Mvc.RouteDataValueProviderFactory">
      <summary>Representa uma fábrica para a criação de objetos de provedor de valor de dados de rota.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.#ctor">
      <summary>Inicializou uma nova instância da classe <see cref="T:System.Web.Mvc.RouteDataValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RouteDataValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Retorna um objeto de provedor de valor para o contexto de controlador especificado.</summary>
      <returns>Um objeto de provedor de valor.</returns>
      <param name="controllerContext">Um objeto que encapsula informações sobre a solicitação HTTP atual.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="controllerContext" /> é nulo.</exception>
    </member>
    <member name="T:System.Web.Mvc.RoutePrefixAttribute">
      <summary>Anota um controlador com um prefixo de rota que se aplica a todas as ações no controlador.</summary>
    </member>
    <member name="M:System.Web.Mvc.RoutePrefixAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.RoutePrefixAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.RoutePrefixAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.RoutePrefixAttribute" /> com o prefixo especificado.</summary>
      <param name="prefix">O prefixo da rota para o controlador.</param>
    </member>
    <member name="P:System.Web.Mvc.RoutePrefixAttribute.Prefix">
      <summary>Obtém o prefixo da rota.</summary>
      <returns>O prefixo da rota.</returns>
    </member>
    <member name="T:System.Web.Mvc.SelectList">
      <summary>Representa uma lista que permite aos usuários selecionar um item.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.SelectList" /> usando os itens especificados para a lista.</summary>
      <param name="items">Os itens.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.SelectList" /> usando os itens especificados para a lista e um valor selecionado.</summary>
      <param name="items">Os itens.</param>
      <param name="selectedValue">O valor selecionado.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.Object,System.Collections.IEnumerable)">
      <summary>Inicializa uma nova instância da classe SelectList usando os itens especificados para a lista, o valor selecionado e os valores desabilitados.</summary>
      <param name="items">Os itens usados para construir cada <see cref="T:System.Web.Mvc.SelectListItem" /> da lista.</param>
      <param name="selectedValue">O valor selecionado.Usado para corresponder a propriedade Selected do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="disabledValues">Os valores desabilitados.Usado para corresponder a propriedade Disabled do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.SelectList" /> usando os itens especificados para a lista, o campo de valor de dados e o campo de texto de dados.</summary>
      <param name="items">Os itens.</param>
      <param name="dataValueField">O campo do valor dos dados.</param>
      <param name="dataTextField">O campo de texto dos dados.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.SelectList" /> usando os itens especificados para a lista, o campo de valor de dados, o campo de texto de dados e um valor selecionado.</summary>
      <param name="items">Os itens.</param>
      <param name="dataValueField">O campo do valor dos dados.</param>
      <param name="dataTextField">O campo de texto dos dados.</param>
      <param name="selectedValue">O valor selecionado.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.Object,System.Collections.IEnumerable)">
      <summary>Inicializa uma nova instância da classe SelectList usando os itens especificados para a lista, o campo de valor de dados, o campo de texto de dados, o valor selecionado e os valores desabilitados.</summary>
      <param name="items">Os itens usados para construir cada <see cref="T:System.Web.Mvc.SelectListItem" /> da lista.</param>
      <param name="dataValueField">O campo do valor dos dados.Usado para corresponder a propriedade Value do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="dataTextField">O campo de texto dos dados.Usado para corresponder a propriedade Text do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="selectedValue">O valor selecionado.Usado para corresponder a propriedade Selected do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="disabledValues">Os valores desabilitados.Usado para corresponder a propriedade Disabled do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Object)">
      <summary>Inicializa uma nova instância da classe SelectList usando os itens especificados para a lista, o campo de valor de dados, o campo de texto de dados, o campo de grupo de dados e o valor selecionado.</summary>
      <param name="items">Os itens usados para construir cada <see cref="T:System.Web.Mvc.SelectListItem" /> da lista.</param>
      <param name="dataValueField">O campo do valor dos dados.Usado para corresponder a propriedade Value do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="dataTextField">O campo de texto dos dados.Usado para corresponder a propriedade Text do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="dataGroupField">O campo de grupo de dados.Usado para corresponder a propriedade Group do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="selectedValue">O valor selecionado.Usado para corresponder a propriedade Selected do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Object,System.Collections.IEnumerable)">
      <summary>Inicializa uma nova instância da classe SelectList usando os itens especificados para a lista, o campo de valor de dados, o campo de texto de dados, o campo de grupo de dados, o valor selecionado e os valores desabilitados.</summary>
      <param name="items">Os itens usados para construir cada <see cref="T:System.Web.Mvc.SelectListItem" /> da lista.</param>
      <param name="dataValueField">O campo do valor dos dados.Usado para corresponder a propriedade Value do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="dataTextField">O campo de texto dos dados.Usado para corresponder a propriedade Text do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="dataGroupField">O campo de grupo de dados.Usado para corresponder a propriedade Group do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="selectedValue">O valor selecionado.Usado para corresponder a propriedade Selected do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="disabledValues">Os valores desabilitados.Usado para corresponder a propriedade Disabled do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
    </member>
    <member name="M:System.Web.Mvc.SelectList.#ctor(System.Collections.IEnumerable,System.String,System.String,System.String,System.Object,System.Collections.IEnumerable,System.Collections.IEnumerable)">
      <summary>Inicializa uma nova instância da classe SelectList usando os itens especificados para a lista, o campo de valor de dados, o campo de texto de dados, o campo de grupo de dados.o valor selecionado, os valores desabilitados e os grupos desabilitados.</summary>
      <param name="items">Os itens usados para construir cada <see cref="T:System.Web.Mvc.SelectListItem" /> da lista.</param>
      <param name="dataValueField">O campo do valor dos dados.Usado para corresponder a propriedade Value do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="dataTextField">O campo de texto dos dados.Usado para corresponder a propriedade Text do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="dataGroupField">O campo de grupo de dados.Usado para corresponder a propriedade Group do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="selectedValue">O valor selecionado.Usado para corresponder a propriedade Selected do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="disabledValues">Os valores desabilitados.Usado para corresponder a propriedade Disabled do <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente.</param>
      <param name="disabledGroups">Os grupos desabilitados.Usado para corresponder a propriedade Disabled do <see cref="T:System.Web.Mvc.SelectListGroup" /> correspondente.</param>
    </member>
    <member name="P:System.Web.Mvc.SelectList.SelectedValue">
      <summary>Obtém o valor da lista que foi selecionado pelo usuário.</summary>
      <returns>O valor selecionado.</returns>
    </member>
    <member name="T:System.Web.Mvc.SelectListGroup">
      <summary>Representa o elemento HTML de optgroup e seus atributos.Em uma lista selecionada, vários grupos com o mesmo nome são suportados.Eles são comparados com relação à igualdade.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectListGroup.#ctor"></member>
    <member name="P:System.Web.Mvc.SelectListGroup.Disabled">
      <summary>Obtém ou define um valor que indica se este <see cref="T:System.Web.Mvc.SelectListGroup" /> está desabilitado.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListGroup.Name">
      <summary>Representa o valor do rótulo de optgroup.</summary>
    </member>
    <member name="T:System.Web.Mvc.SelectListItem">
      <summary>Representa o item selecionado em uma instância da classe <see cref="T:System.Web.Mvc.SelectList" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.SelectListItem.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.SelectListItem" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Disabled">
      <summary>Obtém ou define um valor que indica se este <see cref="T:System.Web.Mvc.SelectListItem" /> está desabilitado.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Group">
      <summary>Representa o elemento HTML de optgroup ao qual este item foi envolvido.Em uma lista selecionada, vários grupos com o mesmo nome são suportados.Eles são comparados com relação à igualdade.</summary>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Selected">
      <summary>Obtém ou define um valor que indica se este <see cref="T:System.Web.Mvc.SelectListItem" /> está selecionado.</summary>
      <returns>verdadeiro se o item estiver selecionado; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Text">
      <summary>Obtém ou define o texto do item selecionado.</summary>
      <returns>O texto.</returns>
    </member>
    <member name="P:System.Web.Mvc.SelectListItem.Value">
      <summary>Obtém ou define o valor do item selecionado.</summary>
      <returns>O valor.</returns>
    </member>
    <member name="T:System.Web.Mvc.SessionStateAttribute">
      <summary>Especifica o estado da sessão do controlador.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateAttribute.#ctor(System.Web.SessionState.SessionStateBehavior)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.SessionStateAttribute" />.</summary>
      <param name="behavior">O tipo do estado da sessão.</param>
    </member>
    <member name="P:System.Web.Mvc.SessionStateAttribute.Behavior">
      <summary>Obtém o comportamento do estado da sessão para o controlador.</summary>
      <returns>O comportamento do estado da sessão para o controlador.</returns>
    </member>
    <member name="T:System.Web.Mvc.SessionStateTempDataProvider">
      <summary>Fornece dados de estado de sessão para o objeto <see cref="T:System.Web.Mvc.TempDataDictionary" /> atual.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.SessionStateTempDataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.LoadTempData(System.Web.Mvc.ControllerContext)">
      <summary>Carrega os dados temporários usando o contexto de controlador especificado.</summary>
      <returns>Os dados temporários.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro quando o contexto da sessão estava sendo recuperado.</exception>
    </member>
    <member name="M:System.Web.Mvc.SessionStateTempDataProvider.SaveTempData(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Salva os valores especificados no dicionário de dados temporários usando o contexto de controlador especificado.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="values">Os valores.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro quando o contexto da sessão estava sendo recuperado.</exception>
    </member>
    <member name="T:System.Web.Mvc.StringLengthAttributeAdapter">
      <summary>Fornece um adaptador para o atributo <see cref="T:System.ComponentModel.DataAnnotations.StringLengthAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext,System.ComponentModel.DataAnnotations.StringLengthAttribute)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.StringLengthAttributeAdapter" />.</summary>
      <param name="metadata">Os metadados do modelo.</param>
      <param name="context">O contexto do controlador.</param>
      <param name="attribute">O atributo de comprimento da cadeia de caracteres.</param>
    </member>
    <member name="M:System.Web.Mvc.StringLengthAttributeAdapter.GetClientValidationRules">
      <summary>Obtém uma lista de regras de validação de cliente de comprimento de cadeia de caracteres.</summary>
      <returns>Uma lista de regras de validação de cliente de comprimento de cadeia de caracteres.</returns>
    </member>
    <member name="T:System.Web.Mvc.TempDataDictionary">
      <summary>Representa um conjunto de dados que persiste apenas de uma solicitação para a próxima.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.TempDataDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Add(System.String,System.Object)">
      <summary>Adiciona um elemento que tem a chave e o valor especificados ao objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <param name="key">A chave do elemento a ser adicionado.</param>
      <param name="value">O valor do elemento a ser adicionado.</param>
      <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Collections.Generic.IDictionary`2" /> é somente leitura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nula.</exception>
      <exception cref="T:System.ArgumentException">Um elemento que tem a mesma chave já existe no objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Clear">
      <summary>Remove todos os itens da instância <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Collections.Generic.ICollection`1" /> é somente leitura.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsKey(System.String)">
      <summary>Determina se a instância <see cref="T:System.Collections.Generic.IDictionary`2" /> contém um elemento que tem a chave especificada.</summary>
      <returns>verdadeiro se a instância <see cref="T:System.Collections.Generic.IDictionary`2" /> contiver um elemento que contém a chave especificada; caso contrário, falso.</returns>
      <param name="key">A chave a ser localizada na instância <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nula.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.ContainsValue(System.Object)">
      <summary>Determina se o dicionário contém o valor especificado.</summary>
      <returns>verdadeiro se o dicionário contiver o valor especificado; caso contrário, falso.</returns>
      <param name="value">O valor.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Count">
      <summary>Obtém o número de elementos no objeto <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <returns>O número de elementos no objeto <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.GetEnumerator">
      <summary>Obtém o enumerador.</summary>
      <returns>O enumerador.</returns>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Item(System.String)">
      <summary>Obtém ou define o objeto que tem a chave especificada.</summary>
      <returns>O objeto que tem a chave especificada.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep">
      <summary>Marca todas as chaves no dicionário para retenção.</summary>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Keep(System.String)">
      <summary>Marca a chave especificada no dicionário para retenção.</summary>
      <param name="key">A chave a ser mantida no dicionário.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Keys">
      <summary>Obtém um objeto <see cref="T:System.Collections.Generic.ICollection`1" /> que contém as chaves de elementos no objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>As chaves dos elementos no objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Load(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>Carrega o contexto de controlador especificado usando o provedor de dados especificado.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="tempDataProvider">O provedor de dados temporários.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Peek(System.String)">
      <summary>Retorna um objeto que contém o elemento associado à chave especificada, sem marcação da chave para exclusão.</summary>
      <returns>Um objeto que contém o elemento associado à chave especificada.</returns>
      <param name="key">A chave do elemento a ser retornado.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Remove(System.String)">
      <summary>Remove o elemento que tem a chave especificada do objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>verdadeiro se o elemento foi removido com êxito; caso contrário, falso.Este método também retorna falso se <paramref name="key" /> não foi encontrado no <see cref="T:System.Collections.Generic.IDictionary`2" />.A instância.</returns>
      <param name="key">A chave do elemento a ser removido.</param>
      <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Collections.Generic.IDictionary`2" /> é somente leitura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nula.</exception>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.Save(System.Web.Mvc.ControllerContext,System.Web.Mvc.ITempDataProvider)">
      <summary>Salva o contexto de controlador especificado usando o provedor de dados especificado.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="tempDataProvider">O provedor de dados temporários.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Adiciona o par chave/valor especificado ao dicionário.</summary>
      <param name="keyValuePair">O par chave/valor.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determina se uma sequência contém um elemento especificado usando o comparador de igualdade padrão.</summary>
      <returns>verdadeiro se o dicionário contiver o par chave/valor especificado; caso contrário, falso.</returns>
      <param name="keyValuePair">O par chave/valor a ser procurado.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copia um par chave/valor para a matriz especificada no índice especificado.</summary>
      <param name="array">A matriz de destino.</param>
      <param name="index">O índice.</param>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <summary>Obtém um valor que indica se o dicionário é somente leitura.</summary>
      <returns>verdadeiro se o dicionário for somente leitura; caso contrário, falso.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#Generic#ICollection{T}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Exclui o par chave/valor especificado do dicionário.</summary>
      <returns>verdadeiro se o par chave/valor foi removido com êxito; caso contrário, falso.</returns>
      <param name="keyValuePair">O par chave/valor.</param>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um enumerador que pode ser usado para iterar por meio de uma coleção.</summary>
      <returns>Um objeto <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar por meio da coleção.</returns>
    </member>
    <member name="M:System.Web.Mvc.TempDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Obtém o valor do elemento que tem a chave especificada.</summary>
      <returns>verdadeiro se o objeto que implementa <see cref="T:System.Collections.Generic.IDictionary`2" /> contiver um elemento que contém a chave especificada; caso contrário, falso.</returns>
      <param name="key">A chave do valor a ser obtido.</param>
      <param name="value">Quando esse método retorna, o valor associado à chave especificada, se a chave for encontrada; caso contrário, o valor padrão para o tipo do parâmetro do <paramref name="value" />.Este parâmetro é passado não inicializado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.TempDataDictionary.Values">
      <summary>Obtém o objeto <see cref="T:System.Collections.Generic.ICollection`1" /> que contém os valores no objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Os valores dos elementos no objeto que implementa <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.TemplateInfo">
      <summary>Encapsula informações sobre o contexto atual do modelo.</summary>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.FormattedModelValue">
      <summary>Obtém ou define o valor de modelo formatado.</summary>
      <returns>O valor de modelo formatado.</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldId(System.String)">
      <summary>Recupera a ID DOM completa de um campo usando o atributo HTML especificado de nome.</summary>
      <returns>A ID DOM completa.</returns>
      <param name="partialFieldName">O valor do atributo HTML de nome.</param>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.GetFullHtmlFieldName(System.String)">
      <summary>Recupera o nome totalmente qualificado (incluindo um prefixo) para um campo usando o atributo HTML especificado de nome.</summary>
      <returns>O nome prefixado do campo.</returns>
      <param name="partialFieldName">O valor do atributo HTML de nome.</param>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.HtmlFieldPrefix">
      <summary>Obtém ou define o prefixo do campo HTML.</summary>
      <returns>O prefixo do campo HTML.</returns>
    </member>
    <member name="P:System.Web.Mvc.TemplateInfo.TemplateDepth">
      <summary>Contém o número de objetos que foram visitados pelo usuário.</summary>
      <returns>O número de objetos.</returns>
    </member>
    <member name="M:System.Web.Mvc.TemplateInfo.Visited(System.Web.Mvc.ModelMetadata)">
      <summary>Determina se o modelo foi visitado pelo usuário.</summary>
      <returns>verdadeiro se o modelo foi visitado pelo usuário; caso contrário, falso.</returns>
      <param name="metadata">Um objeto que encapsula informações que descrevem o modelo.</param>
    </member>
    <member name="T:System.Web.Mvc.UrlHelper">
      <summary>Contém métodos para construir URLs para ASP.NET MVC dentro de um aplicativo.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.UrlHelper" /> usando o contexto de solicitação especificado.</summary>
      <param name="requestContext">Um objeto que contém informações sobre a solicitação atual e sobre a rota à qual ele correspondeu.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.UrlHelper" /> usando o contexto de solicitação e a coleção de rotas especificados.</summary>
      <param name="requestContext">Um objeto que contém informações sobre a solicitação atual e sobre a rota à qual ele correspondeu.</param>
      <param name="routeCollection">Uma coleção de rotas.</param>
      <exception cref="ArgumentNullException">O parâmetro <paramref name="requestContext" /> ou o <paramref name="routeCollection" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action">
      <summary>Gera uma cadeia de caracteres para uma URL totalmente qualificada para um método de ação.</summary>
      <returns>Uma cadeia de caracteres para uma URL totalmente qualificada para um método de ação.</returns>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String)">
      <summary>Gera uma URL totalmente qualificada para um método de ação usando o nome da ação especificado.</summary>
      <returns>A URL totalmente qualificada para um método de ação.</returns>
      <param name="actionName">O nome do método de ação.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Object)">
      <summary>Gera uma URL totalmente qualificada para um método de ação usando o nome de ação e os valores de rota especificados.</summary>
      <returns>A URL totalmente qualificada para um método de ação.</returns>
      <param name="actionName">O nome do método de ação.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.O objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String)">
      <summary>Gera uma URL totalmente qualificada para um método de ação usando o nome de ação e o nome do controlador especificados.</summary>
      <returns>A URL totalmente qualificada para um método de ação.</returns>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object)">
      <summary>Gera uma URL totalmente qualificada para um método de ação usando o nome de ação, o nome do controlador e os valores da rota especificados.</summary>
      <returns>A URL totalmente qualificada para um método de ação.</returns>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.O objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object,System.String)">
      <summary>Gera uma URL totalmente qualificada para um método de ação usando o nome de ação, o nome do controlador, o protocolo a ser usado e os valores de rota especificados.</summary>
      <returns>A URL totalmente qualificada para um método de ação.</returns>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.O objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="protocol">O protocolo para a URL, como "http" ou "https".</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Gera uma URL totalmente qualificada para um método de ação usando o nome de ação, o nome do controlador e os valores da rota especificados.</summary>
      <returns>A URL totalmente qualificada para um método de ação.</returns>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary,System.String)">
      <summary>Gera uma URL totalmente qualificada para um método de ação usando o nome da ação, o nome do controlador, os valores de rota e o protocolo a ser usado especificados.</summary>
      <returns>A URL totalmente qualificada para um método de ação.</returns>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="protocol">O protocolo para a URL, como "http" ou "https".</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>Gera uma URL totalmente qualificada para um método de ação usando o nome da ação, o nome do controlador, os valores de rota, o protocolo a ser usado e o nome do host especificados.</summary>
      <returns>A URL totalmente qualificada para um método de ação.</returns>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="protocol">O protocolo para a URL, como "http" ou "https".</param>
      <param name="hostName">O nome do host da URL.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Gera uma URL totalmente qualificada para um método de ação para o nome de ação e os valores de rota especificados.</summary>
      <returns>A URL totalmente qualificada para um método de ação.</returns>
      <param name="actionName">O nome do método de ação.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Content(System.String)">
      <summary>Converte um caminho (relativo) virtual em um caminho absoluto de aplicativo.</summary>
      <returns>O caminho absoluto do aplicativo.</returns>
      <param name="contentPath">O caminho virtual do conteúdo.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.Encode(System.String)">
      <summary>Codifica caracteres especiais em uma cadeia de caracteres de URL em equivalentes de entidade de caractere.</summary>
      <returns>Uma cadeia de caracteres de URL codificada.</returns>
      <param name="url">O texto a ser codificado.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateContentUrl(System.String,System.Web.HttpContextBase)">
      <summary>Retorna uma cadeia de caracteres que contém uma URL de conteúdo.</summary>
      <returns>Uma cadeia de caracteres que contém uma URL de conteúdo.</returns>
      <param name="contentPath">O caminho do conteúdo.</param>
      <param name="httpContext">O contexto HTTP.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>Retorna uma cadeia de caracteres que contém uma URL.</summary>
      <returns>Uma cadeia de caracteres que contém uma URL.</returns>
      <param name="routeName">O nome da rota.</param>
      <param name="actionName">O nome da ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="protocol">O protocolo HTTP.</param>
      <param name="hostName">O nome do host.</param>
      <param name="fragment">O fragmento.</param>
      <param name="routeValues">Os valores de rota.</param>
      <param name="routeCollection">A coleção de rotas.</param>
      <param name="requestContext">O contexto da solicitação.</param>
      <param name="includeImplicitMvcValues">verdadeiro para incluir valores MVC implícitos; caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.GenerateUrl(System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteCollection,System.Web.Routing.RequestContext,System.Boolean)">
      <summary>Retorna uma cadeia de caracteres que contém uma URL.</summary>
      <returns>Uma cadeia de caracteres que contém uma URL.</returns>
      <param name="routeName">O nome da rota.</param>
      <param name="actionName">O nome da ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Os valores de rota.</param>
      <param name="routeCollection">A coleção de rotas.</param>
      <param name="requestContext">O contexto da solicitação.</param>
      <param name="includeImplicitMvcValues">verdadeiro para incluir valores MVC implícitos; caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.HttpRouteUrl(System.String,System.Object)">
      <summary>Gera uma URL totalmente qualificada para os valores de rota especificados.</summary>
      <returns>Uma URL totalmente qualificada para os valores de rota especificados.</returns>
      <param name="routeName">O nome da rota.</param>
      <param name="routeValues">Os valores de rota.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.HttpRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Gera uma URL totalmente qualificada para os valores de rota especificados.</summary>
      <returns>Uma URL totalmente qualificada para os valores de rota especificados.</returns>
      <param name="routeName">O nome da rota.</param>
      <param name="routeValues">Os valores de rota.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.IsLocalUrl(System.String)">
      <summary>Retorna um valor que indica se a URL é local.</summary>
      <returns>verdadeiro se a URL for local; caso contrário, falso.</returns>
      <param name="url">A URL.</param>
    </member>
    <member name="P:System.Web.Mvc.UrlHelper.RequestContext">
      <summary>Obtém as informações sobre uma solicitação HTTP que corresponde a uma rota definida.</summary>
      <returns>O contexto da solicitação.</returns>
    </member>
    <member name="P:System.Web.Mvc.UrlHelper.RouteCollection">
      <summary>Obtém uma coleção que contém as rotas registradas para o aplicativo.</summary>
      <returns>A coleção de rotas.</returns>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Object)">
      <summary>Gera uma URL totalmente qualificada para os valores de rota especificados.</summary>
      <returns>A URL totalmente qualificada.</returns>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.O objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String)">
      <summary>Gera uma URL totalmente qualificada para o nome de rota especificado.</summary>
      <returns>A URL totalmente qualificada.</returns>
      <param name="routeName">O nome da rota que é usada para gerar a URL.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object)">
      <summary>Gera uma URL totalmente qualificada para os valores de rota especificados usando um nome de rota.</summary>
      <returns>A URL totalmente qualificada.</returns>
      <param name="routeName">O nome da rota que é usada para gerar a URL.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.O objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object,System.String)">
      <summary>Gera uma URL totalmente qualificada para os valores de rota especificados usando um nome de rota e o protocolo a ser usado.</summary>
      <returns>A URL totalmente qualificada.</returns>
      <param name="routeName">O nome da rota que é usada para gerar a URL.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.O objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="protocol">O protocolo para a URL, como "http" ou "https".</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Gera uma URL totalmente qualificada para os valores de rota especificados usando um nome de rota.</summary>
      <returns>A URL totalmente qualificada.</returns>
      <param name="routeName">O nome da rota que é usada para gerar a URL.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
      <summary>Gera uma URL totalmente qualificada para os valores de rota especificados usando o nome de rota, o protocolo a ser usado e o nome de host especificados.</summary>
      <returns>A URL totalmente qualificada.</returns>
      <param name="routeName">O nome da rota que é usada para gerar a URL.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="protocol">O protocolo para a URL, como "http" ou "https".</param>
      <param name="hostName">O nome do host da URL.</param>
    </member>
    <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Web.Routing.RouteValueDictionary)">
      <summary>Gera uma URL totalmente qualificada para os valores de rota especificados.</summary>
      <returns>A URL totalmente qualificada.</returns>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
    </member>
    <member name="T:System.Web.Mvc.UrlParameter">
      <summary>Representa um parâmetro opcional usado pela classe <see cref="T:System.Web.Mvc.MvcHandler" /> durante o roteamento.</summary>
    </member>
    <member name="F:System.Web.Mvc.UrlParameter.Optional">
      <summary>Contém o valor somente leitura para o parâmetro opcional.</summary>
    </member>
    <member name="M:System.Web.Mvc.UrlParameter.ToString">
      <summary>Retorna uma cadeia de caracteres vazia.Este método é compatível com a infraestrutura do ASP.NET MVC e não se destina a ser usado diretamente de seu código.</summary>
      <returns>Uma cadeia de caracteres vazia.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValidatableObjectAdapter">
      <summary>Fornece um adaptador de objeto que pode ser validado.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.#ctor(System.Web.Mvc.ModelMetadata,System.Web.Mvc.ControllerContext)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ValidatableObjectAdapter" />.</summary>
      <param name="metadata">Os metadados do modelo.</param>
      <param name="context">O contexto do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.ValidatableObjectAdapter.Validate(System.Object)">
      <summary>Valida o objeto especificado.</summary>
      <returns>Uma lista de resultados de validação.</returns>
      <param name="container">O contêiner.</param>
    </member>
    <member name="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute">
      <summary>Representa um atributo usado para evitar a falsificação de uma solicitação.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ValidateAntiForgeryTokenAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Chamado quando é necessária uma autorização.</summary>
      <param name="filterContext">O contexto do filtro.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="filterContext" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValidateAntiForgeryTokenAttribute.Salt">
      <summary>Obtém ou define a cadeia de caracteres de sal.</summary>
      <returns>A cadeia de caracteres de sal.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValidateInputAttribute">
      <summary>Representa um atributo usado para marcar métodos de ação cujas entradas devem ser validadas.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.#ctor(System.Boolean)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ValidateInputAttribute" />.</summary>
      <param name="enableValidation">verdadeiro para habilitar a validação.</param>
    </member>
    <member name="P:System.Web.Mvc.ValidateInputAttribute.EnableValidation">
      <summary>Obtém ou define um valor que indica se a validação deve ser habilitada.</summary>
      <returns>verdadeiro se a validação estiver habilitada; caso contrário, falso.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValidateInputAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
      <summary>Chamado quando é necessária uma autorização.</summary>
      <param name="filterContext">O contexto do filtro.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="filterContext" /> é nulo.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderCollection">
      <summary>Representa a coleção de objetos do provedor de valor para o aplicativo.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ValueProviderCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IValueProvider})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ValueProviderCollection" /> e registra os provedores de valor especificados.</summary>
      <param name="list">A lista de provedores de valor a serem registrados.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.ContainsPrefix(System.String)">
      <summary>Determina se o conjunto contém o prefixo especificado.</summary>
      <returns>verdadeiro se o conjunto contiver o prefixo especificado; caso contrário, falso.</returns>
      <param name="prefix">O prefixo a ser pesquisado.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetKeysFromPrefix(System.String)">
      <summary>Obtém as chaves do prefixo especificado.</summary>
      <returns>As chaves.</returns>
      <param name="prefix">O prefixo.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String)">
      <summary>Retorna um objeto de valor usando a chave especificada.</summary>
      <returns>O objeto de valor para a chave especificada.</returns>
      <param name="key">A chave do objeto de valor a ser recuperado.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.GetValue(System.String,System.Boolean)">
      <summary>Retorna um objeto de valor usando a chave e o parâmetro ignorar validação especificados.</summary>
      <returns>O objeto de valor para a chave especificada.</returns>
      <param name="key">A chave do objeto de valor a ser recuperado.</param>
      <param name="skipValidation">verdadeiro para especificar que a validação deve ser ignorada; caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.InsertItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>Insere o objeto de provedor de valor especificado na coleção no local do índice especificado.</summary>
      <param name="index">O local do índice baseado em zero no qual inserir o provedor de valor na coleção.</param>
      <param name="item">O objeto de provedor de valor a ser inserido.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="item" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderCollection.SetItem(System.Int32,System.Web.Mvc.IValueProvider)">
      <summary>Substitui o provedor de valor no local do índice especificado por um novo provedor de valor.</summary>
      <param name="index">O índice baseado em zero do elemento a ser substituído.</param>
      <param name="item">O novo valor do elemento no índice especificado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="item" /> é nulo.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderDictionary">
      <summary>Observação: Esta API está obsoleta.Representa um dicionário de provedores de valor para o aplicativo.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.#ctor(System.Web.Mvc.ControllerContext)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ValueProviderDictionary" />.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Adiciona o item especificado à coleção de provedores de valor.</summary>
      <param name="item">O objeto a ser adicionado ao objeto <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Collections.Generic.ICollection`1" /> é somente leitura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Object)">
      <summary>Adiciona um elemento que tem a chave e o valor especificados à coleção de provedores de valor.</summary>
      <param name="key">A chave do elemento a ser adicionado.</param>
      <param name="value">O valor do elemento a ser adicionado.</param>
      <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Collections.Generic.IDictionary`2" /> é somente leitura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nula.</exception>
      <exception cref="T:System.ArgumentException">Um elemento que tem a chave especificada já existe no objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Add(System.String,System.Web.Mvc.ValueProviderResult)">
      <summary>Adiciona um elemento que tem a chave e o valor especificados à coleção de provedores de valor.</summary>
      <param name="key">A chave do elemento a ser adicionado.</param>
      <param name="value">O valor do elemento a ser adicionado.</param>
      <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Collections.Generic.IDictionary`2" /> é somente leitura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nula.</exception>
      <exception cref="T:System.ArgumentException">Um elemento que tem a chave especificada já existe no objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Clear">
      <summary>Remove todos os itens da coleção de provedores de valor.</summary>
      <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Collections.Generic.ICollection`1" /> é somente leitura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Determina se a coleção de provedores de valor contém o item especificado.</summary>
      <returns>verdadeiro se <paramref name="item" /> for encontrado na coleção de provedores de valor; caso contrário, falso.</returns>
      <param name="item">O objeto a ser localizado na instância <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.ContainsKey(System.String)">
      <summary>Determina se a coleção de provedores de valor contém um elemento que tem a chave especificada.</summary>
      <returns>verdadeiro se a coleção de provedores de valor contiver um elemento que tem a chave; caso contrário, falso.</returns>
      <param name="key">A chave do elemento a ser encontrado na instância <see cref="T:System.Collections.Generic.IDictionary`2" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.ControllerContext">
      <summary>Obtém ou define o contexto do controlador.</summary>
      <returns>O contexto do controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult}[],System.Int32)">
      <summary>Copia os elementos da coleção para uma matriz, começando em um índice especificado.</summary>
      <param name="array">A matriz unidimensional que é o destino dos elementos copiados a partir do objeto <see cref="T:System.Collections.Generic.ICollection`1" />.A matriz deve ter indexação baseada em zero.</param>
      <param name="arrayIndex">O índice baseado em zero na <paramref name="array" /> na qual a cópia inicia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é nulo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> é menor que 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimencional.-ou-<paramref name="arrayIndex" /> é igual a ou maior que o comprimento da <paramref name="array" />.-ou-O número de elementos na coleção de origem é maior que o espaço disponível do <paramref name="arrayIndex" /> ao fim da <paramref name="array" /> de destino.-ou-O tipo <paramref name="T" /> não pode ser convertido automaticamente no tipo da matriz de destino.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Count">
      <summary>Obtém o número de elementos na coleção.</summary>
      <returns>O número de elementos na coleção.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.GetEnumerator">
      <summary>Retorna um enumerador que pode ser usado para iterar por meio do conjunto.</summary>
      <returns>Um enumerador que pode ser usado para iterar por meio do conjunto.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.IsReadOnly">
      <summary>Obtém um valor que indica se o conjunto é somente leitura.</summary>
      <returns>verdadeiro se o conjunto for somente leitura; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Item(System.String)">
      <summary>Obtém ou define o objeto <see cref="T:System.Web.Mvc.ValueProviderResult" /> que tem a chave especificada.</summary>
      <returns>O objeto <see cref="T:System.Web.Mvc.ValueProviderResult" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Keys">
      <summary>Obtém uma coleção que contém as chaves da instância <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Uma coleção que contém as chaves do objeto que implementa a interface <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Mvc.ValueProviderResult})">
      <summary>Remove a primeira ocorrência do item especificado da coleção de provedores de valor.</summary>
      <returns>verdadeiro se <paramref name="item" /> foi removido com êxito da coleção; caso contrário, falso.Este método também retorna falso se <paramref name="item" /> não for encontrado na coleção.</returns>
      <param name="item">O objeto a ser removido da instância <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Collections.Generic.ICollection`1" /> é somente leitura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.Remove(System.String)">
      <summary>Remove o elemento que tem a chave especificada da coleção de provedores de valor.</summary>
      <returns>verdadeiro se o elemento foi removido com êxito; caso contrário, falso.Este método também retorna falso se <paramref name="key" /> não foi encontrado na coleção.</returns>
      <param name="key">A chave do elemento a ser removido.</param>
      <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Collections.Generic.IDictionary`2" /> é somente leitura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um enumerador que pode ser usado para iterar por meio de uma coleção.</summary>
      <returns>Um enumerador que pode ser usado para iterar por meio do conjunto.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#ContainsPrefix(System.String)">
      <summary>Determina se o conjunto contém o prefixo especificado.</summary>
      <returns>verdadeiro se o conjunto contiver o prefixo especificado; caso contrário, falso.</returns>
      <param name="prefix">O prefixo a ser pesquisado.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.System#Web#Mvc#IValueProvider#GetValue(System.String)">
      <summary>Retorna um objeto de valor usando a chave especificada.</summary>
      <returns>O objeto de valor para a chave especificada.</returns>
      <param name="key">A chave do objeto de valor a ser retornado.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderDictionary.TryGetValue(System.String,System.Web.Mvc.ValueProviderResult@)">
      <summary>Obtém o valor do elemento que tem a chave especificada.</summary>
      <returns>verdadeiro se o objeto que implementa <see cref="T:System.Collections.Generic.IDictionary`2" /> contiver um elemento que contém a chave especificada; caso contrário, falso.</returns>
      <param name="key">A chave do elemento a ser obtido.</param>
      <param name="value">Quando esse método retorna, o valor associado à chave especificada, se a chave for encontrada; caso contrário, o valor padrão para o tipo do parâmetro do <paramref name="value" />.Este parâmetro é passado não inicializado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderDictionary.Values">
      <summary>Obtém uma coleção que contém os valores no objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</summary>
      <returns>Uma coleção de valores no objeto que implementa a interface <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactories">
      <summary>Representa um contêiner para objetos de fábrica de provedor de valor.</summary>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderFactories.Factories">
      <summary>Obtém a coleção de fábricas de provedor de valor para o aplicativo.</summary>
      <returns>A coleção de objetos de fábrica de provedor de valor.</returns>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactory">
      <summary>Representa uma fábrica para a criação de objetos de provedor de valor.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactory.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Retorna um objeto de provedor de valor para o contexto de controlador especificado.</summary>
      <returns>Um objeto de provedor de valor.</returns>
      <param name="controllerContext">Um objeto que encapsula informações sobre a solicitação HTTP atual.</param>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderFactoryCollection">
      <summary>Representa a coleção de fábricas de provedor de valor para o aplicativo.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.ValueProviderFactory})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ValueProviderFactoryCollection" /> usando a lista especificada de fábricas de provedor de valor.</summary>
      <param name="list">Uma lista de fábricas de provedores de valor com a qual inicializar a coleção.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.ClearItems">
      <summary>Remove todos os elementos da coleção.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.GetValueProvider(System.Web.Mvc.ControllerContext)">
      <summary>Retorna a fábrica de provedor de valor para o contexto de controlador especificado.</summary>
      <returns>O objeto de fábrica de provedor de valor para o contexto de controlador especificado.</returns>
      <param name="controllerContext">Um objeto que encapsula informações sobre a solicitação HTTP atual.</param>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.InsertItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>Insere o objeto de fábrica de provedor de valor especificado no local de índice especificado.</summary>
      <param name="index">O local do índice baseado em zero no qual inserir o provedor de valor na coleção.</param>
      <param name="item">O objeto de fábrica de provedor de valor a ser inserido.</param>
      <exception cref="[ArgumentNullException]">O parâmetro <paramref name="item" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.RemoveItem(System.Int32)">
      <summary>Remove o elemento no índice especificado do <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <param name="index">O índice baseado em zero do elemento a ser removido.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="Index" /> é menor que zero.-ou-<paramref name="Index" /> é igual a ou maior que <see cref="T:System.Collections.ObjectModel.Collection`1.Count" /></exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderFactoryCollection.SetItem(System.Int32,System.Web.Mvc.ValueProviderFactory)">
      <summary>Define o objeto de fábrica de provedor de valor especificado no local de índice em questão.</summary>
      <param name="index">O local do índice baseado em zero no qual inserir o provedor de valor na coleção.</param>
      <param name="item">O objeto de fábrica de provedor de valor a ser definido.</param>
      <exception cref="[ArgumentNullException]">O parâmetro <paramref name="item" /> é nulo.</exception>
    </member>
    <member name="T:System.Web.Mvc.ValueProviderResult">
      <summary>Representa o resultado da associação de um valor (por exemplo, a partir de uma postagem de formulário ou cadeia de consulta) a uma propriedade de argumento de método de ação ou a um argumento em si.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ValueProviderResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.#ctor(System.Object,System.String,System.Globalization.CultureInfo)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ValueProviderResult" /> usando o valor bruto, o valor de tentativa e as informações de cultura especificados.</summary>
      <param name="rawValue">O valor bruto.</param>
      <param name="attemptedValue">O valor de tentativa.</param>
      <param name="culture">A cultura.</param>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.AttemptedValue">
      <summary>Obtém ou define o valor bruto que é convertido em uma cadeia de caracteres para exibição.</summary>
      <returns>O valor bruto.</returns>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type)">
      <summary>Converte o valor que é encapsulado por este resultado para o tipo especificado.</summary>
      <returns>O valor convertido.</returns>
      <param name="type">O tipo de destino.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="type" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type,System.Globalization.CultureInfo)">
      <summary>Converte o valor que é encapsulado por este resultado para o tipo especificado usando-se as informações de cultura especificadas.</summary>
      <returns>O valor convertido.</returns>
      <param name="type">O tipo de destino.</param>
      <param name="culture">A cultura a ser usada na conversão.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="type" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.Culture">
      <summary>Obtém ou define a cultura.</summary>
      <returns>A cultura.</returns>
    </member>
    <member name="P:System.Web.Mvc.ValueProviderResult.RawValue">
      <summary>Obtém ou define o valor bruto que é fornecido pelo provedor de valor.</summary>
      <returns>O valor bruto.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewContext">
      <summary>Encapsula informações relacionadas à renderização de uma exibição.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ViewContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView,System.Web.Mvc.ViewDataDictionary,System.Web.Mvc.TempDataDictionary,System.IO.TextWriter)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ViewContext" /> usando o contexto do controlador, a exibição, o dicionário de dados da exibição, o dicionário de dados temporários e o gravador de texto especificados.</summary>
      <param name="controllerContext">Encapsula informações sobre a solicitação HTTP.</param>
      <param name="view">A exibição a ser renderizada.</param>
      <param name="viewData">O dicionário que contém os dados necessários para renderizar a exibição.</param>
      <param name="tempData">O dicionário que contém os dados temporários para a exibição.</param>
      <param name="writer">O objeto gravador de texto usado para gravar a saída HTML.</param>
      <exception cref="T:System.ArgumentNullException">Um dos parâmetros é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ClientValidationEnabled">
      <summary>Obtém ou define um valor que indica se a validação do lado do cliente está habilitada.</summary>
      <returns>verdadeiro se a validação do lado do cliente estiver habilitada; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.FormContext">
      <summary>Obtém ou define um objeto que encapsula informações necessárias para validar e processar os dados de entrada de um formulário HTML.</summary>
      <returns>Um objeto que encapsula informações necessárias para validar e processar os dados de entrada de um formulário HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewContext.OutputClientValidation">
      <summary>Grava as informações de validação do cliente na resposta HTTP.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.TempData">
      <summary>Obtém os dados associados a esta solicitação e que estão disponíveis para apenas uma solicitação.</summary>
      <returns>Os dados temporários.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.UnobtrusiveJavaScriptEnabled">
      <summary>Obtém ou define um valor que indica se o JavaScript discreto está habilitado.</summary>
      <returns>verdadeiro se o JavaScript discreto estiver habilitado; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ValidationMessageElement">
      <summary>Nome do elemento usado para envolver uma mensagem de nível superior gerada por <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)" /> e outras sobrecargas.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ValidationSummaryMessageElement">
      <summary>Nome do elemento usado para envolver uma mensagem de nível superior gerada por <see cref="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)" /> e outras sobrecargas.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.View">
      <summary>Obtém um objeto que implementa a interface <see cref="T:System.Web.Mvc.IView" /> a ser renderizada no navegador.</summary>
      <returns>A exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ViewBag">
      <summary>Obtém o dicionário dinâmico de dados de exibição.</summary>
      <returns>O dicionário dinâmico de dados de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.ViewData">
      <summary>Obtém os dados de exibição passados à exibição.</summary>
      <returns>Os dados de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewContext.Writer">
      <summary>Obtém ou define o objeto gravador de texto usado para gravar a saída HTML.</summary>
      <returns>O objeto usado para gravar a saída HTML.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary">
      <summary>Representa um contêiner usado para passar dados entre um controlador e uma exibição.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ViewDataDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usando o modelo especificado.</summary>
      <param name="model">O modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usando o dicionário especificado.</summary>
      <param name="dictionary">O dicionário.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="dictionary" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Adiciona o item especificado à coleção.</summary>
      <param name="item">O objeto a adicionar à coleção.</param>
      <exception cref="T:System.NotSupportedException">A coleção é somente leitura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Add(System.String,System.Object)">
      <summary>Adiciona um elemento à coleção usando a chave e o valor especificados.</summary>
      <param name="key">A chave do elemento a ser adicionado.</param>
      <param name="value">O valor do elemento a ser adicionado.</param>
      <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Collections.Generic.IDictionary`2" /> é somente leitura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nula.</exception>
      <exception cref="T:System.ArgumentException">Um elemento que tem a mesma chave já existe no objeto <see cref="T:System.Collections.Generic.IDictionary`2" />.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Clear">
      <summary>Remove todos os itens da coleção.</summary>
      <exception cref="T:System.NotSupportedException">O objeto <see cref="T:System.Collections.Generic.ICollection`1" /> é somente leitura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Determina se a coleção contém o item especificado.</summary>
      <returns>verdadeiro se <paramref name="item" /> for encontrado na coleção; caso contrário, falso.</returns>
      <param name="item">O objeto a ser localizado na coleção.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.ContainsKey(System.String)">
      <summary>Determina se a coleção contém um elemento que tem a chave especificada.</summary>
      <returns>verdadeiro se a coleção contiver um elemento que tem a chave especificada; caso contrário, falso.</returns>
      <param name="key">A chave do elemento a ser localizado na coleção.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
      <summary>Copia os elementos da coleção para uma matriz, começando em um índice específico.</summary>
      <param name="array">A matriz unidimensional que é o destino dos elementos copiados a partir da coleção.A matriz deve ter indexação baseada em zero.</param>
      <param name="arrayIndex">O índice baseado em zero na <paramref name="array" /> na qual a cópia inicia.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> é nulo.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="arrayIndex" /> é menor que 0.</exception>
      <exception cref="T:System.ArgumentException">
        <paramref name="array" /> é multidimencional.-ou- <paramref name="arrayIndex" /> é igual a ou maior que o comprimento da <paramref name="array" />.-ou- O número de elementos na coleção de origem é maior que o espaço disponível do <paramref name="arrayIndex" /> ao fim da <paramref name="array" /> de destino.-ou- O tipo <paramref name="T" /> não pode ser convertido automaticamente no tipo da <paramref name="array" /> de destino.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Count">
      <summary>Obtém o número de elementos na coleção.</summary>
      <returns>O número de elementos na coleção.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String)">
      <summary>Avalia a expressão especificada.</summary>
      <returns>Os resultados da avaliação.</returns>
      <param name="expression">A expressão.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="expression" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Eval(System.String,System.String)">
      <summary>Avalia a expressão especificada usando o formato especificado.</summary>
      <returns>Os resultados da avaliação.</returns>
      <param name="expression">A expressão.</param>
      <param name="format">O formato.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetEnumerator">
      <summary>Retorna um enumerador que pode ser usado para iterar por meio do conjunto.</summary>
      <returns>Um enumerador que pode ser usado para iterar por meio do conjunto.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.GetViewDataInfo(System.String)">
      <summary>Retorna informações sobre os dados de exibição conforme definição do parâmetro <paramref name="expression" />.</summary>
      <returns>Um objeto que contém as informações dos dados de exibição definidas pelo parâmetro <paramref name="expression" />.</returns>
      <param name="expression">Um conjunto de pares chave/valor que define as informações dos dados de exibição a serem retornados.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="expression" /> é nulo ou está vazio.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.IsReadOnly">
      <summary>Obtém um valor que indica se o conjunto é somente leitura.</summary>
      <returns>verdadeiro se o conjunto for somente leitura; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Item(System.String)">
      <summary>Obtém ou define o item associado à chave especificada.</summary>
      <returns>O valor do item selecionado.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Keys">
      <summary>Obtém uma coleção que contém as chaves deste dicionário.</summary>
      <returns>Uma coleção que contém as chaves do objeto que implementa <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Model">
      <summary>Obtém ou define o modelo associado aos dados de exibição.</summary>
      <returns>O modelo associado aos dados de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelMetadata">
      <summary>Obtém ou define as informações sobre o modelo.</summary>
      <returns>As informações sobre o modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.ModelState">
      <summary>Obtém o estado do modelo.</summary>
      <returns>O estado do modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
      <summary>Remove a primeira ocorrência de um objeto especificado da coleção.</summary>
      <returns>verdadeiro se <paramref name="item" /> foi removido com êxito da coleção; caso contrário, falso.Este método também retorna falso se <paramref name="item" /> não for encontrado na coleção.</returns>
      <param name="item">O objeto a ser removido da coleção.</param>
      <exception cref="T:System.NotSupportedException">A coleção é somente leitura.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.Remove(System.String)">
      <summary>Remove o elemento da coleção usando a chave especificada.</summary>
      <returns>verdadeiro se o elemento for removido com êxito; caso contrário, falso.Este método também retorna falso se <paramref name="key" /> não for encontrada na coleção original.</returns>
      <param name="key">A chave do elemento a ser removido.</param>
      <exception cref="T:System.NotSupportedException">A coleção é somente leitura.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.SetModel(System.Object)">
      <summary>Define o modelo de dados a ser usado para a exibição.</summary>
      <param name="value">O modelo de dados a ser usado para a exibição.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um enumerador que pode ser usado para iterar por meio do conjunto.</summary>
      <returns>Um enumerador que pode ser usado para iterar por meio do conjunto.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.TemplateInfo">
      <summary>Obtém ou define um objeto que encapsula informações sobre o contexto do modelo atual.</summary>
      <returns>Um objeto que contém informações sobre o modelo atual.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary.TryGetValue(System.String,System.Object@)">
      <summary>Tenta recuperar o valor associado à chave especificada.</summary>
      <returns>verdadeiro se a coleção contiver um elemento com a chave especificada; caso contrário, falso.</returns>
      <param name="key">A chave do valor a ser obtido.</param>
      <param name="value">Quando esse método retorna, o valor associado à chave especificada, se a chave for encontrada; caso contrário, o valor padrão para o tipo do parâmetro do <paramref name="value" />.Este parâmetro é passado não inicializado.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="key" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary.Values">
      <summary>Obtém uma coleção que contém os valores deste dicionário.</summary>
      <returns>Uma coleção que contém os valores do objeto que implementa <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewDataDictionary`1">
      <summary>Representa um contêiner usado para passar dados fortemente tipados entre um controlador e uma exibição.</summary>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ViewDataDictionary`1" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(System.Web.Mvc.ViewDataDictionary)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> usando o dicionário de dados de exibição especificado.</summary>
      <param name="viewDataDictionary">Um dicionário de dados de exibição existente a ser copiado para esta instância.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.#ctor(`0)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> usando o modelo especificado.</summary>
      <param name="model">O modelo de dados a ser usado para a exibição.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.Model">
      <summary>Obtém ou define o modelo.</summary>
      <returns>Uma referência para o modelo de dados.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataDictionary`1.ModelMetadata">
      <summary>Obtém ou define as informações sobre o modelo.</summary>
      <returns>As informações sobre o modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewDataDictionary`1.SetModel(System.Object)">
      <summary>Define o modelo de dados a ser usado para a exibição.</summary>
      <param name="value">O modelo de dados a ser usado para a exibição.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro enquanto o modelo estava sendo definido.</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewDataInfo">
      <summary>Encapsula informações sobre o conteúdo do modelo atual usado para desenvolver modelos e sobre os auxiliares HTML que interagem com os modelos.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ViewDataInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewDataInfo.#ctor(System.Func{System.Object})">
      <summary>Inicializa uma nova instância da classe T:System.Web.Mvc.ViewDataInfo e associa um delegado para acessar as informações dos dados de exibição.</summary>
      <param name="valueAccessor">Um delegado que define como as informações dos dados de exibição são acessadas.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Container">
      <summary>Obtém ou define o objeto que contém os valores a serem exibidos pelo modelo.</summary>
      <returns>O objeto que contém os valores a serem exibidos pelo modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.PropertyDescriptor">
      <summary>Obtém ou define a descrição da propriedade a ser exibida pelo modelo.</summary>
      <returns>A descrição da propriedade a ser exibida pelo modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewDataInfo.Value">
      <summary>Obtém ou define o valor atual a ser exibido pelo modelo.</summary>
      <returns>O valor atual a ser exibido pelo modelo.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineCollection">
      <summary>Representa uma coleção de mecanismos de exibição que estão disponíveis para o aplicativo.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ViewEngineCollection" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.#ctor(System.Collections.Generic.IList{System.Web.Mvc.IViewEngine})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ViewEngineCollection" /> usando a lista especificada de mecanismos de exibição.</summary>
      <param name="list">A lista que é ajustada pela nova coleção.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="list" /> é nula.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.ClearItems">
      <summary>Remove todos os elementos do <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindPartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Encontra a exibição parcial especificada usando o contexto de controlador especificado.</summary>
      <returns>A exibição parcial.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="partialViewName">O nome da exibição parcial.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="controllerContext" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="partialViewName" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.FindView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Encontra a exibição especificada usando o modo de exibição mestre e o contexto de controlador especificados.</summary>
      <returns>A exibição.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="viewName">O nome da exibição.</param>
      <param name="masterName">O nome do modo de exibição mestre.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="controllerContext" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="partialViewName" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.InsertItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>Insere um elemento na coleção no índice especificado.</summary>
      <param name="index">O índice baseado em zero em que o item deve ser inserido.</param>
      <param name="item">O objeto a ser inserido.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.-ou-<paramref name="index" /> é maior do que o número de itens na coleção.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="item" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.RemoveItem(System.Int32)">
      <summary>Remove o elemento no índice especificado do <see cref="T:System.Collections.ObjectModel.Collection`1" />.</summary>
      <param name="index">O índice baseado em zero do elemento a ser removido.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.-ou-<paramref name="index" /> é igual a ou maior que <see cref="T:System.Collections.ObjectModel.Collection`1.Count" /></exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineCollection.SetItem(System.Int32,System.Web.Mvc.IViewEngine)">
      <summary>Substitui o elemento no índice especificado.</summary>
      <param name="index">O índice baseado em zero do elemento a ser substituído.</param>
      <param name="item">O novo valor do elemento no índice especificado.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> é menor que zero.-ou-<paramref name="index" /> é maior do que o número de itens na coleção.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="item" /> é nulo.</exception>
    </member>
    <member name="T:System.Web.Mvc.ViewEngineResult">
      <summary>Representa o resultado da localização de um mecanismo de exibição.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ViewEngineResult" /> usando os locais pesquisados especificados.</summary>
      <param name="searchedLocations">Os locais pesquisados.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="searchedLocations" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewEngineResult.#ctor(System.Web.Mvc.IView,System.Web.Mvc.IViewEngine)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ViewEngineResult" /> usando o mecanismo de exibição e a exibição especificados.</summary>
      <param name="view">A exibição.</param>
      <param name="viewEngine">O mecanismo de exibição.</param>
      <exception cref="T:System.ArgumentNullException">O <paramref name="view " /> ou parâmetro <paramref name="viewEngine" /> é nulo.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.SearchedLocations">
      <summary>Obtém ou define os locais pesquisados.</summary>
      <returns>Os locais pesquisados.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.View">
      <summary>Obtém ou define a exibição.</summary>
      <returns>A exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewEngineResult.ViewEngine">
      <summary>Obtém ou define o mecanismo de exibição.</summary>
      <returns>O mecanismo de exibição.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewEngines">
      <summary>Representa uma coleção de mecanismos de exibição que estão disponíveis para o aplicativo.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewEngines.Engines">
      <summary>Obtém os mecanismos de exibição.</summary>
      <returns>Os mecanismos de exibição.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage">
      <summary>Representa as informações necessárias para compilar uma página de exibição mestra.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ViewMasterPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Ajax">
      <summary>Obtém o script AJAX para a página mestra.</summary>
      <returns>O script AJAX para a página mestra.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Html">
      <summary>Obtém o HTML para a página mestra.</summary>
      <returns>O HTML para a página mestra.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Model">
      <summary>Obtém o modelo.</summary>
      <returns>O modelo.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.TempData">
      <summary>Obtém os dados temporários.</summary>
      <returns>Os dados temporários.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Url">
      <summary>Obtém a URL.</summary>
      <returns>A URL.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewBag">
      <summary>Obtém o dicionário dinâmico de multiconjunto de exibição.</summary>
      <returns>O dicionário dinâmico de multiconjunto de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewContext">
      <summary>Obtém o contexto da exibição.</summary>
      <returns>O contexto da exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.ViewData">
      <summary>Obtém os dados de exibição.</summary>
      <returns>Os dados de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage.Writer">
      <summary>Obtém o gravador usado para renderizar a página mestra.</summary>
      <returns>O gravador usado para renderizar a página mestra.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewMasterPage`1">
      <summary>Representa as informações necessárias para compilar uma página de modo de exibição mestre fortemente tipada.</summary>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewMasterPage`1.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ViewMasterPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Ajax">
      <summary>Obtém o script AJAX para a página mestra.</summary>
      <returns>O script AJAX para a página mestra.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Html">
      <summary>Obtém o HTML para a página mestra.</summary>
      <returns>O HTML para a página mestra.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.Model">
      <summary>Obtém o modelo.</summary>
      <returns>Uma referência para o modelo de dados.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewMasterPage`1.ViewData">
      <summary>Obtém os dados de exibição.</summary>
      <returns>Os dados de exibição.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage">
      <summary>Representa as propriedades e os métodos necessários para renderizar uma exibição como uma página Web Forms.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ViewPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Ajax">
      <summary>Obtém ou define o objeto <see cref="T:System.Web.Mvc.AjaxHelper" /> usado para renderizar elementos HTML em cenários Ajax.</summary>
      <returns>O objeto auxiliar Ajax que está associado à exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Html">
      <summary>Obtém ou define o objeto <see cref="T:System.Web.Mvc.HtmlHelper" /> usado para renderizar elementos HTML.</summary>
      <returns>O objeto auxiliar HTML que está associado à exibição.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.InitHelpers">
      <summary>Inicializa as propriedades <see cref="P:System.Web.Mvc.ViewPage.Ajax" />, <see cref="P:System.Web.Mvc.ViewPage.Html" /> e <see cref="P:System.Web.Mvc.ViewPage.Url" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.MasterLocation">
      <summary>Obtém ou define o caminho do modo de exibição mestre.</summary>
      <returns>O caminho do modo de exibição mestre.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Model">
      <summary>Obtém a propriedade Modelo do objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> associado.</summary>
      <returns>A propriedade Modelo do objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> associado.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.OnPreInit(System.EventArgs)">
      <summary>Eleva o evento <see cref="E:System.Web.UI.Page.PreInit" /> no começo da página de inicialização.</summary>
      <param name="e">Os dados do evento.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.ProcessRequest(System.Web.HttpContext)">
      <summary>Habilita o processamento da solicitação HTTP especificada pela estrutura do ASP.NET MVC.</summary>
      <param name="context">Um objeto que encapsula informações específicas a HTTP sobre a solicitação HTTP atual.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.Render(System.Web.UI.HtmlTextWriter)">
      <summary>Inicializa o objeto <see cref="T:System.Web.UI.HtmlTextWriter" /> que recebe o conteúdo da página a ser renderizado.</summary>
      <param name="writer">O objeto que recebe o conteúdo da página.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.RenderView(System.Web.Mvc.ViewContext)">
      <summary>Renderiza a página de exibição para a resposta usando o contexto de exibição especificado.</summary>
      <param name="viewContext">Um objeto que encapsula as informações necessárias a fim de renderizar a exibição, o qual inclui o contexto de controlador, contexto de formulário, os dados temporários e os dados de exibição para a exibição associada.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetTextWriter(System.IO.TextWriter)">
      <summary>Observação: Esta API está obsoleta.Define o gravador de texto usado para renderizar a exibição para a resposta.</summary>
      <param name="textWriter">O gravador usado para renderizar a exibição para a resposta.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Define o dicionário de dados de exibição para a exibição associada.</summary>
      <param name="viewData">Um dicionário de dados a serem passados para a exibição.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.TempData">
      <summary>Obtém os dados temporários a serem passados para a exibição.</summary>
      <returns>Os dados temporários a serem passados para a exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Url">
      <summary>Obtém ou define a URL da página renderizada.</summary>
      <returns>A URL da página renderizada.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewBag">
      <summary>Obtém o multiconjunto da exibição.</summary>
      <returns>O multiconjunto da exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewContext">
      <summary>Obtém ou define as informações usadas para renderizar a exibição.</summary>
      <returns>As informações usadas para renderizar a exibição, o que inclui o contexto de formulário, os dados temporários e os dados de exibição da exibição associada.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.ViewData">
      <summary>Obtém ou define um dicionário que contém os dados a serem passados entre o controlador e a exibição.</summary>
      <returns>Um dicionário que contém os dados a serem passados entre o controlador e a exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage.Writer">
      <summary>Obtém o gravador de texto usado para renderizar a exibição para a resposta.</summary>
      <returns>O gravador de texto usado para renderizar a exibição para a resposta.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewPage`1">
      <summary>Representa as informações necessárias para renderizar uma exibição fortemente tipada como página Web Forms.</summary>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ViewPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Ajax">
      <summary>Obtém ou define o objeto <see cref="T:System.Web.Mvc.AjaxHelper`1" /> compatível com a renderização HTML em cenários Ajax.</summary>
      <returns>O objeto auxiliar Ajax que está associado à exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Html">
      <summary>Obtém ou define o objeto <see cref="T:System.Web.Mvc.HtmlHelper" /> que fornece suporte para renderizar elementos.</summary>
      <returns>O objeto auxiliar HTML que está associado à exibição.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.InitHelpers">
      <summary>Cria uma instância e inicia as propriedades <see cref="P:System.Web.Mvc.ViewPage`1.Ajax" /> e <see cref="P:System.Web.Mvc.ViewPage`1.Html" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.Model">
      <summary>Obtém a propriedade <see cref="P:System.Web.Mvc.ViewDataDictionary`1.Model" /> do objeto <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> associado.</summary>
      <returns>Uma referência para o modelo de dados.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Define o dicionário de dados de exibição para a exibição associada.</summary>
      <param name="viewData">Um dicionário de dados a serem passados para a exibição.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewPage`1.ViewData">
      <summary>Obtém ou define um dicionário que contém os dados a serem passados entre o controlador e a exibição.</summary>
      <returns>Um dicionário que contém os dados a serem passados entre o controlador e a exibição.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResult">
      <summary>Representa uma classe usada para renderizar uma exibição usando uma instância <see cref="T:System.Web.Mvc.IView" /> que é retornada por um objeto <see cref="T:System.Web.Mvc.IViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ViewResult" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResult.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Pesquisa os mecanismos de exibição registrados e retorna o objeto usado para renderizar a exibição.</summary>
      <returns>O objeto usado para renderizar a exibição.</returns>
      <param name="context">O contexto do controlador.</param>
      <exception cref="T:System.InvalidOperationException">Ocorreu um erro enquanto o método pesquisava a exibição.</exception>
    </member>
    <member name="P:System.Web.Mvc.ViewResult.MasterName">
      <summary>Obtém o nome do modo de exibição mestre (como uma página mestra ou modelo) a ser usado quando a exibição é renderizada.</summary>
      <returns>O nome do modo de exibição mestre.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewResultBase">
      <summary>Representa uma classe básica usada para fornecer o modelo à exibição e, em seguida, renderizar a exibição para a resposta.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ViewResultBase" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.ExecuteResult(System.Web.Mvc.ControllerContext)">
      <summary>Quando chamada pelo chamador de ação, renderiza a exibição para a resposta.</summary>
      <param name="context">O contexto no qual o resultado é executado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="context" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.ViewResultBase.FindView(System.Web.Mvc.ControllerContext)">
      <summary>Retorna o objeto <see cref="T:System.Web.Mvc.ViewEngineResult" /> usado para renderizar a exibição.</summary>
      <returns>O mecanismo de exibição.</returns>
      <param name="context">O contexto.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.Model">
      <summary>Obtém o modelo dos dados de exibição.</summary>
      <returns>O modelo dos dados de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.TempData">
      <summary>Obtém ou define o objeto <see cref="T:System.Web.Mvc.TempDataDictionary" /> para este resultado.</summary>
      <returns>Os dados temporários.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.View">
      <summary>Obtém ou define o objeto <see cref="T:System.Web.Mvc.IView" /> renderizado para a resposta.</summary>
      <returns>A exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewBag">
      <summary>Obtém o multiconjunto da exibição.</summary>
      <returns>O multiconjunto da exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewData">
      <summary>Obtém ou define o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> de dados de exibição para este resultado.</summary>
      <returns>Os dados de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewEngineCollection">
      <summary>Obtém ou define a coleção de mecanismos de exibição associada a este resultado.</summary>
      <returns>A coleção de mecanismos de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewResultBase.ViewName">
      <summary>Obtém ou define o nome da exibição a ser renderizada.</summary>
      <returns>O nome da exibição.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewStartPage">
      <summary>Fornece uma classe abstrata que pode ser usada para implementar uma página (mestra) inicial de exibição.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewStartPage.#ctor">
      <summary>Quando implementada em uma classe derivada, inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.ViewStartPage" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Html">
      <summary>Quando implementado em uma classe derivada, obtém a marcação HTML para a página inicial de exibição.</summary>
      <returns>A marcação HTML para a página inicial de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.Url">
      <summary>Quando implementado um classe derivada, obtém a URL para a página inicial de exibição.</summary>
      <returns>A URL para a página inicial de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewStartPage.ViewContext">
      <summary>Quando implementado em uma classe derivada, obtém o contexto de exibição para a página inicial de exibição.</summary>
      <returns>O contexto de exibição para a página inicial de exibição.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl">
      <summary>Fornece um contêiner para objetos <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ViewTemplateUserControl" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.ViewTemplateUserControl`1">
      <summary>Fornece um contêiner para objetos <see cref="T:System.Web.Mvc.TemplateInfo" />.</summary>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewTemplateUserControl`1.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ViewTemplateUserControl`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewTemplateUserControl`1.FormattedModelValue">
      <summary>Obtém o valor formatado.</summary>
      <returns>O valor formatado.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewType">
      <summary>Representa o tipo de uma exibição.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewType.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ViewType" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewType.TypeName">
      <summary>Obtém ou define o nome do tipo.</summary>
      <returns>O nome do tipo.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl">
      <summary>Representa as informações necessárias para construir um controle de usuário.</summary>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ViewUserControl" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Ajax">
      <summary>Obtém o script AJAX para a exibição.</summary>
      <returns>O script AJAX para a exibição.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.EnsureViewData">
      <summary>Garante que os dados de exibição sejam adicionados ao objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> do controle do usuário se os dados de exibição existirem.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Html">
      <summary>Obtém o script HTML para a exibição.</summary>
      <returns>Obtém o HTML para a exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Model">
      <summary>Obtém o modelo.</summary>
      <returns>O modelo.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.RenderView(System.Web.Mvc.ViewContext)">
      <summary>Renderiza a exibição usando o contexto de exibição especificado.</summary>
      <param name="viewContext">O contexto da exibição.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetTextWriter(System.IO.TextWriter)">
      <summary>Define o gravador de texto usado para renderizar a exibição para a resposta.</summary>
      <param name="textWriter">O gravador usado para renderizar a exibição para a resposta.</param>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Define o dicionário de dados de exibição, usando os dados de exibição especificados.</summary>
      <param name="viewData">Os dados de exibição.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.TempData">
      <summary>Obtém o dicionário de dados temporários.</summary>
      <returns>O dicionário de dados temporários.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Url">
      <summary>Obtém a URL para a exibição.</summary>
      <returns>A URL para a exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewBag">
      <summary>Obtém o multiconjunto da exibição.</summary>
      <returns>O multiconjunto da exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewContext">
      <summary>Obtém ou define o contexto da exibição.</summary>
      <returns>O contexto da exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewData">
      <summary>Obtém ou define o dicionário de dados de exibição.</summary>
      <returns>O dicionário de dados de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.ViewDataKey">
      <summary>Obtém ou define a chave de dados de exibição.</summary>
      <returns>A chave de dados de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl.Writer">
      <summary>Obtém o gravador usado para renderizar a exibição para a resposta.</summary>
      <returns>O gravador usado para renderizar a exibição para a resposta.</returns>
    </member>
    <member name="T:System.Web.Mvc.ViewUserControl`1">
      <summary>Representa as informações necessárias para criar um controle de usuário fortemente tipado.</summary>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.ViewUserControl`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Ajax">
      <summary>Obtém o script AJAX para a exibição.</summary>
      <returns>O script AJAX para a exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Html">
      <summary>Obtém o script HTML para a exibição.</summary>
      <returns>Obtém o HTML para a exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.Model">
      <summary>Obtém o modelo.</summary>
      <returns>Uma referência para o modelo de dados.</returns>
    </member>
    <member name="M:System.Web.Mvc.ViewUserControl`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Define os dados de exibição para a exibição.</summary>
      <param name="viewData">Os dados de exibição.</param>
    </member>
    <member name="P:System.Web.Mvc.ViewUserControl`1.ViewData">
      <summary>Obtém ou define os dados de exibição.</summary>
      <returns>Os dados de exibição.</returns>
    </member>
    <member name="T:System.Web.Mvc.VirtualPathProviderViewEngine">
      <summary>Representa uma implementação de classe base abstrata da interface <see cref="T:System.Web.Mvc.IViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.VirtualPathProviderViewEngine" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaMasterLocationFormats">
      <summary>Obtém ou define os formatos de local mestre habilitados por área.</summary>
      <returns>Os formatos de local mestre habilitados por área.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaPartialViewLocationFormats">
      <summary>Obtém ou define os formatos de local de exibição parcial habilitados por área.</summary>
      <returns>Os formatos de local de exibição parcial habilitados por área.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.AreaViewLocationFormats">
      <summary>Obtém ou define os formatos de local de exibição habilitados por área.</summary>
      <returns>Os formatos de local de exibição habilitados por área.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Cria a exibição parcial especificada usando o contexto de controlador especificado.</summary>
      <returns>Uma referência para a exibição parcial.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="partialPath">O caminho parcial para a nova exibição parcial.</param>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Cria a exibição especificada usando o contexto do controlador, o caminho da exibição e o caminho da exibição mestre.</summary>
      <returns>Uma referência para a exibição.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="viewPath">O caminho da exibição.</param>
      <param name="masterPath">O caminho do modo de exibição mestre.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.DisplayModeProvider">
      <summary>Obtém ou define o provedor do modo de exibição.</summary>
      <returns>O provedor do modo de exibição.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FileExists(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Retorna um valor que indica se o arquivo está no caminho especificado usando o contexto de controlador especificado.</summary>
      <returns>verdadeiro se o arquivo estiver no caminho especificado; caso contrário, falso.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="virtualPath">O caminho virtual.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.FileExtensions">
      <summary>Obtém ou define as extensões de nomes de arquivo usadas para localizar uma exibição.</summary>
      <returns>As extensões de nomes de arquivo usadas para localizar uma exibição.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindPartialView(System.Web.Mvc.ControllerContext,System.String,System.Boolean)">
      <summary>Encontra a exibição parcial especificada usando o contexto de controlador especificado.</summary>
      <returns>A exibição parcial.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="partialViewName">O nome da exibição parcial.</param>
      <param name="useCache">verdadeiro para usar a exibição parcial armazenada em cache.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="controllerContext" /> é nulo (Nada no Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="partialViewName" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.FindView(System.Web.Mvc.ControllerContext,System.String,System.String,System.Boolean)">
      <summary>Encontra a exibição especificada usando o contexto de controlador especificado e o nome de exibição mestre.</summary>
      <returns>A exibição de página.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="viewName">O nome da exibição.</param>
      <param name="masterName">O nome do modo de exibição mestre.</param>
      <param name="useCache">verdadeiro para usar a exibição armazenada em cache.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="controllerContext" /> é nulo (Nada no Visual Basic).</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="viewName" /> é nulo ou está vazio.</exception>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.MasterLocationFormats">
      <summary>Obtém ou define os formatos de local mestre.</summary>
      <returns>Os formatos de local mestre.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.PartialViewLocationFormats">
      <summary>Obtém ou define os formatos de local da exibição parcial.</summary>
      <returns>Os formatos de local da exibição parcial.</returns>
    </member>
    <member name="M:System.Web.Mvc.VirtualPathProviderViewEngine.ReleaseView(System.Web.Mvc.ControllerContext,System.Web.Mvc.IView)">
      <summary>Libera a exibição especificada usando o contexto de controlador especificado.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="view">A exibição a ser liberada.</param>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationCache">
      <summary>Obtém ou define o cache de local de exibição.</summary>
      <returns>O cache de local de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.ViewLocationFormats">
      <summary>Obtém ou define os formatos de local de exibição.</summary>
      <returns>Os formatos de local de exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.VirtualPathProviderViewEngine.VirtualPathProvider">
      <summary>Obtém ou define o provedor do caminho virtual.</summary>
      <returns>O provedor do caminho virtual.</returns>
    </member>
    <member name="T:System.Web.Mvc.WebFormView">
      <summary>Representa as informações necessárias para compilar uma página Web Forms no ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.WebFormView" /> usando o contexto do controlador e o caminho de exibição.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="viewPath">O caminho da exibição.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.WebFormView" /> usando o contexto do controlador, o caminho da exibição e o caminho para a página mestra.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="viewPath">O caminho da exibição.</param>
      <param name="masterPath">O caminho para a página mestra.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.#ctor(System.Web.Mvc.ControllerContext,System.String,System.String,System.Web.Mvc.IViewPageActivator)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.WebFormView" /> usando o contexto do controlador, o caminho da exibição, o caminho para a página mestra e a instância <see cref="T:System.Web.Mvc.IViewPageActivator" />.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="viewPath">O caminho da exibição.</param>
      <param name="masterPath">O caminho para a página mestra.</param>
      <param name="viewPageActivator">Uma instância da interface do ativador de página de exibição.</param>
    </member>
    <member name="P:System.Web.Mvc.WebFormView.MasterPath">
      <summary>Obtém ou define o caminho mestre.</summary>
      <returns>O caminho mestre.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebFormView.RenderView(System.Web.Mvc.ViewContext,System.IO.TextWriter,System.Object)">
      <summary>Renderiza a exibição para a resposta.</summary>
      <param name="viewContext">Um objeto que encapsula as informações necessárias a fim de renderizar a exibição, o qual inclui o contexto de controlador, contexto de formulário, os dados temporários e os dados de exibição para a exibição associada.</param>
      <param name="writer">O objeto gravador de texto usado para gravar a saída HTML.</param>
      <param name="instance">A instância da página de exibição.</param>
    </member>
    <member name="T:System.Web.Mvc.WebFormViewEngine">
      <summary>Representa um mecanismo de exibição usado para renderizar uma página Web Forms para a resposta.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.WebFormViewEngine" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.#ctor(System.Web.Mvc.IViewPageActivator)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.WebFormViewEngine" /> usando o ativador especificado da página de exibição.</summary>
      <param name="viewPageActivator">Uma instância de uma classe que implementa a interface <see cref="T:System.Web.Mvc.IViewPageActivator" />.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Cria a exibição parcial especificada usando o contexto de controlador especificado.</summary>
      <returns>A exibição parcial.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="partialPath">O caminho parcial.</param>
    </member>
    <member name="M:System.Web.Mvc.WebFormViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
      <summary>Cria a exibição especificada usando o contexto de controlador especificado e os caminhos da exibição e do modo de exibição mestre.</summary>
      <returns>A exibição.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="viewPath">O caminho da exibição.</param>
      <param name="masterPath">O caminho do modo de exibição mestre.</param>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage">
      <summary>Representa as propriedades e métodos necessários para renderizar uma exibição que usa sintaxe ASP.NET Razor.</summary>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.WebViewPage" />. </summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Ajax">
      <summary>Obtém ou define o objeto <see cref="T:System.Web.Mvc.AjaxHelper" /> usado para renderizar HTML usando Ajax. </summary>
      <returns>O objeto <see cref="T:System.Web.Mvc.AjaxHelper" /> usado para renderizar HTML usando Ajax.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ConfigurePage(System.Web.WebPages.WebPageBase)">
      <summary>Define o contexto e os dados de exibição para a página.</summary>
      <param name="parentPage">A página pai.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Context">
      <summary>Obtém o objeto <see cref="T:System.Web.HttpContext" /> associado à página.</summary>
      <returns>O objeto <see cref="T:System.Web.HttpContext" /> associado à página.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.ExecutePageHierarchy">
      <summary>Executa a hierarquia da página para o pipeline de execução do ASP.NET Razor.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Html">
      <summary>Obtém ou define o objeto <see cref="T:System.Web.Mvc.HtmlHelper" /> usado para renderizar elementos HTML.</summary>
      <returns>O objeto <see cref="T:System.Web.Mvc.HtmlHelper" /> usado para renderizar elementos HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.InitHelpers">
      <summary>Inicializa as classes <see cref="T:System.Web.Mvc.AjaxHelper" />, <see cref="T:System.Web.Mvc.HtmlHelper" /> e <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Model">
      <summary>Obtém a propriedade Modelo do objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> associado.</summary>
      <returns>A propriedade Modelo do objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> associado.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Define os dados de exibição.</summary>
      <param name="viewData">Os dados de exibição.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.TempData">
      <summary>Obtém os dados temporários a serem passados para a exibição.</summary>
      <returns>Os dados temporários a serem passados para a exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.Url">
      <summary>Obtém ou define a URL da página renderizada.</summary>
      <returns>A URL da página renderizada.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewBag">
      <summary>Obtém o multiconjunto da exibição.</summary>
      <returns>O multiconjunto da exibição.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewContext">
      <summary>Obtém ou define as informações usadas para renderizar a exibição.</summary>
      <returns>As informações usadas para renderizar a exibição, o que inclui o contexto de formulário, os dados temporários e os dados de exibição da exibição associada.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage.ViewData">
      <summary>Obtém ou define um dicionário que contém os dados a serem passados entre o controlador e a exibição.</summary>
      <returns>Um dicionário que contém os dados a serem passados entre o controlador e a exibição.</returns>
    </member>
    <member name="T:System.Web.Mvc.WebViewPage`1">
      <summary>Representa as propriedades e métodos necessários para renderizar uma exibição que usa sintaxe ASP.NET Razor.</summary>
      <typeparam name="TModel">O tipo do modelo de dados de exibição.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.WebViewPage`1" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Ajax">
      <summary>Obtém ou define o objeto <see cref="T:System.Web.Mvc.AjaxHelper" /> usado para renderizar marcação HTML usando Ajax.</summary>
      <returns>O objeto <see cref="T:System.Web.Mvc.AjaxHelper" /> usado para renderizar marcação HTML usando Ajax.</returns>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Html">
      <summary>Obtém ou define o objeto <see cref="T:System.Web.Mvc.HtmlHelper" /> usado para renderizar elementos HTML.</summary>
      <returns>O objeto <see cref="T:System.Web.Mvc.HtmlHelper" /> usado para renderizar elementos HTML.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.InitHelpers">
      <summary>Inicializa as classes <see cref="T:System.Web.Mvc.AjaxHelper" />, <see cref="T:System.Web.Mvc.HtmlHelper" /> e <see cref="T:System.Web.Mvc.UrlHelper" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.Model">
      <summary>Obtém a propriedade Modelo do objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> associado.</summary>
      <returns>A propriedade Modelo do objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> associado.</returns>
    </member>
    <member name="M:System.Web.Mvc.WebViewPage`1.SetViewData(System.Web.Mvc.ViewDataDictionary)">
      <summary>Define os dados de exibição.</summary>
      <param name="viewData">Os dados de exibição.</param>
    </member>
    <member name="P:System.Web.Mvc.WebViewPage`1.ViewData">
      <summary>Obtém ou define um dicionário que contém os dados a serem passados entre o controlador e a exibição.</summary>
      <returns>Um dicionário que contém os dados a serem passados entre o controlador e a exibição.</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxExtensions">
      <summary>Representa o suporte ao ASP.NET AJAX em um aplicativo ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retorna um elemento âncora que contém a URL para o método de ação especificado; quando se clica no link da ação, o método de ação é invocado de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Retorna um elemento âncora que contém a URL para o método de ação especificado; quando se clica no link da ação, o método de ação é invocado de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retorna um elemento âncora que contém a URL para o método de ação especificado; quando se clica no link da ação, o método de ação é invocado de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Retorna um elemento âncora que contém a URL para o método de ação especificado; quando se clica no link da ação, o método de ação é invocado de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Retorna um elemento âncora que contém a URL para o método de ação especificado; quando se clica no link da ação, o método de ação é invocado de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="protocol">O protocolo para a URL, como "http" ou "https".</param>
      <param name="hostName">O nome do host da URL.</param>
      <param name="fragment">O nome do fragmento de URL (o nome âncora).</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento âncora que contém a URL para o método de ação especificado; quando se clica no link da ação, o método de ação é invocado de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="protocol">O protocolo para a URL, como "http" ou "https".</param>
      <param name="hostName">O nome do host da URL.</param>
      <param name="fragment">O nome do fragmento de URL (o nome âncora).</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retorna um elemento âncora que contém a URL para o método de ação especificado; quando se clica no link da ação, o método de ação é invocado de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retorna um elemento âncora que contém a URL para o método de ação especificado; quando se clica no link da ação, o método de ação é invocado de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento âncora que contém a URL para o método de ação especificado; quando se clica no link da ação, o método de ação é invocado de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retorna um elemento âncora que contém a URL para o método de ação especificado; quando se clica no link da ação, o método de ação é invocado de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retorna um elemento âncora que contém a URL para o método de ação especificado; quando se clica no link da ação, o método de ação é invocado de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento âncora que contém a URL para o método de ação especificado; quando se clica no link da ação, o método de ação é invocado de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="actionName">O nome do método de ação que tratará a solicitação.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="actionName">O nome do método de ação que tratará a solicitação.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="actionName">O nome do método de ação que tratará a solicitação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="actionName">O nome do método de ação que tratará a solicitação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="actionName">O nome do método de ação que tratará a solicitação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="actionName">O nome do método de ação que tratará a solicitação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="actionName">O nome do método de ação que tratará a solicitação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="actionName">O nome do método de ação que tratará a solicitação.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="actionName">O nome do método de ação que tratará a solicitação.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta. </summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="actionName">O nome do método de ação que tratará a solicitação.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta usando as informações de roteamento especificadas.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta usando as informações de roteamento especificadas.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta usando as informações de roteamento especificadas.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta usando as informações de roteamento especificadas.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta usando as informações de roteamento especificadas.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper)">
      <summary>Retorna um elemento script HTML que contém uma referência a um script de globalização que define as informações de cultura.</summary>
      <returns>Um elemento de script cujo atributo src está definido como script de globalização, conforme o exemplo a seguir: &lt;script type="text/javascript"     src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">O objeto auxiliar AJAX que este método estende.</param>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.GlobalizationScript(System.Web.Mvc.AjaxHelper,System.Globalization.CultureInfo)">
      <summary>Retorna um elemento HTML de script que contém uma referência a um script de globalização que define as informações de cultura especificadas.</summary>
      <returns>Um elemento HTML de script cujo atributo src está definido como script de globalização, conforme o exemplo a seguir:&lt;script type="text/javascript"    src="/MvcApplication1/Scripts/Globalization/en-US.js"&gt;&lt;/script&gt;</returns>
      <param name="ajaxHelper">O objeto auxiliar AJAX que este método estende.</param>
      <param name="cultureInfo">Encapsula informações sobre a cultura de destino, como formatos de data.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="cultureInfo" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retorna um elemento âncora que contém o caminho virtual para os valores de rota especificados; quando se clica no link, uma solicitação é feita para o caminho virtual de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Retorna um elemento âncora que contém o caminho virtual para os valores de rota especificados; quando se clica no link, uma solicitação é feita para o caminho virtual de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retorna um elemento âncora que contém o caminho virtual para os valores de rota especificados; quando se clica no link, uma solicitação é feita para o caminho virtual de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Retorna um elemento âncora que contém o caminho virtual para os valores de rota especificados; quando se clica no link, uma solicitação é feita para o caminho virtual de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento âncora que contém o caminho virtual para os valores de rota especificados; quando se clica no link, uma solicitação é feita para o caminho virtual de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="protocol">O protocolo para a URL, como "http" ou "https".</param>
      <param name="hostName">O nome do host da URL.</param>
      <param name="fragment">O nome do fragmento de URL (o nome âncora).</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retorna um elemento âncora que contém o caminho virtual para os valores de rota especificados; quando se clica no link, uma solicitação é feita para o caminho virtual de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento âncora que contém o caminho virtual para os valores de rota especificados; quando se clica no link, uma solicitação é feita para o caminho virtual de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
      <summary>Retorna um elemento âncora que contém o caminho virtual para os valores de rota especificados; quando se clica no link, uma solicitação é feita para o caminho virtual de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retorna um elemento âncora que contém o caminho virtual para os valores de rota especificados; quando se clica no link, uma solicitação é feita para o caminho virtual de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento âncora que contém o caminho virtual para os valores de rota especificados; quando se clica no link, uma solicitação é feita para o caminho virtual de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
      <summary>Retorna um elemento âncora que contém o caminho virtual para os valores de rota especificados; quando se clica no link, uma solicitação é feita para o caminho virtual de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento âncora que contém o caminho virtual para os valores de rota especificados; quando se clica no link, uma solicitação é feita para o caminho virtual de forma assíncrona usando-se JavaScript.</summary>
      <returns>Um elemento âncora.</returns>
      <param name="ajaxHelper">O auxiliar AJAX.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="ajaxOptions">Um objeto que fornece opções para a solicitação assíncrona.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="T:System.Web.Mvc.Ajax.AjaxOptions">
      <summary>Representa as configurações de opção para executar scripts Ajax em um aplicativo MVC ASP.NET.</summary>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.Ajax.AjaxOptions" />.</summary>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.AllowCache"></member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Confirm">
      <summary>Obtém ou define a mensagem a ser exibida em uma janela de confirmação antes do envio de uma solicitação.</summary>
      <returns>A mensagem a ser exibida em uma janela de confirmação.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.HttpMethod">
      <summary>Obtém ou define o método de solicitação HTTP ("Get" ou "Post").</summary>
      <returns>O método de solicitação HTTP.O valor padrão é "Post".</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.InsertionMode">
      <summary>Obtém ou define o modo que especifica como inserir a resposta no elemento DOM de destino.</summary>
      <returns>O modo de inserção ("InsertAfter", "InsertBefore" ou "Replace").O valor padrão é "Replace".</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementDuration">
      <summary>Obtém ou define um valor, em milissegundos, que controla a duração da animação ao mostrar ou ocultar o elemento que está sendo carregado.</summary>
      <returns>Um valor, em milissegundos, que controla a duração da animação ao mostrar ou ocultar o elemento que está sendo carregado.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.LoadingElementId">
      <summary>Obtém ou define o atributo id de um elemento HTML exibido enquanto a função Ajax está carregando.</summary>
      <returns>A ID do elemento exibido enquanto a função Ajax está carregando.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnBegin">
      <summary>Obtém ou define o nome da função JavaScript a ser chamada imediatamente antes de atualizar a página.</summary>
      <returns>O nome da função JavaScript a ser chamada antes de atualizar a página.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnComplete">
      <summary>Obtém ou define a função JavaScript a ser chamada quando os dados de resposta forem usados para criar uma instância, mas antes de atualizar a página.</summary>
      <returns>A função JavaScript a ser chamada quando os dados de resposta forem usados para criar uma instância.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnFailure">
      <summary>Obtém ou define a função JavaScript a ser chamada se a atualização da página falhar.</summary>
      <returns>A função JavaScript a ser chamada se a atualização da página falhar.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.OnSuccess">
      <summary>Obtém ou define a função JavaScript a ser chamada após a página ser atualizada com êxito.</summary>
      <returns>A função JavaScript a ser chamada após a atualização bem-sucedida da página.</returns>
    </member>
    <member name="M:System.Web.Mvc.Ajax.AjaxOptions.ToUnobtrusiveHtmlAttributes">
      <summary>Retorna as opções de Ajax como uma coleção de atributos HTML para oferecer suporte discreto a JavaScript.</summary>
      <returns>As opções de Ajax como uma coleção de atributos HTML para oferecer suporte discreto a JavaScript.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.UpdateTargetId">
      <summary>Obtém ou define a ID do elemento DOM a ser atualizado usando a resposta do servidor.</summary>
      <returns>A ID do elemento DOM a ser atualizado.</returns>
    </member>
    <member name="P:System.Web.Mvc.Ajax.AjaxOptions.Url">
      <summary>Obtém ou define a URL para a qual será feita a solicitação.</summary>
      <returns>A URL para qual será feita a solicitação.</returns>
    </member>
    <member name="T:System.Web.Mvc.Ajax.InsertionMode">
      <summary>Enumera os modos de inserção do script AJAX.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertAfter">
      <summary>Insere após o elemento.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.InsertBefore">
      <summary>Insere antes do elemento.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.Replace">
      <summary>Substitui o elemento.</summary>
    </member>
    <member name="F:System.Web.Mvc.Ajax.InsertionMode.ReplaceWith">
      <summary>Substitui todo o elemento.</summary>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncActionDescriptor">
      <summary>Fornece informações sobre um método de ação assíncrono, como seu nome, controlador, parâmetros, atributos e filtros.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Async.AsyncActionDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Invoca o método de ação assíncrono usando os parâmetros e o contexto de controlador especificados.</summary>
      <returns>Um objeto que contém o resultado de uma chamada assíncrona.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="parameters">Os parâmetros do método de ação.</param>
      <param name="callback">O método de retorno de chamada.</param>
      <param name="state">Um objeto que contém informações a serem usadas pelo método de retorno de chamada.Este parâmetro pode ser nulo.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Retorna o resultado de uma operação assíncrona.</summary>
      <returns>O resultado de uma operação assíncrona.</returns>
      <param name="asyncResult">Um objeto que representa o status de uma operação assíncrona.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Executa o método de ação assíncrono usando os parâmetros e o contexto de controlador especificados.</summary>
      <returns>O resultado da execução do método de ação assíncrono.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="parameters">Os parâmetros do método de ação.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncControllerActionInvoker">
      <summary>Representa uma classe responsável por invocar os métodos de ação de um controlador assíncrono.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Async.AsyncControllerActionInvoker" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>Invoca o método de ação assíncrono usando o contexto de controlador, o nome da ação, o método de retorno de chamada e o estado especificados.</summary>
      <returns>Um objeto que contém o resultado de uma operação assíncrona.Implementa<see cref="M:System.Web.Mvc.Async.IAsyncActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)" /></returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionName">O nome da ação.</param>
      <param name="callback">O método de retorno de chamada.</param>
      <param name="state">Um objeto que contém informações a serem usadas pelo método de retorno de chamada.Este parâmetro pode ser nulo.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethod(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Invoca o método de ação assíncrono usando o contexto de controlador, o descritor da ação, os parâmetros, o método de retorno de chamada e o estado especificados.</summary>
      <returns>Um objeto que contém o resultado de uma operação assíncrona.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
      <param name="parameters">Os parâmetros do método de ação assíncrono.</param>
      <param name="callback">O método de retorno de chamada.</param>
      <param name="state">Um objeto que contém informações a serem usadas pelo método de retorno de chamada.Este parâmetro pode ser nulo.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.BeginInvokeActionMethodWithFilters(System.Web.Mvc.ControllerContext,System.Collections.Generic.IList{System.Web.Mvc.IActionFilter},System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Invoca o método de ação assíncrono usando o contexto de controlador, os filtros, o descritor da ação, os parâmetros, o método de retorno de chamada e o estado especificados.</summary>
      <returns>Um objeto que contém o resultado de uma operação assíncrona.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="filters">Os filtros.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
      <param name="parameters">Os parâmetros do método de ação assíncrono.</param>
      <param name="callback">O método de retorno de chamada.</param>
      <param name="state">Um objeto que contém informações a serem usadas pelo método de retorno de chamada.Este parâmetro pode ser nulo.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>Cancela a ação.</summary>
      <returns>verdadeiro se a ação foi cancelada; caso contrário, falso.</returns>
      <param name="asyncResult">O objeto definido pelo usuário que qualifica ou contém informações sobre uma operação assíncrona.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethod(System.IAsyncResult)">
      <summary>Cancela a ação.</summary>
      <returns>verdadeiro se a ação foi cancelada; caso contrário, falso.</returns>
      <param name="asyncResult">O objeto definido pelo usuário que qualifica ou contém informações sobre uma operação assíncrona.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.EndInvokeActionMethodWithFilters(System.IAsyncResult)">
      <summary>Cancela a ação.</summary>
      <returns>verdadeiro se a ação foi cancelada; caso contrário, falso.</returns>
      <param name="asyncResult">O objeto definido pelo usuário que qualifica ou contém informações sobre uma operação assíncrona.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncControllerActionInvoker.GetControllerDescriptor(System.Web.Mvc.ControllerContext)">
      <summary>Retorna o descritor do controlador.</summary>
      <returns>O descritor do controlador.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.AsyncManager">
      <summary>Fornece operações assíncronas para a classe <see cref="T:System.Web.Mvc.AsyncController" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Async.AsyncManager" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.#ctor(System.Threading.SynchronizationContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.Async.AsyncManager" /> usando o contexto de sincronização.</summary>
      <param name="syncContext">O contexto de sincronização.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Finish">
      <summary>Notifica o ASP.NET de que todas as operações assíncronas estão concluídas.</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.AsyncManager.Finished">
      <summary>Ocorre quando o método <see cref="M:System.Web.Mvc.Async.AsyncManager.Finish" /> é chamado.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.OutstandingOperations">
      <summary>Obtém a quantidade de operações pendentes.</summary>
      <returns>A quantidade de operações pendentes.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Parameters">
      <summary>Obtém os parâmetros passados ao método de conclusão assíncrono.</summary>
      <returns>Os parâmetros passados ao método de conclusão assíncrono.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.AsyncManager.Sync(System.Action)">
      <summary>Executa um retorno de chamada no contexto de sincronização atual.</summary>
      <param name="action">A ação assíncrona.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.AsyncManager.Timeout">
      <summary>Obtém ou define o valor de tempo limite assíncrono, em milissegundos.</summary>
      <returns>O valor de tempo limite assíncrono, em milissegundos.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncActionInvoker">
      <summary>Define a interface para um chamador de ação, usada para invocar uma ação assíncrona em resposta a uma solicitação HTTP.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.BeginInvokeAction(System.Web.Mvc.ControllerContext,System.String,System.AsyncCallback,System.Object)">
      <summary>Invoca a ação especificada.</summary>
      <returns>O estado do resultado assíncrono.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionName">O nome da ação assíncrona.</param>
      <param name="callback">O método de retorno de chamada.</param>
      <param name="state">O estado.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvoker.EndInvokeAction(System.IAsyncResult)">
      <summary>Cancela a ação assíncrona.</summary>
      <returns>verdadeiro se o método assíncrono puder ser cancelado; caso contrário, falso.</returns>
      <param name="asyncResult">O resultado assíncrono.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncActionInvokerFactory">
      <summary>Usado para criar uma instância de <see cref="T:System.Web.Mvc.Async.IAsyncActionInvoker" /> da solicitação atual.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncActionInvokerFactory.CreateInstance">
      <summary>Cria uma instância do invocador de ação assíncrono da solicitação atual.</summary>
      <returns>O <see cref="T:System.Web.Mvc.Async.IAsyncActionInvoker" /> criado.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncController">
      <summary>Define os métodos necessários para um controlador assíncrono.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.BeginExecute(System.Web.Routing.RequestContext,System.AsyncCallback,System.Object)">
      <summary>Executa o contexto de solicitação especificado.</summary>
      <returns>O estado da operação assíncrona.</returns>
      <param name="requestContext">O contexto da solicitação.</param>
      <param name="callback">O método de retorno de chamada assíncrono.</param>
      <param name="state">O estado.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.IAsyncController.EndExecute(System.IAsyncResult)">
      <summary>Termina a operação assíncrona.</summary>
      <param name="asyncResult">O resultado assíncrono.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.IAsyncManagerContainer">
      <summary>Fornece um contêiner para o objeto gerenciador assíncrono.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.IAsyncManagerContainer.AsyncManager">
      <summary>Obtém o objeto gerenciador assíncrono.</summary>
      <returns>O objeto gerenciador assíncrono.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.OperationCounter">
      <summary>Fornece um contêiner que mantém uma contagem de operações assíncronas pendentes.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Async.OperationCounter" />.</summary>
    </member>
    <member name="E:System.Web.Mvc.Async.OperationCounter.Completed">
      <summary>Ocorre quando um método assíncrono é concluído.</summary>
    </member>
    <member name="P:System.Web.Mvc.Async.OperationCounter.Count">
      <summary>Obtém a contagem de operações.</summary>
      <returns>A contagem de operações.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement">
      <summary>Reduz a contagem de operações em 1.</summary>
      <returns>A contagem de operações atualizada.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Decrement(System.Int32)">
      <summary>Reduz o valor especificado da contagem de operações.</summary>
      <returns>A contagem de operações atualizada.</returns>
      <param name="value">A quantidade de operações a ser reduzida da contagem.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment">
      <summary>Incrementa em um a contagem de operações.</summary>
      <returns>A contagem de operações atualizada.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.OperationCounter.Increment(System.Int32)">
      <summary>Incrementa o valor especificado na contagem de operações.</summary>
      <returns>A contagem de operações atualizada.</returns>
      <param name="value">A quantidade de operações a ser incrementada na contagem.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor">
      <summary>Fornece informações sobre um método de ação assíncrono, como seu nome, controlador, parâmetros, atributos e filtros.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor" />.</summary>
      <param name="asyncMethodInfo">Um objeto que contém informações sobre o método que inicia a operação assíncrona (o método cujo nome termina com "Asynch").</param>
      <param name="completedMethodInfo">Um objeto que contém informações sobre o método de conclusão (cujo nome termina com "Completed").</param>
      <param name="actionName">O nome da ação.</param>
      <param name="controllerDescriptor">O descritor do controlador.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ActionName">
      <summary>Obtém o nome do método de ação.</summary>
      <returns>O nome do método de ação.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.AsyncMethodInfo">
      <summary>Obtém as informações do método para o método de ação assíncrono.</summary>
      <returns>As informações do método para o método de ação assíncrono.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Inicia a execução do método de ação assíncrono usando os parâmetros especificados e o contexto do controlador.</summary>
      <returns>Um objeto que contém o resultado de uma chamada assíncrona.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="parameters">Os parâmetros do método de ação.</param>
      <param name="callback">O método de retorno de chamada.</param>
      <param name="state">Um objeto que contém informações a serem usadas pelo método de retorno de chamada.Este parâmetro pode ser nulo.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.CompletedMethodInfo">
      <summary>Obtém as informações do método para o método de conclusão assíncrono.</summary>
      <returns>As informações do método para o método de conclusão assíncrono.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.ControllerDescriptor">
      <summary>Obtém o descritor do controlador para o método de ação assíncrono.</summary>
      <returns>O descritor do controlador para o método de ação assíncrono.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Retorna o resultado de uma operação assíncrona.</summary>
      <returns>O resultado de uma operação assíncrona.</returns>
      <param name="asyncResult">Um objeto que representa o status de uma operação assíncrona.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Retorna uma matriz de atributos personalizados definidos para esse membro, excluindo atributos nomeados.</summary>
      <returns>Uma matriz de atributos personalizados ou uma matriz vazia se não existirem atributos personalizados.</returns>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Retorna uma matriz de atributos personalizados definidos para esse membro, identificados por tipo.</summary>
      <returns>Uma matriz de atributos personalizados ou uma matriz vazia se não existirem atributos personalizados do tipo especificado.</returns>
      <param name="attributeType">O tipo dos atributos personalizados a serem retornados.</param>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Obtém os atributos do filtro.</summary>
      <returns>Os atributos do filtro.</returns>
      <param name="useCache">Use o sinalizador de cache.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetParameters">
      <summary>Retorna os parâmetros do método de ação.</summary>
      <returns>Os parâmetros do método de ação.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.GetSelectors">
      <summary>Retorna os seletores do método de ação.</summary>
      <returns>Os seletores do método de ação.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Determina se uma ou mais instâncias de um tipo de atributo especificado estão definidas para esse membro de ação.</summary>
      <returns>verdadeiro se um atributo do tipo que for representado por <paramref name="attributeType" /> estiver definido para este membro; caso contrário, falso.</returns>
      <param name="attributeType">O tipo do atributo personalizado.</param>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.MethodInfo"></member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncActionDescriptor.UniqueId">
      <summary>Obtém a ID exclusiva da inicialização lenta da instância desta classe.</summary>
      <returns>A ID exclusiva da inicialização lenta da instância desta classe.</returns>
    </member>
    <member name="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor">
      <summary>Encapsula informações que descrevem um controlador assíncrono, como seu nome, tipo e ações.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.#ctor(System.Type)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor" />.</summary>
      <param name="controllerType">O tipo do controlador.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.ControllerType">
      <summary>Obtém o tipo do controlador.</summary>
      <returns>O tipo do controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.FindAction(System.Web.Mvc.ControllerContext,System.String)">
      <summary>Encontra um método de ação usando o nome e contexto de controlador especificados.</summary>
      <returns>As informações sobre o método de ação.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionName">O nome da ação.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCanonicalActions">
      <summary>Retorna uma lista dos descritores de método de ação no controlador.</summary>
      <returns>Uma lista dos descritores de método de ação no controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Retorna atributos personalizados definidos para esse membro, excluindo atributos nomeados.</summary>
      <returns>Uma matriz de atributos personalizados ou uma matriz vazia se não existirem atributos personalizados.</returns>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Retorna atributos personalizados de um tipo especificado que estão definidos para esse membro, excluindo atributos nomeados.</summary>
      <returns>Uma matriz de atributos personalizados ou uma matriz vazia se não existirem atributos personalizados.</returns>
      <param name="attributeType">O tipo dos atributos personalizados.</param>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Obtém os atributos do filtro.</summary>
      <returns>Os atributos do filtro.</returns>
      <param name="useCache">verdadeiro para usar em cache; caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.ReflectedAsyncControllerDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Retorna um valor que indica se uma ou mais instâncias de um atributo personalizado especificado estão definidas para esse membro.</summary>
      <returns>verdadeiro se um atributo do tipo que for representado por <paramref name="attributeType" /> estiver definido para este membro; caso contrário, falso.</returns>
      <param name="attributeType">O tipo do atributo personalizado.</param>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.SynchronousOperationException">
      <summary>Representa uma exceção ocorrida durante o processamento assíncrono de uma solicitação HTTP em um aplicativo ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" /> usando uma mensagem fornecida pelo sistema.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" /> usando a mensagem especificada.</summary>
      <param name="message">A mensagem que descreve a exceção.O chamador desse construtor deve garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.SynchronousOperationException.#ctor(System.String,System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.Async.SynchronousOperationException" /> usando uma mensagem de erro especificada e uma referência à exceção interna que causa esta exceção.</summary>
      <param name="message">A mensagem que descreve a exceção.O chamador desse construtor deve garantir que esta cadeia de caracteres foi localizada para a cultura do sistema atual.</param>
      <param name="innerException">A exceção que causa a exceção atual.Se o parâmetro <paramref name="innerException" /> não for nulo, a exceção atual será criada em um bloco de captura que lida com a exceção interna.</param>
    </member>
    <member name="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor">
      <summary>Quando um método de ação retorna Task ou Task&lt;T&gt;, <see cref="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor" /> fornece informações sobre a ação.</summary>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.#ctor(System.Reflection.MethodInfo,System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Async.TaskAsyncActionDescriptor" />.</summary>
      <param name="taskMethodInfo">As informações do método de tarefa.</param>
      <param name="actionName">O nome da ação.</param>
      <param name="controllerDescriptor">O descritor do controlador.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.ActionName">
      <summary>Obtém o nome do método de ação.</summary>
      <returns>O nome do método de ação.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.BeginExecute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>Invoca o método de ação assíncrono usando os parâmetros, retorno de chamada do contexto do controlador e estado especificados.</summary>
      <returns>Um objeto que contém o resultado de uma chamada assíncrona.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="parameters">Os parâmetros do método de ação.</param>
      <param name="callback">O método de retorno de chamada opcional.</param>
      <param name="state">Um objeto que contém informações a serem usadas pelo método de retorno de chamada.Este parâmetro pode ser nulo.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.ControllerDescriptor">
      <summary>Obtém o descritor do controlador.</summary>
      <returns>O descritor do controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.EndExecute(System.IAsyncResult)">
      <summary>Termina a operação assíncrona.</summary>
      <returns>O resultado de uma operação assíncrona.</returns>
      <param name="asyncResult">Um objeto que representa o status de uma operação assíncrona.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.Execute(System.Web.Mvc.ControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Executa o método de ação assíncrono.</summary>
      <returns>O resultado da execução do método de ação assíncrono.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="parameters">Os parâmetros do método de ação.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Boolean)">
      <summary>Retorna uma matriz de atributos personalizados definidos para esse membro, excluindo atributos nomeados.</summary>
      <returns>Uma matriz de atributos personalizados ou uma matriz vazia se não existirem atributos personalizados.</returns>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetCustomAttributes(System.Type,System.Boolean)">
      <summary>Retorna uma matriz de atributos personalizados definidos para esse membro, identificados por tipo.</summary>
      <returns>Uma matriz de atributos personalizados ou uma matriz vazia se não existirem atributos personalizados.</returns>
      <param name="attributeType">O tipo dos atributos personalizados.</param>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetFilterAttributes(System.Boolean)">
      <summary>Retorna uma matriz de todos os atributos personalizados aplicados a este membro.</summary>
      <returns>Uma matriz que contém todos os atributos personalizados aplicados a este membro, ou uma matriz com nenhum elemento se não houver atributos definidos.</returns>
      <param name="useCache">verdadeiro para pesquisar a cadeia de herança deste membro para encontrar os atributos; caso contrário, falso.</param>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetParameters">
      <summary>Retorna os parâmetros do método de ação assíncrono.</summary>
      <returns>Os parâmetros do método de ação assíncrono.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.GetSelectors">
      <summary>Retorna os seletores do método de ação assíncrono.</summary>
      <returns>Os seletores do método de ação assíncrono.</returns>
    </member>
    <member name="M:System.Web.Mvc.Async.TaskAsyncActionDescriptor.IsDefined(System.Type,System.Boolean)">
      <summary>Retorna um valor que indica se uma ou mais instâncias de um atributo personalizado especificado estão definidas para esse membro.</summary>
      <returns>Um valor que indica se uma ou mais instâncias de um atributo personalizado especificado estão definidas para esse membro.</returns>
      <param name="attributeType">O tipo do atributo personalizado.</param>
      <param name="inherit">verdadeiro para pesquisar a cadeia hierárquica em busca de atributo herdado personalizado, caso contrário, falso.</param>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.MethodInfo"></member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.TaskMethodInfo">
      <summary>Obtém informações para a tarefa assíncrona.</summary>
      <returns>As informações para a tarefa assíncrona.</returns>
    </member>
    <member name="P:System.Web.Mvc.Async.TaskAsyncActionDescriptor.UniqueId">
      <summary>Obtém a ID exclusiva para a tarefa.</summary>
      <returns>A ID exclusiva para a tarefa.</returns>
    </member>
    <member name="T:System.Web.Mvc.Filters.AuthenticationChallengeContext">
      <summary>Representa um contexto de desafio de autenticação contendo informações para executar um desafio de autenticação.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationChallengeContext.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Filters.AuthenticationChallengeContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationChallengeContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Web.Mvc.ActionResult)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Filters.AuthenticationChallengeContext" />.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionDescriptor">Os métodos de ação associados ao desafio.</param>
      <param name="result">A resposta do desafio.</param>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationChallengeContext.ActionDescriptor">
      <summary>Obtém ou define o descritor da ação.</summary>
      <returns>O descritor de ação associado ao desafio.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationChallengeContext.Result">
      <summary>Obtém ou define o resultado da ação a ser executado.</summary>
      <returns>A resposta do desafio.</returns>
    </member>
    <member name="T:System.Web.Mvc.Filters.AuthenticationContext">
      <summary>Representa um contexto de autenticação contendo informações para executar a autenticação.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationContext.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Filters.AuthenticationContext" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.AuthenticationContext.#ctor(System.Web.Mvc.ControllerContext,System.Web.Mvc.ActionDescriptor,System.Security.Principal.IPrincipal)"></member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationContext.ActionDescriptor">
      <summary>Obtém ou define o descritor da ação.</summary>
      <returns>Os métodos de ação associados à autenticação.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationContext.Principal">
      <summary>Obtém ou define a entidade de segurança autenticada atualmente.</summary>
      <returns>As credenciais de segurança para a autenticação.</returns>
    </member>
    <member name="P:System.Web.Mvc.Filters.AuthenticationContext.Result">
      <summary>Obtém ou define o resultado do erro, que indica que houve uma tentativa de autenticação e ela falhou.</summary>
      <returns>O resultado da autenticação.</returns>
    </member>
    <member name="T:System.Web.Mvc.Filters.IAuthenticationFilter">
      <summary>Define um filtro que executa a autenticação.</summary>
    </member>
    <member name="M:System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)">
      <summary>Autentica a solicitação.</summary>
      <param name="filterContext">O contexto a ser usado para autenticação.</param>
    </member>
    <member name="M:System.Web.Mvc.Filters.IAuthenticationFilter.OnAuthenticationChallenge(System.Web.Mvc.Filters.AuthenticationChallengeContext)">
      <summary>Adiciona um desafio de autenticação ao <see cref="T:System.Web.Mvc.ActionResult" /> atual.</summary>
      <param name="filterContext">O contexto a ser usado para o desafio de autenticação.</param>
    </member>
    <member name="T:System.Web.Mvc.Filters.IOverrideFilter">
      <summary>Define um filtro que substitui outros filtros.</summary>
    </member>
    <member name="P:System.Web.Mvc.Filters.IOverrideFilter.FiltersToOverride">
      <summary>Obtém o tipo de filtros a substituir.</summary>
      <returns>O filtro a substituir.</returns>
    </member>
    <member name="T:System.Web.Mvc.Html.ChildActionExtensions">
      <summary>Representa o suporte para chamar métodos de ação filha e renderizar o resultado embutido em uma exibição pai.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Invoca o método de ação filha especificado e retorna o resultado como uma cadeia de caracteres em HTML.</summary>
      <returns>O resultado da ação filha como uma cadeia de caracteres em HTML.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação a ser invocado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="htmlHelper" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="actionName" /> é nulo ou está vazio.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível encontrar os dados de caminho virtual necessários.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Invoca o método de ação filha especificado com os parâmetros especificados e retorna o resultado como uma cadeia de caracteres em HTML.</summary>
      <returns>O resultado da ação filha como uma cadeia de caracteres em HTML.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação a ser invocado.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.É possível usar <paramref name="routeValues" /> para fornecer os parâmetros que estão associados aos parâmetros do método de ação.O parâmetro <paramref name="routeValues" /> é mesclado com os valores de rota originais e substitui-os.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="htmlHelper" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="actionName" /> é nulo ou está vazio.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível encontrar os dados de caminho virtual necessários.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Invoca o método de ação filha especificado usando o nome do controlador especificado e retorna o resultado como uma cadeia de caracteres em HTML.</summary>
      <returns>O resultado da ação filha como uma cadeia de caracteres em HTML.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação a ser invocado.</param>
      <param name="controllerName">O nome do controlador que contém o método de ação.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="htmlHelper" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="actionName" /> é nulo ou está vazio.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível encontrar os dados de caminho virtual necessários.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Invoca o método de ação filha especificado usando os parâmetros e nome do controlador especificados e retorna o resultado como uma cadeia de caracteres em HTML.</summary>
      <returns>O resultado da ação filha como uma cadeia de caracteres em HTML.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação a ser invocado.</param>
      <param name="controllerName">O nome do controlador que contém o método de ação.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.É possível usar <paramref name="routeValues" /> para fornecer os parâmetros que estão associados aos parâmetros do método de ação.O parâmetro <paramref name="routeValues" /> é mesclado com os valores de rota originais e substitui-os.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="htmlHelper" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="actionName" /> é nulo ou está vazio.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível encontrar os dados de caminho virtual necessários.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Invoca o método de ação filha especificado usando os parâmetros e nome do controlador especificados e retorna o resultado como uma cadeia de caracteres em HTML.</summary>
      <returns>O resultado da ação filha como uma cadeia de caracteres em HTML.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação a ser invocado.</param>
      <param name="controllerName">O nome do controlador que contém o método de ação.</param>
      <param name="routeValues">Um dicionário que contém os parâmetros para uma rota.É possível usar <paramref name="routeValues" /> para fornecer os parâmetros que estão associados aos parâmetros do método de ação.O parâmetro <paramref name="routeValues" /> é mesclado com os valores de rota originais e substitui-os.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="htmlHelper" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="actionName" /> é nulo ou está vazio.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível encontrar os dados de caminho virtual necessários.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.Action(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Invoca o método de ação filha especificado usando os parâmetros especificados e retorna o resultado como uma cadeia de caracteres em HTML.</summary>
      <returns>O resultado da ação filha como uma cadeia de caracteres em HTML.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação a ser invocado.</param>
      <param name="routeValues">Um dicionário que contém os parâmetros para uma rota.É possível usar <paramref name="routeValues" /> para fornecer os parâmetros que estão associados aos parâmetros do método de ação.O parâmetro <paramref name="routeValues" /> é mesclado com os valores de rota originais e substitui-os.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="htmlHelper" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="actionName" /> é nulo ou está vazio.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível encontrar os dados de caminho virtual necessários.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Invoca o método de ação filha especificado e processa o resultado embutido na exibição pai.</summary>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação filha a ser invocado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="htmlHelper" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="actionName" /> é nulo ou está vazio.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível encontrar os dados de caminho virtual necessários.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Invoca o método de ação filha especificado usando os parâmetros especificados e renderiza o resultado embutido na exibição pai.</summary>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação filha a ser invocado.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.É possível usar <paramref name="routeValues" /> para fornecer os parâmetros que estão associados aos parâmetros do método de ação.O parâmetro <paramref name="routeValues" /> é mesclado com os valores de rota originais e substitui-os.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="htmlHelper" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="actionName" /> é nulo ou está vazio.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível encontrar os dados de caminho virtual necessários.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Invoca o método de ação filha especificado usando o nome de controlador especificado e renderiza o resultado embutido na exibição pai.</summary>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação filha a ser invocado.</param>
      <param name="controllerName">O nome do controlador que contém o método de ação.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="htmlHelper" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="actionName" /> é nulo ou está vazio.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível encontrar os dados de caminho virtual necessários.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Invoca o método de ação filha especificado usando os parâmetros especificados e nome de controlador e renderiza o resultado embutido na exibição pai.</summary>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação filha a ser invocado.</param>
      <param name="controllerName">O nome do controlador que contém o método de ação.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.É possível usar <paramref name="routeValues" /> para fornecer os parâmetros que estão associados aos parâmetros do método de ação.O parâmetro <paramref name="routeValues" /> é mesclado com os valores de rota originais e substitui-os.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="htmlHelper" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="actionName" /> é nulo ou está vazio.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível encontrar os dados de caminho virtual necessários.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Invoca o método de ação filha especificado usando os parâmetros especificados e nome de controlador e renderiza o resultado embutido na exibição pai.</summary>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação filha a ser invocado.</param>
      <param name="controllerName">O nome do controlador que contém o método de ação.</param>
      <param name="routeValues">Um dicionário que contém os parâmetros para uma rota.É possível usar <paramref name="routeValues" /> para fornecer os parâmetros que estão associados aos parâmetros do método de ação.O parâmetro <paramref name="routeValues" /> é mesclado com os valores de rota originais e substitui-os.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="htmlHelper" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="actionName" /> é nulo ou está vazio.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível encontrar os dados de caminho virtual necessários.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ChildActionExtensions.RenderAction(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Invoca o método de ação filha especificado usando os parâmetros especificados e renderiza o resultado embutido na exibição pai.</summary>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação filha a ser invocado.</param>
      <param name="routeValues">Um dicionário que contém os parâmetros para uma rota.É possível usar <paramref name="routeValues" /> para fornecer os parâmetros que estão associados aos parâmetros do método de ação.O parâmetro <paramref name="routeValues" /> é mesclado com os valores de rota originais e substitui-os.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="htmlHelper" /> é nulo.</exception>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="actionName" /> é nulo ou está vazio.</exception>
      <exception cref="T:System.InvalidOperationException">Não foi possível encontrar os dados de caminho virtual necessários.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayExtensions">
      <summary>Representa o suporte para renderizar valores de objetos como HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retorna uma marcação HTML para cada propriedade no objeto que é representado por uma expressão de cadeia de caracteres.</summary>
      <returns>A marcação HTML para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retorna uma marcação HTML para cada propriedade no objeto que é representado pela expressão de cadeia de caracteres, usando dados de visualização adicionais.</summary>
      <returns>A marcação HTML para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="additionalViewData">Um objeto anônimo que pode conter dados de visualização adicionais que serão mesclados na instância <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> criada para o modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Retorna uma marcação HTML para cada propriedade no objeto que é representado pela expressão, usando o modelo especificado.</summary>
      <returns>A marcação HTML para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="templateName">O nome do modelo usado para renderizar o objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Retorna uma marcação HTML para cada propriedade no objeto que é representado pela expressão, usando o modelo especificado e dados de visualização adicionais.</summary>
      <returns>A marcação HTML para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="templateName">O nome do modelo usado para renderizar o objeto.</param>
      <param name="additionalViewData">Um objeto anônimo que pode conter dados de visualização adicionais que serão mesclados na instância <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> criada para o modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Retorna uma marcação HTML para cada propriedade no objeto que é representado pela expressão, usando o modelo especificado e a ID do campo HTML.</summary>
      <returns>A marcação HTML para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="templateName">O nome do modelo usado para renderizar o objeto.</param>
      <param name="htmlFieldName">Uma cadeia de caracteres usada para desambiguar os nomes de elementos HTML de entrada que são renderizados para as propriedades que têm o mesmo nome.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.Display(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>Retorna uma marcação HTML para cada propriedade no objeto que é representado pela expressão, usando o modelo especificado, a ID do campo HTML e dados de visualização adicionais.</summary>
      <returns>A marcação HTML para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="templateName">O nome do modelo usado para renderizar o objeto.</param>
      <param name="htmlFieldName">Uma cadeia de caracteres usada para desambiguar os nomes de elementos HTML de entrada que são renderizados para as propriedades que têm o mesmo nome.</param>
      <param name="additionalViewData">Um objeto anônimo que pode conter dados de visualização adicionais que serão mesclados na instância <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> criada para o modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Retorna uma marcação HTML para cada propriedade no objeto que é representado pela expressão <see cref="T:System.Linq.Expressions.Expression" />.</summary>
      <returns>A marcação HTML para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Retorna uma cadeia de caracteres que contém cada valor de propriedade no objeto que é representado pela expressão especificada, usando dados de visualização adicionais.</summary>
      <returns>A marcação HTML para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="additionalViewData">Um objeto anônimo que pode conter dados de visualização adicionais que serão mesclados na instância <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> criada para o modelo.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Retorna uma cadeia de caracteres que contém cada valor de propriedade no objeto que é representado por <see cref="T:System.Linq.Expressions.Expression" />, usando o modelo especificado.</summary>
      <returns>A marcação HTML para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="templateName">O nome do modelo usado para renderizar o objeto.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Retorna uma cadeia de caracteres que contém cada valor de propriedade no objeto que é representado pela expressão especificada, usando o modelo especificado e dados de visualização adicionais.</summary>
      <returns>A marcação HTML para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="templateName">O nome do modelo usado para renderizar o objeto.</param>
      <param name="additionalViewData">Um objeto anônimo que pode conter dados de visualização adicionais que serão mesclados na instância <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> criada para o modelo.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>Retorna uma marcação HTML para cada propriedade no objeto que é representado por <see cref="T:System.Linq.Expressions.Expression" />, usando o modelo especificado e a ID do campo HTML.</summary>
      <returns>A marcação HTML para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="templateName">O nome do modelo usado para renderizar o objeto.</param>
      <param name="htmlFieldName">Uma cadeia de caracteres usada para desambiguar os nomes de elementos HTML de entrada que são renderizados para as propriedades que têm o mesmo nome.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)">
      <summary>Retorna uma marcação HTML para cada propriedade no objeto que é representado pela expressão especificada, usando o modelo, uma ID do campo HTML e dados de visualização adicionais.</summary>
      <returns>A marcação HTML para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="templateName">O nome do modelo usado para renderizar o objeto.</param>
      <param name="htmlFieldName">Uma cadeia de caracteres usada para desambiguar os nomes de elementos HTML de entrada que são renderizados para as propriedades que têm o mesmo nome.</param>
      <param name="additionalViewData">Um objeto anônimo que pode conter dados de visualização adicionais que serão mesclados na instância <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> criada para o modelo.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Retorna marcação HTML para cada propriedade do modelo.</summary>
      <returns>A marcação HTML para cada propriedade do modelo.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Retorna uma marcação HTML para cada propriedade do modelo usando dados de visualização adicionais.</summary>
      <returns>A marcação HTML para cada propriedade do modelo.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="additionalViewData">Um objeto anônimo que pode conter dados de visualização adicionais que serão mesclados na instância <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> criada para o modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retorna uma marcação HTML para cada propriedade do modelo usando o modelo especificado.</summary>
      <returns>A marcação HTML para cada propriedade do modelo.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="templateName">O nome do modelo usado para renderizar o objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retorna uma marcação HTML para cada propriedade do modelo usando o modelo especificado e dados de visualização adicionais.</summary>
      <returns>A marcação HTML para cada propriedade do modelo.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="templateName">O nome do modelo usado para renderizar o objeto.</param>
      <param name="additionalViewData">Um objeto anônimo que pode conter dados de visualização adicionais que serão mesclados na instância <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> criada para o modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Retorna uma marcação HTML para cada propriedade do modelo usando o modelo especificado e a ID do campo HTML.</summary>
      <returns>A marcação HTML para cada propriedade do modelo.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="templateName">O nome do modelo usado para renderizar o objeto.</param>
      <param name="htmlFieldName">Uma cadeia de caracteres usada para desambiguar os nomes de elementos HTML de entrada que são renderizados para as propriedades que têm o mesmo nome.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayExtensions.DisplayForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Retorna uma marcação HTML para cada propriedade do modelo usando o modelo especificado, uma ID do campo HTML e dados de visualização adicionais.</summary>
      <returns>A marcação HTML para cada propriedade do modelo.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="templateName">O nome do modelo usado para renderizar o objeto.</param>
      <param name="htmlFieldName">Uma cadeia de caracteres usada para desambiguar os nomes de elementos HTML de entrada que são renderizados para as propriedades que têm o mesmo nome.</param>
      <param name="additionalViewData">Um objeto anônimo que pode conter dados de visualização adicionais que serão mesclados na instância <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> criada para o modelo.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayNameExtensions">
      <summary>Fornece um mecanismo para obter nomes de exibição.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayName(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Obtém o nome de exibição.</summary>
      <returns>O nome de exibição.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém o nome a ser exibido.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor``2(System.Web.Mvc.HtmlHelper{System.Collections.Generic.IEnumerable{``0}},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Obtém o nome de exibição do modelo.</summary>
      <returns>O nome de exibição do modelo.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém o nome a ser exibido.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Obtém o nome de exibição do modelo.</summary>
      <returns>O nome de exibição do modelo.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém o nome a ser exibido.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayNameExtensions.DisplayNameForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Obtém o nome de exibição do modelo.</summary>
      <returns>O nome de exibição do modelo.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.DisplayTextExtensions">
      <summary>Fornece uma maneira de renderizar valores de objeto como HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayText(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retorna uma marcação HTML para cada propriedade no objeto que é representado pela expressão especificada.</summary>
      <returns>A marcação HTML para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="name">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.DisplayTextExtensions.DisplayTextFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Retorna uma marcação HTML para cada propriedade no objeto que é representado pela expressão especificada.</summary>
      <returns>A marcação HTML para cada propriedade.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TResult">O tipo do resultado.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.EditorExtensions">
      <summary>Representa o suporte ao elemento de entrada HTML em um aplicativo.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retorna um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão.</summary>
      <returns>Um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retorna um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão, usando dados de exibição adicionais.</summary>
      <returns>Um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="additionalViewData">Um objeto anônimo que pode conter dados de visualização adicionais que serão mesclados na instância <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> criada para o modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Retorna um elemento HTML de entrada para cada propriedade no objeto representado pela expressão, usando o modelo especificado.</summary>
      <returns>Um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="templateName">O nome do modelo a ser usado para renderizar o objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Retorna um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão, usando o modelo e dados de exibição adicionais especificados.</summary>
      <returns>Um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="templateName">O nome do modelo a ser usado para renderizar o objeto.</param>
      <param name="additionalViewData">Um objeto anônimo que pode conter dados de visualização adicionais que serão mesclados na instância <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> criada para o modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Retorna um elemento HTML de entrada para cada propriedade no objeto representado pela expressão, usando o modelo e o nome do campo HTML especificados.</summary>
      <returns>Um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="templateName">O nome do modelo a ser usado para renderizar o objeto.</param>
      <param name="htmlFieldName">Uma cadeia de caracteres usada para desambiguar os nomes de elementos HTML de entrada que são renderizados para as propriedades que têm o mesmo nome.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.Editor(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object)">
      <summary>Retorna um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão, usando o modelo, nome de campo HTML e dados de exibição adicionais especificados.</summary>
      <returns>Um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="templateName">O nome do modelo a ser usado para renderizar o objeto.</param>
      <param name="htmlFieldName">Uma cadeia de caracteres usada para desambiguar os nomes de elementos HTML de entrada que são renderizados para as propriedades que têm o mesmo nome.</param>
      <param name="additionalViewData">Um objeto anônimo que pode conter dados de visualização adicionais que serão mesclados na instância <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> criada para o modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Retorna um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão <see cref="T:System.Linq.Expressions.Expression" />.</summary>
      <returns>Um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Retorna um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão, usando dados de exibição adicionais.</summary>
      <returns>Um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="additionalViewData">Um objeto anônimo que pode conter dados de visualização adicionais que serão mesclados na instância <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> criada para o modelo.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Retorna um elemento HTML de entrada para cada propriedade no objeto representado pela expressão <see cref="T:System.Linq.Expressions.Expression" />, usando o modelo especificado.</summary>
      <returns>Um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="templateName">O nome do modelo a ser usado para renderizar o objeto.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Retorna um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão, usando o modelo e dados de exibição adicionais especificados.</summary>
      <returns>Um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="templateName">O nome do modelo a ser usado para renderizar o objeto.</param>
      <param name="additionalViewData">Um objeto anônimo que pode conter dados de visualização adicionais que serão mesclados na instância <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> criada para o modelo.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>Retorna um elemento HTML de entrada para cada propriedade no objeto representado pela expressão <see cref="T:System.Linq.Expressions.Expression" />, usando o modelo e o nome do campo HTML especificados.</summary>
      <returns>Um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="templateName">O nome do modelo a ser usado para renderizar o objeto.</param>
      <param name="htmlFieldName">Uma cadeia de caracteres usada para desambiguar os nomes de elementos HTML de entrada que são renderizados para as propriedades que têm o mesmo nome.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String,System.Object)">
      <summary>Retorna um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão, usando o modelo, nome de campo HTML e dados de exibição adicionais especificados.</summary>
      <returns>Um elemento HTML de entrada para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="templateName">O nome do modelo a ser usado para renderizar o objeto.</param>
      <param name="htmlFieldName">Uma cadeia de caracteres usada para desambiguar os nomes de elementos HTML de entrada que são renderizados para as propriedades que têm o mesmo nome.</param>
      <param name="additionalViewData">Um objeto anônimo que pode conter dados de visualização adicionais que serão mesclados na instância <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> criada para o modelo.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Retorna um elemento HTML de entrada para cada propriedade no modelo.</summary>
      <returns>Um elemento HTML de entrada para cada propriedade no modelo.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Retorna um elemento HTML de entrada para cada propriedade no modelo, usando dados de exibição adicionais.</summary>
      <returns>Um elemento HTML de entrada para cada propriedade no modelo.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="additionalViewData">Um objeto anônimo que pode conter dados de visualização adicionais que serão mesclados na instância <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> criada para o modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retorna um elemento HTML de entrada para cada propriedade no modelo, usando o modelo especificado.</summary>
      <returns>Um elemento HTML de entrada para cada propriedade no modelo e no modelo especificado.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="templateName">O nome do modelo a ser usado para renderizar o objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retorna um elemento HTML de entrada para cada propriedade no modelo, usando o modelo e os dados de exibição adicionais especificados.</summary>
      <returns>Um elemento HTML de entrada para cada propriedade no modelo.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="templateName">O nome do modelo a ser usado para renderizar o objeto.</param>
      <param name="additionalViewData">Um objeto anônimo que pode conter dados de visualização adicionais que serão mesclados na instância <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> criada para o modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Retorna um elemento HTML de entrada para cada propriedade no modelo, usando o nome do modelo e o nome do campo HTML especificados.</summary>
      <returns>Um elemento HTML de entrada para cada propriedade no modelo e no modelo nomeado.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="templateName">O nome do modelo a ser usado para renderizar o objeto.</param>
      <param name="htmlFieldName">Uma cadeia de caracteres usada para desambiguar os nomes de elementos HTML de entrada que são renderizados para as propriedades que têm o mesmo nome.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EditorExtensions.EditorForModel(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Retorna um elemento HTML de entrada para cada propriedade no modelo, usando o nome do modelo, o nome do campo HTML e os dados de exibição adicionais.</summary>
      <returns>Um elemento HTML de entrada para cada propriedade no modelo.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="templateName">O nome do modelo a ser usado para renderizar o objeto.</param>
      <param name="htmlFieldName">Uma cadeia de caracteres usada para desambiguar os nomes de elementos HTML de entrada que são renderizados para as propriedades que têm o mesmo nome.</param>
      <param name="additionalViewData">Um objeto anônimo que pode conter dados de visualização adicionais que serão mesclados na instância <see cref="T:System.Web.Mvc.ViewDataDictionary`1" /> criada para o modelo.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.EnumHelper">
      <summary>Fornece métodos para trabalhar com valores de enumeração e listas de seleção.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type)">
      <summary>Obtém uma lista de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente às constantes enum definidas no tipo fornecido.</summary>
      <returns>Uma lista para o <paramref name="type" /> especificado.</returns>
      <param name="type">O tipo a ser avaliado.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type,System.Enum)">
      <summary>Obtém uma lista de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente às constantes enum definidas no tipo fornecido.Também garante que <paramref name="value" /> fará uma viagem de ida e volta mesmo que não coincida com uma constante definida e configure a propriedade Selected como verdadeiro para um elemento na lista retornada -- coincidindo com <paramref name="value" />.</summary>
      <returns>Uma lista para o <paramref name="type" /> fornecido, possivelmente extendida para incluir um <paramref name="value" /> não reconhecido.</returns>
      <param name="type">O tipo a ser avaliado.</param>
      <param name="value">O valor do tipo a selecionar.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata)">
      <summary>Obtém uma lista de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente às constantes enum definidas nos metadados fornecidos.</summary>
      <returns>Uma lista para os metadados especificados.</returns>
      <param name="metadata">Os metadados do modelo para avaliar.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata,System.Enum)">
      <summary>Obtém uma lista de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> correspondente às constantes enum definidas nos metadados fornecidos.Também garante que o valor fará uma viagem de ida e volta mesmo que não coincida com uma constante definida e configure a propriedade Selected como verdadeiro para um elemento na lista retornada -- coincidindo com o valor.</summary>
      <returns>Uma lista para o <paramref name="metadata" /> fornecido, possivelmente extendida para incluir um <paramref name="value" /> não reconhecido.</returns>
      <param name="metadata">Os metadados a serem avaliados.</param>
      <param name="value">Valor do tipo de metadados a selecionar.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.IsValidForEnumHelper(System.Type)">
      <summary>Obtém um valor indicando se o tipo ou se uma expressão desse tipo fornecido for adequada para uso em chamadas <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type)" /> e <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</summary>
      <returns>verdadeiro se <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Type)" /> não gerar ao passar pelo tipo fornecido e <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> não gerar ao passar por uma expressão desse tipo; caso contrário, falso.</returns>
      <param name="type">O tipo a ser verificado.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.EnumHelper.IsValidForEnumHelper(System.Web.Mvc.ModelMetadata)">
      <summary>Obtém um valor indicando se os metadados fornecidos ou se uma expressão associada for adequada para uso em chamadas <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata)" /> e <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />.</summary>
      <returns>verdadeiro se <see cref="M:System.Web.Mvc.Html.EnumHelper.GetSelectList(System.Web.Mvc.ModelMetadata)" /> retornar sem gerar ao passar <see cref="T:System.Web.Mvc.ModelMetadata" /> fornecido e <see cref="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> não gerar ao passar expressão associada; caso contrário, falso.</returns>
      <param name="metadata">Os metadados a serem verificados.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.FormExtensions">
      <summary>Representa o suporte a HTML em um aplicativo.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.O formulário usa o método POST, e a solicitação é processada pelo método de ação da exibição.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura. </returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Grava uma tag &lt;form&gt; de abertura na resposta e inclui os valores de rota ao atributo de ação.O formulário usa o método POST, e a solicitação é processada pelo método de ação da exibição.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Grava uma tag &lt;form&gt; de abertura na resposta e define a tag de ação para o controlador e a ação especificados.O formulário usa o método POST.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Grava uma tag &lt;form&gt; de abertura na resposta e define a tag de ação para o controlador, a ação e os valores de rota especificados.O formulário usa o método POST.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>Grava uma tag &lt;form&gt; de abertura na resposta e define a tag de ação para o controlador, a ação e os valores de rota especificados.O formulário usa o método HTTP especificado.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="method">O método HTTP para o processamento do formulário, GET ou POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Grava uma tag &lt;form&gt; de abertura na resposta e define a tag de ação para o controlador, a ação e os valores de rota especificados.O formulário usa o método HTTP especificado e inclui os atributos HTML.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="method">O método HTTP para o processamento do formulário, GET ou POST.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod)">
      <summary>Grava uma tag &lt;form&gt; de abertura na resposta e define a tag de ação para o controlador e a ação especificados.O formulário usa o método HTTP especificado.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="method">O método HTTP para o processamento do formulário, GET ou POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Grava uma tag &lt;form&gt; de abertura na resposta e define a tag de ação para o controlador e a ação especificados.O formulário usa o método HTTP especificado e inclui os atributos HTML de um dicionário.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="method">O método HTTP para o processamento do formulário, GET ou POST.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Grava uma tag &lt;form&gt; de abertura na resposta e define a tag de ação para o controlador e a ação especificados.O formulário usa o método HTTP especificado e inclui os atributos HTML.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="method">O método HTTP para o processamento do formulário, GET ou POST.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Grava uma tag &lt;form&gt; de abertura na resposta e define a tag de ação para o controlador, a ação e os valores de rota especificados do dicionário de valores de rota.O formulário usa o método POST.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>Grava uma tag &lt;form&gt; de abertura na resposta e define a tag de ação para o controlador, a ação e os valores de rota especificados do dicionário de valores de rota.O formulário usa o método HTTP especificado.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="method">O método HTTP para o processamento do formulário, GET ou POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Grava uma tag &lt;form&gt; de abertura na resposta e define a tag de ação para o controlador, a ação e os valores de rota especificados do dicionário de valores de rota.O formulário usa o método HTTP especificado e inclui os atributos HTML do dicionário.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="actionName">O nome do método de ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="method">O método HTTP para o processamento do formulário, GET ou POST.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>Grava uma tag &lt;form&gt; de abertura na resposta e inclui os valores de rota do dicionário de valores de rota no atributo de ação.O formulário usa o método POST, e a solicitação é processada pelo método de ação da exibição.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.Quando o usuário enviar o formulário, a solicitação será processada pelo destino da rota.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.Quando o usuário enviar o formulário, a solicitação será processada pelo destino da rota.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.Quando o usuário enviar o formulário, a solicitação será processada pelo destino da rota.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.Quando o usuário enviar o formulário, a solicitação será processada pelo destino da rota.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="method">O método HTTP para o processamento do formulário, GET ou POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.Quando o usuário enviar o formulário, a solicitação será processada pelo destino da rota.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.Este objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="method">O método HTTP para o processamento do formulário, GET ou POST.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.Quando o usuário enviar o formulário, a solicitação será processada pelo destino da rota.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="method">O método HTTP para o processamento do formulário, GET ou POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.Quando o usuário enviar o formulário, a solicitação será processada pelo destino da rota.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="method">O método HTTP para o processamento do formulário, GET ou POST.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Object)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.Quando o usuário enviar o formulário, a solicitação será processada pelo destino da rota.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="method">O método HTTP para o processamento do formulário, GET ou POST.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.Quando o usuário enviar o formulário, a solicitação será processada pelo destino da rota.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.Quando o usuário enviar o formulário, a solicitação será processada pelo destino da rota.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota</param>
      <param name="method">O método HTTP para o processamento do formulário, GET ou POST.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.Quando o usuário enviar o formulário, a solicitação será processada pelo destino da rota.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="routeName">O nome da rota a ser usada para obter a URL de postagem de formulário.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota</param>
      <param name="method">O método HTTP para o processamento do formulário, GET ou POST.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
      <summary>Grava uma marca de &lt;formulário&gt; de abertura para a resposta.Quando o usuário enviar o formulário, a solicitação será processada pelo destino da rota.</summary>
      <returns>Uma marca de &lt;formulário&gt; de abertura.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota</param>
    </member>
    <member name="M:System.Web.Mvc.Html.FormExtensions.EndForm(System.Web.Mvc.HtmlHelper)">
      <summary>Renderiza uma marca de &lt;/formulário&gt; de fechamento para a resposta. </summary>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.InputExtensions">
      <summary>Representa o suporte a controles de entrada HTML em um aplicativo.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retorna um elemento de entrada de caixa de seleção usando o auxiliar HTML especificado e o nome do campo do formulário.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "caixa de seleção".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean)">
      <summary>Retorna um elemento de entrada de caixa de seleção usando o auxiliar HTML especificado, o nome do campo do formulário e um valor para indicar se a caixa de seleção está marcada.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "caixa de seleção".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário.</param>
      <param name="isChecked">verdadeiro para selecionar a caixa de seleção; caso contrário, falso.O valor da caixa de seleção é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo checked nos atributos html.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento de entrada de caixa de seleção usando o auxiliar HTML especificado, o nome do campo do formulário, um valor para indicar se a caixa de seleção está marcada e os atributos HTML.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "caixa de seleção".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário.</param>
      <param name="isChecked">verdadeiro para selecionar a caixa de seleção; caso contrário, falso.O valor da caixa de seleção é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo checked nos atributos html.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Object)">
      <summary>Retorna um elemento de entrada de caixa de seleção usando o auxiliar HTML especificado, o nome do campo do formulário, um valor que indica se a caixa de seleção está marcada e os atributos HTML.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "caixa de seleção".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário.</param>
      <param name="isChecked">verdadeiro para selecionar a caixa de seleção; caso contrário, falso.O valor da caixa de seleção é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo checked nos atributos html.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento de entrada de caixa de seleção usando o auxiliar HTML especificado, o nome do campo do formulário e os atributos HTML.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "caixa de seleção".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retorna um elemento de entrada de caixa de seleção usando o auxiliar HTML especificado, o nome do campo do formulário e os atributos HTML.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "caixa de seleção".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <summary>Retorna um elemento de entrada de caixa de seleção para cada propriedade no objeto representado pela expressão especificada.</summary>
      <returns>Um elemento HTML de entrada cujo atributo de tipo é definido como "caixa de seleção" para cada propriedade no objeto representado pela expressão especificada.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento de entrada de caixa de seleção para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML especificados.</summary>
      <returns>Um elemento HTML de entrada cujo atributo de tipo é definido como "caixa de seleção" para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML especificados.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="htmlAttributes">Um dicionário que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBoxFor``1(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Object)">
      <summary>Retorna um elemento de entrada de caixa de seleção para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML especificados.</summary>
      <returns>Um elemento HTML de entrada cujo atributo de tipo é definido como "caixa de seleção" para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML especificados.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retorna um elemento de entrada oculto usando o auxiliar HTML especificado e o nome do campo do formulário.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "oculto".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retorna um elemento de entrada oculto usando o auxiliar HTML especificado, o nome do campo do formulário e o valor.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "oculto".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
      <param name="value">O valor do elemento de entrada oculto.O valor é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo value nos atributos html.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento de entrada oculto usando o auxiliar HTML especificado, o nome do campo do formulário, o valor e os atributos HTML.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "oculto".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
      <param name="value">O valor do elemento de entrada oculto.O valor é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo value nos atributos html.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Retorna um elemento de entrada oculto usando o auxiliar HTML especificado, o nome do campo do formulário, o valor e os atributos HTML.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "oculto".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
      <param name="value">O valor do elemento de entrada oculto.O valor é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo value nos atributos html.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Retorna um elemento oculto HTML de entrada para cada propriedade no objeto que é representado pela expressão especificada.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "oculto" para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento oculto HTML de entrada para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML especificados.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "oculto" para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.HiddenFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Retorna um elemento oculto HTML de entrada para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML especificados.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "oculto" para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retorna um elemento de entrada de senha usando o auxiliar HTML especificado e o nome do campo do formulário.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "senha".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retorna um elemento de entrada de senha usando o auxiliar HTML especificado, o nome do campo do formulário e o valor.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "senha".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
      <param name="value">O valor do elemento de entrada de senha.Se um valor não for fornecido para este parâmetro, o atributo value nos atributos html será usado para recuperar o valor.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento de entrada de senha usando o auxiliar HTML especificado, o nome do campo do formulário, o valor e os atributos HTML.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "senha".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
      <param name="value">O valor do elemento de entrada de senha.Se um valor não for fornecido para este parâmetro, o atributo value nos atributos html será usado para recuperar o valor.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Retorna um elemento de entrada de senha usando o auxiliar HTML especificado, o nome do campo do formulário, o valor e os atributos HTML.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "senha".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
      <param name="value">O valor do elemento de entrada de senha.Se um valor não for fornecido para este parâmetro, o atributo value nos atributos html será usado para recuperar o valor.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Retorna um elemento de entrada de senha para cada propriedade no objeto representado pela expressão especificada.</summary>
      <returns>Um elemento HTML de entrada cujo atributo de tipo é definido como "senha" para cada propriedade no objeto representado pela expressão especificada.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo do valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento de entrada de senha para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML especificados.</summary>
      <returns>Um elemento HTML de entrada cujo atributo de tipo é definido como "senha" para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML especificados.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="htmlAttributes">Um dicionário que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo do valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.PasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Retorna um elemento de entrada de senha para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML especificados.</summary>
      <returns>Um elemento HTML de entrada cujo atributo de tipo é definido como "senha" para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML especificados.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo do valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retorna um elemento de entrada de botão de opção que é usado para apresentar as opções mutuamente exclusivas.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "opção".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
      <param name="value">O valor do botão de opção selecionado.O valor é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo value nos atributos html.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean)">
      <summary>Retorna um elemento de entrada de botão de opção que é usado para apresentar as opções mutuamente exclusivas.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "opção".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
      <param name="value">O valor do botão de opção selecionado.O valor é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo value nos atributos html.</param>
      <param name="isChecked">verdadeiro para selecionar o botão de opção; caso contrário, falso.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento de entrada de botão de opção que é usado para apresentar as opções mutuamente exclusivas.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "opção".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
      <param name="value">O valor do botão de opção selecionado.O valor é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo value nos atributos html.</param>
      <param name="isChecked">verdadeiro para selecionar o botão de opção; caso contrário, falso.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Object)">
      <summary>Retorna um elemento de entrada de botão de opção que é usado para apresentar as opções mutuamente exclusivas.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "opção".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
      <param name="value">O valor do botão de opção selecionado.O valor é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo value nos atributos html.</param>
      <param name="isChecked">verdadeiro para selecionar o botão de opção; caso contrário, falso.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento de entrada de botão de opção que é usado para apresentar as opções mutuamente exclusivas.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "opção".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
      <param name="value">O valor do botão de opção selecionado.O valor é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo value nos atributos html.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Retorna um elemento de entrada de botão de opção que é usado para apresentar as opções mutuamente exclusivas.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "opção".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
      <param name="value">O valor do botão de opção selecionado.O valor é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo value nos atributos html.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Retorna um elemento de entrada de botão de opção para cada propriedade no objeto representado pela expressão especificada.</summary>
      <returns>Um elemento HTML de entrada cujo atributo de tipo é definido como "opção" para cada propriedade no objeto representado pela expressão especificada.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="value">O valor do botão de opção selecionado.O valor é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo value nos atributos html.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo do valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento de entrada de botão de opção para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML especificados.</summary>
      <returns>Um elemento HTML de entrada cujo atributo de tipo é definido como "opção" para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML especificados.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="value">O valor do botão de opção selecionado.O valor é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo value nos atributos html.</param>
      <param name="htmlAttributes">Um dicionário que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo do valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButtonFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object,System.Object)">
      <summary>Retorna um elemento de entrada de botão de opção para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML especificados.</summary>
      <returns>Um elemento HTML de entrada cujo atributo de tipo é definido como "opção" para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML especificados.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="value">O valor do botão de opção selecionado.O valor é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo value nos atributos html.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo do valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="value" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retorna um elemento de entrada de texto usando o auxiliar HTML especificado e o nome do campo do formulário.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "texto".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retorna um elemento de entrada de texto usando o auxiliar HTML especificado, o nome do campo do formulário e o valor.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "texto".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
      <param name="value">O valor do elemento de entrada de texto.O valor é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo value nos atributos html.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento de entrada de texto usando o auxiliar HTML especificado, o nome do campo do formulário, o valor e os atributos HTML.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "texto".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
      <param name="value">O valor do elemento de entrada de texto.O valor é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo value nos atributos html.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Retorna um elemento de entrada de texto usando o auxiliar HTML especificado, o nome do campo do formulário, o valor e os atributos HTML.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "texto".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
      <param name="value">O valor do elemento de entrada de texto.O valor é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo value nos atributos html.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)">
      <summary>Retorna um elemento de texto de entrada.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "texto".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário.</param>
      <param name="value">O valor do elemento de entrada de texto.O valor é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo value nos atributos html.</param>
      <param name="format">Uma cadeia de caracteres usada para formatar a entrada.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento de texto de entrada.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "texto".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
      <param name="value">O valor do elemento de entrada de texto.O valor é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo value nos atributos html.</param>
      <param name="format">Uma cadeia de caracteres usada para formatar a entrada.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String,System.Object)">
      <summary>Retorna um elemento de texto de entrada.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "texto".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo do formulário e da chave <see cref="T:System.Web.Mvc.ViewDataDictionary" /> usada para procurar o valor.</param>
      <param name="value">O valor do elemento de entrada de texto.O valor é recuperado nesta ordem - o objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />, o valor deste parâmetro, o objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> e, por fim, um atributo value nos atributos html.</param>
      <param name="format">Uma cadeia de caracteres usada para formatar a entrada.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Retorna um elemento de entrada de texto para cada propriedade no objeto que é representado pela expressão especificada.</summary>
      <returns>Um elemento HTML de entrada cujo atributo de tipo é definido como "texto" para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo do valor.</typeparam>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="expression" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento de entrada de texto para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML especificados.</summary>
      <returns>Um elemento HTML de entrada cujo atributo de tipo é definido como "texto" para cada propriedade no objeto representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="htmlAttributes">Um dicionário que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo do valor.</typeparam>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="expression" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Retorna um elemento de entrada de texto para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML especificados.</summary>
      <returns>Um elemento HTML de entrada cujo atributo de tipo é definido como "texto" para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo do valor.</typeparam>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="expression" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Retorna um elemento de texto de entrada.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "texto".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="format">Uma cadeia de caracteres usada para formatar a entrada.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento de texto de entrada.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "texto".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="format">Uma cadeia de caracteres usada para formatar a entrada.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.InputExtensions.TextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Retorna um elemento de texto de entrada.</summary>
      <returns>Um elemento de entrada cujo atributo de tipo é definido como "texto".</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="format">Uma cadeia de caracteres usada para formatar a entrada.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo do valor.</typeparam>
    </member>
    <member name="T:System.Web.Mvc.Html.LabelExtensions">
      <summary>Representa o suporte para o elemento HTML de rótulo em uma exibição ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retorna um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão especificada.</summary>
      <returns>Um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica a propriedade a ser exibida.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão especificada.</summary>
      <returns>Um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica a propriedade a ser exibida.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retorna um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão especificada.</summary>
      <returns>Um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica a propriedade a ser exibida.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Retorna um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão especificada usando o texto de rótulo.</summary>
      <returns>Um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica a propriedade a ser exibida.</param>
      <param name="labelText">O texto de rótulo a ser exibido.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão especificada.</summary>
      <returns>Um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica a propriedade a ser exibida.</param>
      <param name="labelText">O texto do rótulo.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.Label(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Retorna um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão especificada.</summary>
      <returns>Um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica a propriedade a ser exibida.</param>
      <param name="labelText">O texto do rótulo.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Retorna um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão especificada.</summary>
      <returns>Um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica a propriedade a ser exibida.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão especificada.</summary>
      <returns>Um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica a propriedade a ser exibida.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Retorna um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão especificada.</summary>
      <returns>Um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica a propriedade a ser exibida.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Retorna um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão especificada usando o texto de rótulo.</summary>
      <returns>Um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica a propriedade a ser exibida.</param>
      <param name="labelText">O texto de rótulo a ser exibido.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão especificada.</summary>
      <returns>Um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica a propriedade a ser exibida.</param>
      <param name="labelText">O texto de rótulo a ser exibido.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Retorna um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão especificada.</summary>
      <returns>Um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica a propriedade a ser exibida.</param>
      <param name="labelText">O texto do rótulo.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TValue">O valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Retorna um elemento HTML de rótulo e o nome de propriedade da propriedade representada pelo modelo.</summary>
      <returns>Um elemento HTML de rótulo e o nome de propriedade da propriedade representada pelo modelo.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão especificada.</summary>
      <returns>Um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.Object)">
      <summary>Retorna um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão especificada.</summary>
      <returns>Um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retorna um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão especificada usando o texto de rótulo.</summary>
      <returns>Um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="labelText">O texto de rótulo a ser exibido.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão especificada.</summary>
      <returns>Um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="labelText">O texto do rótulo.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.LabelExtensions.LabelForModel(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retorna um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão especificada.</summary>
      <returns>Um elemento HTML de rótulo e o nome de propriedade da propriedade representada pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="labelText">O texto do rótulo.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.LinkExtensions">
      <summary>Representa o suporte a links HTML em um aplicativo.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Retorna um elemento de âncora (elemento a) para o texto e a ação do link.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome da ação.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Retorna um elemento de âncora (elemento a) para o texto, ação e valores de rota do link.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome da ação.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.O objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>Retorna um elemento de âncora (elemento a) para o texto, ação e valores de rota do link e atributos HTML.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome da ação.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.O objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML para o elemento.Os atributos são recuperados por meio de reflexo, examinando-se as propriedades do objeto.O objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Retorna um elemento de âncora (elemento a) para o texto, ação e controlador do link.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome da ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Retorna um elemento de âncora (elemento a) para o texto, ação, controlador, valores de rota do link e atributos HTML.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome da ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.O objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Retorna um elemento de âncora (elemento a) para o texto, ação, controlador, protocolo, nome de host, fragmento de URL, valores de rota do link e atributos HTML.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome da ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="protocol">O protocolo para a URL, como "http" ou "https".</param>
      <param name="hostName">O nome do host da URL.</param>
      <param name="fragment">O nome do fragmento de URL (o nome âncora).</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.O objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento de âncora (elemento a) para o texto, ação, controlador, protocolo, nome de host, fragmento de URL e valores de rota do link como um dicionário de valores de rota e atributos HTML como um dicionário.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome da ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="protocol">O protocolo para a URL, como "http" ou "https".</param>
      <param name="hostName">O nome do host da URL.</param>
      <param name="fragment">O nome do fragmento de URL (o nome âncora).</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento de âncora (elemento a) para o texto, ação, controlador e valores de rota do link como um dicionário de valores de rota e atributos HTML como um dicionário.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome da ação.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Retorna um elemento de âncora (elemento a) para o texto, ação e valores de rota do link como um dicionário de valores de rota.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome da ação.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento de âncora (elemento a) para o texto, ação e valores de rota do link como um dicionário de valores de rota e atributos HTML como um dicionário.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="actionName">O nome da ação.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retorna um elemento âncora (elemento a) que contém o caminho virtual da ação especificada.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.O objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
      <summary>Retorna um elemento âncora (elemento a) que contém o caminho virtual da ação especificada.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.O objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Retorna um elemento âncora (elemento a) que contém o caminho virtual da ação especificada.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeName">O nome da rota que é usada para retornar um caminho virtual.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Retorna um elemento âncora (elemento a) que contém o caminho virtual da ação especificada.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeName">O nome da rota que é usada para retornar um caminho virtual.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.O objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
      <summary>Retorna um elemento âncora (elemento a) que contém o caminho virtual da ação especificada.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeName">O nome da rota que é usada para retornar um caminho virtual.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.O objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
      <summary>Retorna um elemento âncora (elemento a) que contém o caminho virtual da ação especificada.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeName">O nome da rota que é usada para retornar um caminho virtual.</param>
      <param name="protocol">O protocolo para a URL, como "http" ou "https".</param>
      <param name="hostName">O nome do host da URL.</param>
      <param name="fragment">O nome do fragmento de URL (o nome âncora).</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.Os parâmetros são recuperados por meio de reflexo, examinando-se as propriedades do objeto.O objeto é tipicamente criado usando-se a sintaxe do inicializador de objeto.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento âncora (elemento a) que contém o caminho virtual da ação especificada.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeName">O nome da rota que é usada para retornar um caminho virtual.</param>
      <param name="protocol">O protocolo para a URL, como "http" ou "https".</param>
      <param name="hostName">O nome do host da URL.</param>
      <param name="fragment">O nome do fragmento de URL (o nome âncora).</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Retorna um elemento âncora (elemento a) que contém o caminho virtual da ação especificada.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeName">O nome da rota que é usada para retornar um caminho virtual.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento âncora (elemento a) que contém o caminho virtual da ação especificada.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeName">O nome da rota que é usada para retornar um caminho virtual.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota. </param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
      <summary>Retorna um elemento âncora (elemento a) que contém o caminho virtual da ação especificada.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento âncora (elemento a) que contém o caminho virtual da ação especificada.</summary>
      <returns>Um elemento âncora (elemento a).</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="linkText">O texto interno do elemento âncora.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="linkText" /> é nulo ou está vazio.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.MvcForm">
      <summary>Representa um elemento HTML de formulário em uma exibição MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.HttpResponseBase)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Html.MvcForm" /> usando o objeto de resposta HTTP especificado.</summary>
      <param name="httpResponse">O objeto de resposta HTTP.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="httpResponse " /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.#ctor(System.Web.Mvc.ViewContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.Html.MvcForm" /> usando o contexto de exibição especificado.</summary>
      <param name="viewContext">Um objeto que encapsula as informações necessárias para renderizar uma exibição.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="viewContext" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose">
      <summary>Libera todos os recursos usados ​​pela instância atual da classe <see cref="T:System.Web.Mvc.Html.MvcForm" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados e, opcionalmente, gerenciados usados ​​pela instância atual da classe <see cref="T:System.Web.Mvc.Html.MvcForm" />.</summary>
      <param name="disposing">verdadeiro para liberar os recursos gerenciados e os não gerenciados; falso para liberar apenas os recursos não gerenciados.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.MvcForm.EndForm">
      <summary>Finaliza o formulário e dispõe de todos os recursos do formulário.</summary>
    </member>
    <member name="T:System.Web.Mvc.Html.NameExtensions">
      <summary>Obtém os atributos de ID e nome HTML da cadeia de caracteres <see cref="T:System.Web.Mvc.HtmlHelper" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.Id(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Obtém a ID da cadeia de caracteres <see cref="T:System.Web.Mvc.HtmlHelper" />.</summary>
      <returns>O valor do atributo HTML ID para o objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="name">Uma expressão que identifica o objeto que contém a ID.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.IdFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary> Obtém a ID da cadeia de caracteres <see cref="T:System.Web.Mvc.HtmlHelper`1" />.</summary>
      <returns>O valor do atributo HTML ID para o objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém a ID.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.IdForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Obtém a ID da cadeia de caracteres <see cref="T:System.Web.Mvc.HtmlHelper" />.</summary>
      <returns>O valor do atributo HTML ID para o objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.Name(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Obtém o nome do campo HTML completo para o objeto que é representado pela expressão.</summary>
      <returns>O nome do campo HTML completo para o objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="name">Uma expressão que identifica o objeto que contém o nome.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.NameFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Obtém o nome do campo HTML completo para o objeto que é representado pela expressão.</summary>
      <returns>O nome do campo HTML completo para o objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém o nome.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.NameExtensions.NameForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Obtém o nome do campo HTML completo para o objeto que é representado pela expressão.</summary>
      <returns>O nome do campo HTML completo para o objeto que é representado pela expressão.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.PartialExtensions">
      <summary>Representa o recurso de rederização de uma exibição parcial como uma cadeia de caracteres codificada em HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Renderiza a exibição parcial especificada como uma cadeia de caracteres codificada em HTML.</summary>
      <returns>A exibição parcial que é renderizada como uma cadeia de caracteres codificada em HTML.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="partialViewName">O nome da exibição parcial a ser renderizada.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Renderiza a exibição parcial especificada como uma cadeia de caracteres codificada em HTML.</summary>
      <returns>A exibição parcial que é renderizada como uma cadeia de caracteres codificada em HTML.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="partialViewName">O nome da exibição parcial a ser renderizada.</param>
      <param name="model">O modelo para a exibição parcial.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>Renderiza a exibição parcial especificada como uma cadeia de caracteres codificada em HTML.</summary>
      <returns>A exibição parcial que é renderizada como uma cadeia de caracteres codificada em HTML.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="partialViewName">O nome da exibição parcial.</param>
      <param name="model">O modelo para a exibição parcial.</param>
      <param name="viewData">O dicionário de dados de exibição para a exibição parcial.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.PartialExtensions.Partial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Renderiza a exibição parcial especificada como uma cadeia de caracteres codificada em HTML.</summary>
      <returns>A exibição parcial que é renderizada como uma cadeia de caracteres codificada em HTML.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="partialViewName">O nome da exibição parcial a ser renderizada.</param>
      <param name="viewData">O dicionário de dados de exibição para a exibição parcial.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.RenderPartialExtensions">
      <summary>Fornece suporte à renderização de uma exibição parcial.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Renderiza a exibição parcial especificada usando o auxiliar HTML especificado.</summary>
      <param name="htmlHelper">O auxiliar HTML.</param>
      <param name="partialViewName">O nome da exibição parcial.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Renderiza a exibição parcial especificada, passando a ela uma cópia do objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> atual, mas com a propriedade Modelo definida para o modelo especificado.</summary>
      <param name="htmlHelper">O auxiliar HTML.</param>
      <param name="partialViewName">O nome da exibição parcial.</param>
      <param name="model">O modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
      <summary>Renderiza a exibição parcial especificada, substituindo a propriedade ViewData da exibição parcial pelo objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> especificado e definindo a propriedade Modelo dos dados de exibição para o modelo especificado.</summary>
      <param name="htmlHelper">O auxiliar HTML.</param>
      <param name="partialViewName">O nome da exibição parcial.</param>
      <param name="model">O modelo para a exibição parcial.</param>
      <param name="viewData">Os dados de exibição para a exibição parcial.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
      <summary>Renderiza a exibição parcial especificada, substituindo sua propriedade ViewData pelo objeto <see cref="T:System.Web.Mvc.ViewDataDictionary" /> especificado.</summary>
      <param name="htmlHelper">O auxiliar HTML.</param>
      <param name="partialViewName">O nome da exibição parcial.</param>
      <param name="viewData">Os dados de exibição.</param>
    </member>
    <member name="T:System.Web.Mvc.Html.SelectExtensions">
      <summary>Representa o suporte para marcar seleções em uma lista.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retorna um elemento de seleção de seleção única usando o auxiliar HTML especificado e o nome do campo do formulário.</summary>
      <returns>Um elemento HTML de seleção.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Retorna um elemento de seleção de seleção única usando o auxiliar HTML especificado, o nome do campo do formulário e os itens da lista especificados.</summary>
      <returns>Um elemento HTML de seleção com um subelemento de opção para cada item na lista.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
      <param name="selectList">Uma coleção de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> usados para preencher a lista suspensa.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento de seleção de seleção única usando o auxiliar HTML especificado, o nome do campo do formulário, os itens da lista especificados e os atributos HTML especificados.</summary>
      <returns>Um elemento HTML de seleção com um subelemento de opção para cada item na lista.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
      <param name="selectList">Uma coleção de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> usados para preencher a lista suspensa.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Retorna um elemento de seleção de seleção única usando o auxiliar HTML especificado, o nome do campo do formulário, os itens da lista especificados e os atributos HTML especificados.</summary>
      <returns>Um elemento HTML de seleção com um subelemento de opção para cada item na lista.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
      <param name="selectList">Uma coleção de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> usados para preencher a lista suspensa.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)">
      <summary>Retorna um elemento de seleção de seleção única usando o auxiliar HTML especificado, o nome do campo do formulário, os itens da lista especificados e um rótulo de opção.</summary>
      <returns>Um elemento HTML de seleção com um subelemento de opção para cada item na lista.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
      <param name="selectList">Uma coleção de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> usados para preencher a lista suspensa.</param>
      <param name="optionLabel">O texto de um item padrão vazio.Este parâmetro pode ser nulo.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento de seleção de seleção única usando o auxiliar HTML especificado, o nome do campo do formulário, os itens da lista especificados, um rótulo de opção e os atributos HTML especificados.</summary>
      <returns>Um elemento HTML de seleção com um subelemento de opção para cada item na lista.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
      <param name="selectList">Uma coleção de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> usados para preencher a lista suspensa.</param>
      <param name="optionLabel">O texto de um item padrão vazio.Este parâmetro pode ser nulo.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)">
      <summary>Retorna um elemento de seleção de seleção única usando o auxiliar HTML especificado, o nome do campo do formulário, os itens da lista especificados, um rótulo de opção e os atributos HTML especificados.</summary>
      <returns>Um elemento HTML de seleção com um subelemento de opção para cada item na lista.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
      <param name="selectList">Uma coleção de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> usados para preencher a lista suspensa.</param>
      <param name="optionLabel">O texto de um item padrão vazio.Este parâmetro pode ser nulo.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Retorna um elemento de seleção de seleção única usando o auxiliar HTML especificado, o nome do campo do formulário e um rótulo de opção.</summary>
      <returns>Um elemento HTML de seleção com um subelemento de opção para cada item na lista.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
      <param name="optionLabel">O texto de um item padrão vazio.Este parâmetro pode ser nulo.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Retorna um elemento HTML de seleção para cada propriedade no objeto representado pela expressão especificada, usando os itens de lista especificados.</summary>
      <returns>Um elemento HTML de seleção para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="selectList">Uma coleção de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> usados para preencher a lista suspensa.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo do valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento HTML de seleção para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML e itens de lista especificados.</summary>
      <returns>Um elemento HTML de seleção para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="selectList">Uma coleção de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> usados para preencher a lista suspensa.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo do valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Retorna um elemento HTML de seleção para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML e itens de lista especificados.</summary>
      <returns>Um elemento HTML de seleção para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="selectList">Uma coleção de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> usados para preencher a lista suspensa.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo do valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)">
      <summary>Retorna um elemento HTML de seleção para cada propriedade no objeto representado pela expressão especificada, usando os itens de lista especificados e um rótulo de opção.</summary>
      <returns>Um elemento HTML de seleção para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="selectList">Uma coleção de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> usados para preencher a lista suspensa.</param>
      <param name="optionLabel">O texto de um item padrão vazio.Este parâmetro pode ser nulo.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo do valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento HTML de seleção para cada propriedade no objeto que é representado pela expressão especificada, usando o rótulo de opção, atributos HTML e itens de lista especificados.</summary>
      <returns>Um elemento HTML de seleção para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="selectList">Uma coleção de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> usados para preencher a lista suspensa.</param>
      <param name="optionLabel">O texto de um item padrão vazio.Este parâmetro pode ser nulo.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo do valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)">
      <summary>Retorna um elemento HTML de seleção para cada propriedade no objeto que é representado pela expressão especificada, usando o rótulo de opção, atributos HTML e itens de lista especificados.</summary>
      <returns>Um elemento HTML de seleção para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="selectList">Uma coleção de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> usados para preencher a lista suspensa.</param>
      <param name="optionLabel">O texto de um item padrão vazio.Este parâmetro pode ser nulo.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo do valor.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Retorna um elemento HTML de seleção para cada valor na enumeração representado pela expressão especificada.</summary>
      <returns>Um elemento HTML de seleção para cada valor na enumeração que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém os valores a serem exibidos.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TEnum">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento HTML de seleção para cada valor na enumeração representado pela expressão especificada.</summary>
      <returns>Um elemento HTML de seleção para cada valor na enumeração que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém os valores a serem exibidos.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TEnum">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Retorna um elemento HTML de seleção para cada valor na enumeração representado pela expressão especificada.</summary>
      <returns>Um elemento HTML de seleção para cada valor na enumeração que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém os valores a serem exibidos.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TEnum">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Retorna um elemento HTML de seleção para cada valor na enumeração representado pela expressão especificada.</summary>
      <returns>Um elemento HTML de seleção para cada valor na enumeração que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém os valores a serem exibidos.</param>
      <param name="optionLabel">O texto de um item padrão vazio.Este parâmetro pode ser nulo.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TEnum">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento HTML de seleção para cada valor na enumeração representado pela expressão especificada.</summary>
      <returns>Um elemento HTML de seleção para cada valor na enumeração que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém os valores a serem exibidos.</param>
      <param name="optionLabel">O texto de um item padrão vazio.Este parâmetro pode ser nulo.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TEnum">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.EnumDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Retorna um elemento HTML de seleção para cada valor na enumeração representado pela expressão especificada.</summary>
      <returns>Um elemento HTML de seleção para cada valor na enumeração que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém os valores a serem exibidos.</param>
      <param name="optionLabel">O texto de um item padrão vazio.Este parâmetro pode ser nulo.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TEnum">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retorna um elemento de seleção de seleção múltipla usando o auxiliar HTML especificado e o nome do campo do formulário.</summary>
      <returns>Um elemento HTML de seleção.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Retorna um elemento de seleção de seleção múltipla usando o auxiliar HTML especificado, o nome do campo do formulário e os itens da lista especificados.</summary>
      <returns>Um elemento HTML de seleção com um subelemento de opção para cada item na lista.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
      <param name="selectList">Uma coleção de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> usados para preencher a lista suspensa.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento de seleção de seleção múltipla usando o auxiliar HTML especificado, o nome do campo do formulário, os itens da lista especificados e os atributos HTML especificados.</summary>
      <returns>Um elemento HTML de seleção com um subelemento de opção para cada item da lista.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
      <param name="selectList">Uma coleção de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> usados para preencher a lista suspensa.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Retorna um elemento de seleção de seleção múltipla usando o auxiliar HTML especificado, o nome do campo do formulário e os itens da lista especificados.</summary>
      <returns>Um elemento HTML de seleção com um subelemento de opção para cada item da lista.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
      <param name="selectList">Uma coleção de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> usados para preencher a lista suspensa.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <exception cref="T:System.ArgumentException">O parâmetro <paramref name="name" /> é nulo ou está vazio.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
      <summary>Retorna um elemento HTML de seleção para cada propriedade no objeto representado pela expressão especificada, usando os itens de lista especificados.</summary>
      <returns>Um elemento HTML de seleção para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="selectList">Uma coleção de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> usados para preencher a lista suspensa.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento HTML de seleção para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML e itens de lista especificados.</summary>
      <returns>Um elemento HTML de seleção para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="selectList">Uma coleção de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> usados para preencher a lista suspensa.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
      <summary>Retorna um elemento HTML de seleção para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML e itens de lista especificados.</summary>
      <returns>Um elemento HTML de seleção para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem exibidas.</param>
      <param name="selectList">Uma coleção de objetos <see cref="T:System.Web.Mvc.SelectListItem" /> usados para preencher a lista suspensa.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.TextAreaExtensions">
      <summary>Representa o suporte a controles de área de texto HTML.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retorna o elemento de área de texto especificado usando o auxiliar HTML especificado e o nome do campo do formulário.</summary>
      <returns>O elemento de área de texto.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna o elemento de área de texto especificado usando o auxiliar HTML, o nome do campo de formulário e os atributos HTML especificados.</summary>
      <returns>O elemento de área de texto.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retorna o elemento de área de texto especificado usando o auxiliar HTML e os atributos HTML especificados.</summary>
      <returns>O elemento de área de texto.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Retorna o elemento de área de texto especificado usando o auxiliar HTML, o nome do campo de formulário e o conteúdo de texto especificados.</summary>
      <returns>O elemento de área de texto.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
      <param name="value">O conteúdo do texto.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna o elemento de área de texto especificado usando o auxiliar HTML especificado, o nome do campo de formulário, o conteúdo de texto e os atributos HTML especificados.</summary>
      <returns>O elemento de área de texto.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
      <param name="value">O conteúdo do texto.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna o elemento de área de texto especificado usando o auxiliar HTML especificado, o nome do campo de formulário, o conteúdo de texto, o número de linhas e colunas e os atributos HTML especificados.</summary>
      <returns>O elemento de área de texto.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
      <param name="value">O conteúdo do texto.</param>
      <param name="rows">O número de linhas.</param>
      <param name="columns">O número de colunas.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Object)">
      <summary>Retorna o elemento de área de texto especificado usando o auxiliar HTML especificado, o nome do campo de formulário, o conteúdo de texto, o número de linhas e colunas e os atributos HTML especificados.</summary>
      <returns>O elemento de área de texto.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
      <param name="value">O conteúdo do texto.</param>
      <param name="rows">O número de linhas.</param>
      <param name="columns">O número de colunas.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Retorna o elemento de área de texto especificado usando o auxiliar HTML especificado, o nome do campo de formulário, o conteúdo de texto e os atributos HTML especificados.</summary>
      <returns>O elemento de área de texto.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do campo de formulário a ser retornado.</param>
      <param name="value">O conteúdo do texto.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML a serem definidos para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Retorna um elemento HTML de área de texto para cada propriedade no objeto que é representado pela expressão especificada.</summary>
      <returns>Um elemento HTML de área de texto para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento HTML de área de texto para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML especificados.</summary>
      <returns>Um elemento HTML de área de texto para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="htmlAttributes">Um dicionário que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um elemento HTML de área de texto para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML e quantidade de linhas e colunas especificados.</summary>
      <returns>Um elemento HTML de área de texto para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="rows">O número de linhas.</param>
      <param name="columns">O número de colunas.</param>
      <param name="htmlAttributes">Um dicionário que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Int32,System.Int32,System.Object)">
      <summary>Retorna um elemento HTML de área de texto para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML e quantidade de linhas e colunas especificados.</summary>
      <returns>Um elemento HTML de área de texto para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="rows">O número de linhas.</param>
      <param name="columns">O número de colunas.</param>
      <param name="htmlAttributes">Um dicionário que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
      <summary>Retorna um elemento HTML de área de texto para cada propriedade no objeto que é representado pela expressão especificada, usando os atributos HTML especificados.</summary>
      <returns>Um elemento HTML de área de texto para cada propriedade no objeto que é representado pela expressão.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="htmlAttributes">Um dicionário que contém os atributos HTML a serem definidos para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="expression" /> é nulo.</exception>
    </member>
    <member name="T:System.Web.Mvc.Html.ValidationExtensions">
      <summary>Oferece suporte para a validação da entrada de um formulário HTML.</summary>
    </member>
    <member name="P:System.Web.Mvc.Html.ValidationExtensions.ResourceClassKey">
      <summary>Obtém ou define o nome do arquivo de recurso (chave de classe) que contém valores de cadeia de caracteres localizados.</summary>
      <returns>O nome do arquivo de recurso (chave de classe).</returns>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.Validate(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Recupera os metadados de validação para o modelo especificado e aplica cada regra ao campo de dados.</summary>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="modelName">O nome da propriedade ou objeto de modelo que está sendo validado.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro <paramref name="modelName" /> é nulo.</exception>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidateFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Recupera os metadados de validação para o modelo especificado e aplica cada regra ao campo de dados.</summary>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Exibe uma mensagem de validação se houver um erro para o campo especificado no objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Se a propriedade ou o objeto for válido, uma cadeia de caracteres vazia, caso contrário, um elemento de alcance que contém uma mensagem de erro.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="modelName">O nome da propriedade ou objeto de modelo que está sendo validado.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Exibe uma mensagem de validação se houver um erro para o campo especificado no objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Se a propriedade ou o objeto for válido, uma cadeia de caracteres vazia, caso contrário, um elemento de alcance que contém uma mensagem de erro.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="modelName">O nome da propriedade ou objeto de modelo que está sendo validado.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
      <summary>Exibe uma mensagem de validação se houver um erro para a entrada especificada no objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>nulo se a entrada for válida e a validação no lado do cliente for desabilitada.Caso contrário, um elemento <paramref name="tag" /> que contém uma mensagem de erro.</returns>
      <param name="htmlHelper">A instância auxiliar HTML na qual este método opera.</param>
      <param name="modelName">O nome da entrada que está sendo validada.</param>
      <param name="htmlAttributes">Um <see cref="T:System.Collections.Generic.IDictionary`2" /> que contém os atributos HTML para o elemento.</param>
      <param name="tag">A tag a ser definida para o elemento HTML de encapsulamento da mensagem de validação.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Exibe uma mensagem de validação se houver um erro para o campo especificado no objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Se a propriedade ou o objeto for válido, uma cadeia de caracteres vazia, caso contrário, um elemento de alcance que contém uma mensagem de erro.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="modelName">O nome da propriedade ou objeto de modelo que está sendo validado.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML para o elemento. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)">
      <summary>Exibe uma mensagem de validação se houver um erro para a entrada especificada no objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>nulo se a entrada for válida e a validação no lado do cliente for desabilitada.Caso contrário, um elemento <paramref name="tag" /> que contém uma mensagem de erro.</returns>
      <param name="htmlHelper">A instância auxiliar HTML na qual este método opera.</param>
      <param name="modelName">O nome da entrada que está sendo validada.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML para o elemento.</param>
      <param name="tag">A tag a ser definida para o elemento HTML de encapsulamento da mensagem de validação.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Exibe uma mensagem de validação se houver um erro para o campo especificado no objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Se a propriedade ou o objeto for válido, uma cadeia de caracteres vazia, caso contrário, um elemento de alcance que contém uma mensagem de erro.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="modelName">O nome da propriedade ou objeto de modelo que está sendo validado.</param>
      <param name="validationMessage">A mensagem a ser exibida se o campo especificado contiver um erro.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Exibe uma mensagem de validação se houver um erro para o campo especificado no objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Se a propriedade ou o objeto for válido, uma cadeia de caracteres vazia, caso contrário, um elemento de alcance que contém uma mensagem de erro.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="modelName">O nome da propriedade ou objeto de modelo que está sendo validado.</param>
      <param name="validationMessage">A mensagem a ser exibida se o campo especificado contiver um erro.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
      <summary>Exibe uma mensagem de validação se houver um erro para a entrada especificada no objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>nulo se o objeto de modelo for válido e a validação no lado do cliente for desabilitada.Caso contrário, um elemento <paramref name="tag" /> que contém uma mensagem de erro.</returns>
      <param name="htmlHelper">A instância auxiliar HTML na qual este método opera.</param>
      <param name="modelName">O nome do objeto de modelo que está sendo validado.</param>
      <param name="validationMessage">A mensagem a ser exibida se a entrada especificada contiver um erro.</param>
      <param name="htmlAttributes">Um <see cref="T:System.Collections.Generic.IDictionary`2" /> que contém os atributos HTML para o elemento.</param>
      <param name="tag">A tag a ser definida para o elemento HTML de encapsulamento da mensagem de validação.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
      <summary>Exibe uma mensagem de validação se houver um erro para o campo especificado no objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Se a propriedade ou o objeto for válido, uma cadeia de caracteres vazia, caso contrário, um elemento de alcance que contém uma mensagem de erro.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="modelName">O nome da propriedade ou objeto de modelo que está sendo validado.</param>
      <param name="validationMessage">A mensagem a ser exibida se o campo especificado contiver um erro.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML para o elemento. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.String)">
      <summary>Exibe uma mensagem de validação se houver um erro para a entrada especificada no objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>nulo se a entrada for válida e a validação no lado do cliente for desabilitada.Caso contrário, um elemento <paramref name="tag" /> que contém uma mensagem de erro.</returns>
      <param name="htmlHelper">A instância auxiliar HTML na qual este método opera.</param>
      <param name="modelName">O nome da entrada que está sendo validada.</param>
      <param name="validationMessage">A mensagem a ser exibida se a entrada especificada contiver um erro.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML para o elemento.</param>
      <param name="tag">A tag a ser definida para o elemento HTML de encapsulamento da mensagem de validação.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
      <summary>Exibe uma mensagem de validação se houver um erro para a entrada especificada no objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>nulo se a entrada for válida e a validação no lado do cliente for desabilitada.Caso contrário, um elemento <paramref name="tag" /> que contém uma mensagem de erro.</returns>
      <param name="htmlHelper">A instância auxiliar HTML na qual este método opera.</param>
      <param name="modelName">O nome da entrada que está sendo validada.</param>
      <param name="validationMessage">A mensagem a ser exibida se a entrada especificada contiver um erro.</param>
      <param name="tag">A tag a ser definida para o elemento HTML de encapsulamento da mensagem de validação.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Retorna a marcação HTML para uma mensagem de erro de validação para cada campo de dados que é representado pela expressão especificada.</summary>
      <returns>Se a propriedade ou o objeto for válido, uma cadeia de caracteres vazia, caso contrário, um elemento de alcance que contém uma mensagem de erro.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Retorna a marcação HTML para uma mensagem de erro de validação para cada campo de dados representado pela expressão especificada, usando a mensagem especificada.</summary>
      <returns>Se a propriedade ou o objeto for válido, uma cadeia de caracteres vazia, caso contrário, um elemento de alcance que contém uma mensagem de erro.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="validationMessage">A mensagem a ser exibida se o campo especificado contiver um erro.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna a marcação HTML para uma mensagem de erro de validação para cada campo de dados que é representado pela expressão especificada, usando a mensagem e os atributos HTML especificados.</summary>
      <returns>Se a propriedade ou o objeto for válido, uma cadeia de caracteres vazia, caso contrário, um elemento de alcance que contém uma mensagem de erro.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="validationMessage">A mensagem a ser exibida se o campo especificado contiver um erro.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)">
      <summary>Retorna a marcação HTML para uma mensagem de erro de validação para a expressão especificada.</summary>
      <returns>nulo se o objeto de modelo for válido e a validação no lado do cliente for desabilitada.Caso contrário, um elemento <paramref name="tag" /> que contém uma mensagem de erro.</returns>
      <param name="htmlHelper">A instância auxiliar HTML na qual este método opera.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="validationMessage">A mensagem de erro a ser exibida se ocorrer um erro de validação.</param>
      <param name="htmlAttributes">Um <see cref="T:System.Collections.Generic.IDictionary`2" /> que contém os atributos HTML para o elemento.</param>
      <param name="tag">A tag a ser definida para o elemento HTML de encapsulamento da mensagem de validação.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object)">
      <summary>Retorna a marcação HTML para uma mensagem de erro de validação para cada campo de dados que é representado pela expressão especificada, usando a mensagem e os atributos HTML especificados.</summary>
      <returns>Se a propriedade ou o objeto for válido, uma cadeia de caracteres vazia, caso contrário, um elemento de alcance que contém uma mensagem de erro.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="validationMessage">A mensagem a ser exibida se o campo especificado contiver um erro.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML para o elemento.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.Object,System.String)">
      <summary>Retorna a marcação HTML para uma mensagem de erro de validação para a expressão especificada.</summary>
      <returns>nulo se o objeto de modelo for válido e a validação no lado do cliente for desabilitada.Caso contrário, um elemento <paramref name="tag" /> que contém uma mensagem de erro.</returns>
      <param name="htmlHelper">A instância auxiliar HTML na qual este método opera.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="validationMessage">A mensagem de erro a ser exibida se ocorrer um erro de validação.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML para o elemento.</param>
      <param name="tag">A tag a ser definida para o elemento HTML de encapsulamento da mensagem de validação.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessageFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String,System.String)">
      <summary>Retorna a marcação HTML para uma mensagem de erro de validação para a expressão especificada.</summary>
      <returns>nulo se o objeto de modelo for válido e a validação no lado do cliente for desabilitada.Caso contrário, um elemento <paramref name="tag" /> que contém uma mensagem de erro.</returns>
      <param name="htmlHelper">A instância auxiliar HTML na qual este método opera.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem renderizadas.</param>
      <param name="validationMessage">A mensagem de erro a ser exibida se ocorrer um erro de validação.</param>
      <param name="tag">A tag a ser definida para o elemento HTML de encapsulamento da mensagem de validação.</param>
      <typeparam name="TModel">O tipo do modelo.</typeparam>
      <typeparam name="TProperty">O tipo da propriedade.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)">
      <summary>Retorna uma lista não ordenada (elemento ul) de mensagens de validação que estão no objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Uma cadeia de caracteres que contém uma lista não ordenada (elemento ul) de mensagens de validação.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean)">
      <summary>Retorna uma lista não ordenada (elemento ul) de mensagens de validação que estão no objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" /> e exibe opcionalmente apenas erros de nível de modelo.</summary>
      <returns>Uma cadeia de caracteres que contém uma lista não ordenada (elemento ul) de mensagens de validação.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="excludePropertyErrors">verdadeiro para que a exibição do resumo de erros exiba apenas os erros de nível de modelo ou falso para que a exibição do resumo exiba todos os erros.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String)">
      <summary>Retorna uma lista não ordenada (elemento ul) de mensagens de validação que estão no objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" /> e exibe opcionalmente apenas erros de nível de modelo.</summary>
      <returns>Uma cadeia de caracteres que contém uma lista não ordenada (elemento ul) de mensagens de validação.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="excludePropertyErrors">verdadeiro para que a exibição do resumo de erros exiba apenas os erros de nível de modelo ou falso para que a exibição do resumo exiba todos os erros.</param>
      <param name="message">A mensagem a ser exibida com o resumo de validação.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna uma lista não ordenada (elemento ul) de mensagens de validação que estão no objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" /> e exibe opcionalmente apenas erros de nível de modelo.</summary>
      <returns>Uma cadeia de caracteres que contém uma lista não ordenada (elemento ul) de mensagens de validação.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="excludePropertyErrors">verdadeiro para que a exibição do resumo de erros exiba apenas os erros de nível de modelo ou falso para que a exibição do resumo exiba todos os erros.</param>
      <param name="message">A mensagem a ser exibida com o resumo de validação.</param>
      <param name="htmlAttributes">Um dicionário que contém os atributos HTML para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Object)">
      <summary>Retorna uma lista não ordenada (elemento ul) de mensagens de validação que estão no objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" /> e exibe opcionalmente apenas erros de nível de modelo.</summary>
      <returns>Uma cadeia de caracteres que contém uma lista não ordenada (elemento ul) de mensagens de validação.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="excludePropertyErrors">verdadeiro para que a exibição do resumo de erros exiba apenas os erros de nível de modelo ou falso para que a exibição do resumo exiba todos os erros.</param>
      <param name="message">A mensagem a ser exibida com o resumo de validação.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.Object,System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Boolean,System.String,System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Retorna uma lista não ordenada (elemento ul) de mensagens de validação que estão no objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Uma cadeia de caracteres que contém uma lista não ordenada (elemento ul) de mensagens de validação.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="message">A mensagem a ser exibida se o campo especificado contiver um erro.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna uma lista não ordenada (elemento ul) de mensagens de validação que estão no objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Uma cadeia de caracteres que contém uma lista não ordenada (elemento ul) de mensagens de validação.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="message">A mensagem a ser exibida se o campo especificado contiver um erro.</param>
      <param name="htmlAttributes">Um dicionário que contém os atributos HTML para o elemento.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
      <summary>Retorna uma lista não ordenada (elemento ul) de mensagens de validação que estão no objeto <see cref="T:System.Web.Mvc.ModelStateDictionary" />.</summary>
      <returns>Uma cadeia de caracteres que contém uma lista não ordenada (elemento ul) de mensagens de validação.</returns>
      <param name="htmlHelper">A instância auxiliar HTML que este método estende.</param>
      <param name="message">A mensagem a ser exibida se o campo especificado contiver um erro.</param>
      <param name="htmlAttributes">Um objeto que contém os atributos HTML para o elemento. </param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.String)"></member>
    <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.String,System.String)"></member>
    <member name="T:System.Web.Mvc.Html.ValueExtensions">
      <summary>Fornece um mecanismo para criar marcação HTML personalizada compatível com os modelos e associadores de modelo do ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.Value(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Fornece um mecanismo para criar marcação HTML personalizada compatível com os modelos e associadores de modelo do ASP.NET MVC.</summary>
      <returns>A marcação HTML para o valor.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do modelo.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.Value(System.Web.Mvc.HtmlHelper,System.String,System.String)">
      <summary>Fornece um mecanismo para criar marcação HTML personalizada compatível com os modelos e associadores de modelo do ASP.NET MVC.</summary>
      <returns>A marcação HTML para o valor.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="name">O nome do modelo.</param>
      <param name="format">A cadeia de caracteres de formato.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <summary>Fornece um mecanismo para criar marcação HTML personalizada compatível com os modelos e associadores de modelo do ASP.NET MVC.</summary>
      <returns>A marcação HTML para o valor.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem expostas.</param>
      <typeparam name="TModel">O modelo.</typeparam>
      <typeparam name="TProperty">A propriedade.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.String)">
      <summary>Fornece um mecanismo para criar marcação HTML personalizada compatível com os modelos e associadores de modelo do ASP.NET MVC.</summary>
      <returns>A marcação HTML para o valor.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="expression">Uma expressão que identifica o objeto que contém as propriedades a serem expostas.</param>
      <param name="format">A cadeia de caracteres de formato.</param>
      <typeparam name="TModel">O modelo.</typeparam>
      <typeparam name="TProperty">A propriedade.</typeparam>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueForModel(System.Web.Mvc.HtmlHelper)">
      <summary>Fornece um mecanismo para criar marcação HTML personalizada compatível com os modelos e associadores de modelo do ASP.NET MVC.</summary>
      <returns>A marcação HTML para o valor.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
    </member>
    <member name="M:System.Web.Mvc.Html.ValueExtensions.ValueForModel(System.Web.Mvc.HtmlHelper,System.String)">
      <summary>Fornece um mecanismo para criar marcação HTML personalizada compatível com os modelos e associadores de modelo do ASP.NET MVC.</summary>
      <returns>A marcação HTML para o valor.</returns>
      <param name="html">A instância auxiliar HTML que este método estende.</param>
      <param name="format">A cadeia de caracteres de formato.</param>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser">
      <summary>Compila exibições ASP.NET Razor em classes.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.#ctor" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.InheritsDirective">
      <summary>A diretiva inherits.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcCSharpRazorCodeParser.ModelDirective">
      <summary>A diretiva do modelo.</summary>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcVBRazorCodeParser">
      <summary>Estende a classe VBCodeParser adicionando suporte para a palavra-chave @model.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Razor.MvcVBRazorCodeParser" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.InheritsStatement">
      <summary>Define um valor que indica se o bloco de código e o modelo atuais devem ser herdados.</summary>
      <returns>verdadeiro se o bloco de código e o modelo forem herdados; caso contrário, falso.</returns>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcVBRazorCodeParser.ModelTypeDirective">
      <summary>A Diretiva do tipo de modelo.</summary>
      <returns>Retorna nula.</returns>
    </member>
    <member name="T:System.Web.Mvc.Razor.MvcWebPageRazorHost">
      <summary>Configura o analisador e o gerador de códigos do ASP.NET Razor para um arquivo especificado.</summary>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.#ctor(System.String,System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Razor.MvcWebPageRazorHost" />. </summary>
      <param name="virtualPath">O caminho virtual do arquivo ASP.NET Razor.</param>
      <param name="physicalPath">O caminho físico do arquivo ASP.NET Razor.</param>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.DecorateCodeGenerator(System.Web.Razor.Generator.RazorCodeGenerator)">
      <summary>Retorna o gerador de código Razor específico do idioma do ASP.NET MVC.</summary>
      <returns>O gerador de código Razor específico do idioma do ASP.NET MVC.</returns>
      <param name="incomingCodeGenerator">O gerador de código C# ou Visual Basic.</param>
    </member>
    <member name="M:System.Web.Mvc.Razor.MvcWebPageRazorHost.DecorateCodeParser(System.Web.Razor.Parser.ParserBase)">
      <summary>Retorna o analisador de código Razor específico do idioma do ASP.NET MVC usando o analisador de idioma especificado.</summary>
      <returns>O analisador de código Razor específico do idioma do ASP.NET MVC.</returns>
      <param name="incomingCodeParser">O analisador de código C# ou Visual Basic.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.DefaultDirectRouteProvider"></member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionDirectRoutes(System.Web.Mvc.ActionDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Cria instâncias de <see cref="T:System.Web.Mvc.Routing.RouteEntry" /> com base nos alocadores e ação fornecidos.As entradas de rota fornecem roteamento direto à ação fornecida.</summary>
      <returns>Um conjunto de entradas de rota.</returns>
      <param name="actionDescriptor">O descritor da ação.</param>
      <param name="factories">Os alocadores de rota direta.</param>
      <param name="constraintResolver">O resolvedor de restrição.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetActionRouteFactories(System.Web.Mvc.ActionDescriptor)">
      <summary>Obtém um conjunto de alocadores de rota para o descritor de ação fornecido.</summary>
      <returns>Um conjunto de alocadores de rota.</returns>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetAreaPrefix(System.Web.Mvc.ControllerDescriptor)">
      <summary>Obtém o prefixo da área do controlador fornecido.</summary>
      <returns>O prefixo da área ou nulo.</returns>
      <param name="controllerDescriptor">O descritor do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Collections.Generic.IReadOnlyList{System.Web.Mvc.Routing.IDirectRouteFactory},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Cria instâncias de <see cref="T:System.Web.Mvc.Routing.RouteEntry" /> com base nos alocadores, controlador e ações fornecidos.As entradas de rota forneceram roteamento direto ao controlador fornecido e podem atingir o conjunto de ações fornecidas.</summary>
      <returns>Um conjunto de entradas de rota.</returns>
      <param name="controllerDescriptor">O descritor do controlador.</param>
      <param name="actionDescriptors">Os descritores da ação.</param>
      <param name="factories">Os alocadores de rota direta.</param>
      <param name="constraintResolver">O resolvedor de restrição.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetControllerRouteFactories(System.Web.Mvc.ControllerDescriptor)">
      <summary>Obtém alocadores de rota para o descritor do controlador.</summary>
      <returns>Um conjunto de alocadores de rota.</returns>
      <param name="controllerDescriptor">O descritor do controlador.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Obtém rotas diretas para o descritor do controlador fornecido e descritores de ação com base em atributos do <see cref="T:System.Web.Mvc.Routing.IDirectRouteFactory" />.</summary>
      <returns>Um conjunto de entradas de rota.</returns>
      <param name="controllerDescriptor">O descritor do controlador.</param>
      <param name="actionDescriptors">Os descritores de ação para todas as ações.</param>
      <param name="constraintResolver">O resolvedor de restrição.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultDirectRouteProvider.GetRoutePrefix(System.Web.Mvc.ControllerDescriptor)">
      <summary>Obtém o prefixo da rota do controlador fornecido.</summary>
      <returns>O prefixo da rota ou nulo.</returns>
      <param name="controllerDescriptor">O descritor do controlador.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.DefaultInlineConstraintResolver">
      <summary>A implementação padrão de <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" />.Resolve restrições analisando uma chave de restrição e argumentos de restrição, usando um mapa para resolver o tipo de restrição e chamando um construtor apropriado para o tipo de restrição.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultInlineConstraintResolver.#ctor"></member>
    <member name="P:System.Web.Mvc.Routing.DefaultInlineConstraintResolver.ConstraintMap">
      <summary>Obtém o dicionário mutável que mapeia chaves de restrição para um determinado tipo de restrição.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.DefaultInlineConstraintResolver.ResolveConstraint(System.String)"></member>
    <member name="T:System.Web.Mvc.Routing.DirectRouteFactoryContext">
      <summary>Representa um contexto que suporta a criação de uma rota direta.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.DirectRouteFactoryContext.#ctor(System.String,System.String,System.Collections.Generic.IReadOnlyCollection{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver,System.Boolean)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Routing.DirectRouteFactoryContext" />.</summary>
      <param name="areaPrefix">O prefixo da rota, se existir, definido pela área.</param>
      <param name="controllerPrefix">O prefixo da rota, se existir, definido pelo controlador.</param>
      <param name="actions">Os descritores de ação para os quais criar uma rota.</param>
      <param name="inlineConstraintResolver">O resolvedor de restrições embutidas.</param>
      <param name="targetIsAction">Um valor indicando se a rota está configurada ao nível de ação ou de controlador.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.Actions">
      <summary>Obtém os descritores de ação para os quais criar uma rota.</summary>
      <returns>Os descritores de ação para os quais criar uma rota.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.AreaPrefix">
      <summary>Obtém o prefixo da rota, se existir, definido pela área.</summary>
      <returns>O prefixo da rota, se existir, definido pela área.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.ControllerPrefix">
      <summary>Obtém o prefixo da rota, se existir, definido pelo controlador.</summary>
      <returns>O prefixo da rota, se existir, definido pelo controlador.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.DirectRouteFactoryContext.CreateBuilder(System.String)">
      <summary>Cria um construtor de rotas que pode construir uma rota com contexto coincidente a este.</summary>
      <returns>Um construtor de rotas que pode construir uma rota com contexto coincidente a este.</returns>
      <param name="template">O modelo de rota.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.DirectRouteFactoryContext.CreateBuilder(System.String,System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Cria um construtor de rotas que pode construir uma rota com contexto coincidente a este.</summary>
      <returns>Um construtor de rotas que pode construir uma rota com contexto coincidente a este.</returns>
      <param name="template">O modelo de rota.</param>
      <param name="constraintResolver">O resolvedor de restrições embutidas a utilizar, se existir; caso contrário, nulo.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.InlineConstraintResolver">
      <summary>Obtém o resolvedor de restrições embutidas.</summary>
      <returns>O resolvedor de restrições embutidas.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.DirectRouteFactoryContext.TargetIsAction">
      <summary>Obtém um valor indicando se a rota está configurada ao nível de ação ou de controlador.</summary>
      <returns>verdadeiro quando a rota estiver configurada ao nível de ação; caso contrário falso se a rota estiver configurada ao nível de controlador.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.IDirectRouteBuilder">
      <summary>Define um construtor que cria rotas diretas a ações (rotas de atributos).</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Actions">
      <summary>Obtém os descritores de ação para os quais criar uma rota.</summary>
      <returns>Os descritores de ação para os quais criar uma rota.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.IDirectRouteBuilder.Build">
      <summary>Cria uma rota de entrada baseada nos valores atuais de propriedades.</summary>
      <returns>A rota de entrada criada.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Constraints">
      <summary>Obtém ou define as restrições de rota.</summary>
      <returns>As restrições da rota.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.DataTokens">
      <summary>Obtém ou define os tokens de dados de rota.</summary>
      <returns>Os tokens dos dados da rota.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Defaults">
      <summary>Obtém ou define os padrões de rota.</summary>
      <returns>Os padrões da rota.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Name">
      <summary>Obtém ou define o nome da rota.</summary>
      <returns>O nome da rota, ou nulo se não houver nome especificado.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Order">
      <summary>Obtém ou define a ordem de rota.</summary>
      <returns>A ordem de rota.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Precedence">
      <summary>Obtém ou define a precedência da rota.</summary>
      <returns>A precedência rota.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.TargetIsAction">
      <summary>Obtém um valor indicando se a rota está configurada ao nível de ação ou de controlador.</summary>
      <returns>verdadeiro quando a rota estiver configurada ao nível de ação; caso contrário falso se a rota estiver configurada ao nível de controlador.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IDirectRouteBuilder.Template">
      <summary>Obtém ou define o modelo da rota.</summary>
      <returns>O modelo de rota.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.IDirectRouteFactory">
      <summary>Define uma fábrica que cria uma rota diretamente para um conjunto de descritores de ação (uma rota de atributos).</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.IDirectRouteFactory.CreateRoute(System.Web.Mvc.Routing.DirectRouteFactoryContext)">
      <summary>Cria uma entrada direta de rota.</summary>
      <returns>A entrada direta de rota.</returns>
      <param name="context">O contexto a utilizar para criar a rota.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.IDirectRouteProvider">
      <summary>Define um provedor para rotas que visam diretamente os descritores de ação (rotas de atributo).</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.IDirectRouteProvider.GetDirectRoutes(System.Web.Mvc.ControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Mvc.ActionDescriptor},System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Obtém as rotas diretas para um controlador.</summary>
      <returns>Um conjunto de entradas de rota para o controlador.</returns>
      <param name="controllerDescriptor">O descritor do controlador.</param>
      <param name="actionDescriptors">Os descritores da ação.</param>
      <param name="constraintResolver">O resolvedor de restrições embutidas.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.IInlineConstraintResolver">
      <summary>Define uma abstração para resolver restrições embutidas como instâncias de <see cref="T:System.Web.Routing.IRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.IInlineConstraintResolver.ResolveConstraint(System.String)">
      <summary>Resolve a restrição embutida.</summary>
      <returns>O <see cref="T:System.Web.Routing.IRouteConstraint" /> para o qual a restrição embutida foi resolvida.</returns>
      <param name="inlineConstraint">A restrição embutida a ser resolvida.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.IRouteInfoProvider">
      <summary>Fornece informações para desenvolver um System.Web.Routing.Route.</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.IRouteInfoProvider.Name">
      <summary>Obtém o modelo de rota que descreve o padrão de URI com o qual corresponder.</summary>
      <returns>O modelo de rota que descreve o padrão de URI com o qual corresponder.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.IRouteInfoProvider.Template">
      <summary>Obtém o nome da rota a ser gerado.</summary>
      <returns>O nome da rota a ser gerada.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.IRoutePrefix">
      <summary>Define um prefixo para a rota.</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.IRoutePrefix.Prefix">
      <summary>Obtém o prefixo da rota.</summary>
      <returns>O prefixo da rota.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.RouteBuilder">
      <summary>Cria instâncias de <see cref="T:System.Web.Routing.Route" /> com base nas informações da rota.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.Routing.RouteBuilder" /> usando o resolvedor de restrições embutidas padrão.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.#ctor(System.Web.Mvc.Routing.IInlineConstraintResolver)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Routing.RouteBuilder" />.</summary>
      <param name="constraintResolver">O <see cref="T:System.Web.Mvc.Routing.IInlineConstraintResolver" /> a ser usado para resolver restrições embutidas.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.BuildDirectRoute(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Reflection.MethodInfo,System.String)">
      <summary>Cria um <see cref="T:System.Web.Routing.Route" /> para uma determinada ação.</summary>
      <returns>O <see cref="T:System.Web.Routing.Route" /> gerado.</returns>
      <param name="routeTemplate">O modelo de rota tokenizado para a rota.</param>
      <param name="allowedMethods">Os métodos HTTP compatíveis com a rota.Um valor nulo especifica que todos os métodos possíveis têm suporte.</param>
      <param name="controllerName">O nome do controlador associado.</param>
      <param name="actionName">O nome da ação associada.</param>
      <param name="targetMethod">O método no qual o atributo da rota foi aplicado.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.BuildDirectRoute(System.String,System.Web.Mvc.ControllerDescriptor)">
      <summary>Cria um <see cref="T:System.Web.Routing.Route" /> para uma determinada ação.</summary>
      <returns>A rota gerada.</returns>
      <param name="routeTemplate">O modelo de rota tokenizado para a rota.</param>
      <param name="controllerDescriptor">O controlador no qual o atributo da rota foi aplicado.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteBuilder.BuildDirectRoute(System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.String,System.Reflection.MethodInfo)">
      <summary>Cria um <see cref="T:System.Web.Routing.Route" />.</summary>
      <returns>O <see cref="T:System.Web.Routing.Route" /> gerado.</returns>
      <param name="defaults">Os padrões da rota.</param>
      <param name="constraints">As restrições da rota.</param>
      <param name="routeTemplate">O modelo de rota destokenizado.</param>
      <param name="targetMethod">O método no qual o atributo da rota foi aplicado.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteBuilder.ConstraintResolver">
      <summary>Obtém o resolvedor para resolver restrições embutidas.</summary>
      <returns>O resolvedor para resolver restrições embutidas.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.RouteEntry">
      <summary>Representa uma rota nomeada.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteEntry.#ctor(System.String,System.Web.Routing.Route)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Routing.RouteEntry" />.</summary>
      <param name="name">O nome da rota.</param>
      <param name="route">A rota.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteEntry.Name">
      <summary>Obtém o nome da rota.</summary>
      <returns>O nome da rota, se existir; caso contrário, nulo.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteEntry.Route">
      <summary>Obtém a rota.</summary>
      <returns>A rota.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.RouteFactoryAttribute">
      <summary>Representa uma rota de atributos que poderá possuir restrições personalizadas.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteFactoryAttribute.#ctor(System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Routing.RouteFactoryAttribute" />.</summary>
      <param name="template">O modelo de rota.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Constraints">
      <summary>Obtém as restrições da rota.</summary>
      <returns>As restrições da rota, se existirem; caso contrário, nulo.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.RouteFactoryAttribute.CreateRoute(System.Web.Mvc.Routing.DirectRouteFactoryContext)">
      <summary>Cria uma entrada direta de rota.</summary>
      <returns>A entrada direta de rota.</returns>
      <param name="context">O contexto a utilizar para criar a rota.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.DataTokens">
      <summary>Obtém o token de dados de rota.</summary>
      <returns>Os tokens da rota, se existirem; caso contrário, nulo.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Defaults">
      <summary>Obtém os padrões da rota.</summary>
      <returns>Os padrões da rota, se existirem; caso contrário, nulo.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Name">
      <summary>Obtém ou define o nome da rota.</summary>
      <returns>O nome da rota, se existir; caso contrário, nulo.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Order">
      <summary>Obtém ou define a ordem de rota.</summary>
      <returns>A ordem de rota.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.RouteFactoryAttribute.Template">
      <summary>Obtém o modelo da rota.</summary>
      <returns>O modelo de rota.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.AlphaRouteConstraint">
      <summary>Restringe um parâmetro de rota para conter apenas letras minúsculas ou maiúsculas de A a Z do alfabeto inglês.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.AlphaRouteConstraint.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Routing.Constraints.AlphaRouteConstraint" />.</summary>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.BoolRouteConstraint">
      <summary>Restringe um parâmetro de rota para representar apenas valores boolianos.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.BoolRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.BoolRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint">
      <summary>Restringe uma rota por diversas restrições filho.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint.#ctor(System.Collections.Generic.IList{System.Web.Routing.IRouteConstraint})">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint" />.</summary>
      <param name="constraints">As restrições filho que devem corresponder para que esta restrição tenha correspondência.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint.Constraints">
      <summary>Obtém as restrições filho que devem corresponder para que esta restrição tenha correspondência.</summary>
      <returns>As restrições filho que devem corresponder para que esta restrição tenha correspondência.</returns>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.CompoundRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint">
      <summary>Restringe um parâmetro de rota para representar apenas valores de <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DateTimeRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint">
      <summary>Restringe um parâmetro de rota para representar apenas valores decimais.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DecimalRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint">
      <summary>Restringe um parâmetro de rota para representar apenas valores de ponto flutuante de 64 bits.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.DoubleRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.FloatRouteConstraint">
      <summary>Restringe um parâmetro de rota para representar apenas valores de ponto flutuante de 32 bits.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.FloatRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.FloatRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint">
      <summary>Restringe um parâmetro de rota para representar apenas valores de <see cref="T:System.Guid" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.GuidRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.IntRouteConstraint">
      <summary>Restringe um parâmetro de rota para representar apenas valores de inteiro de 32 bits.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.IntRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.IntRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint">
      <summary>Restringe um parâmetro de rota para ser uma cadeia de caracteres de um determinado comprimento ou ficar dentro de um determinado intervalo de comprimentos.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32)"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint" /> que restringe um parâmetro de rota para ser uma cadeia de caracteres de um determinado comprimento.</summary>
      <param name="minLength">O comprimento mínimo do parâmetro de rota.</param>
      <param name="maxLength">O comprimento máximo do parâmetro de rota.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.Length">
      <summary>Obtém o comprimento do parâmetro de rota, se houver um definido.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="P:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.MaxLength">
      <summary>Obtém o comprimento máximo do parâmetro de rota, se houver um definido.</summary>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.LengthRouteConstraint.MinLength">
      <summary>Obtém o comprimento mínimo do parâmetro de rota, se houver um definido.</summary>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.LongRouteConstraint">
      <summary>Restringe um parâmetro de rota para representar apenas valores de inteiro de 64 bits.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LongRouteConstraint.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Routing.Constraints.LongRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.LongRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint">
      <summary>Restringe um parâmetro de rota para ser uma cadeia de caracteres com um comprimento máximo.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint.#ctor(System.Int32)"></member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MaxLengthRouteConstraint.MaxLength">
      <summary>Obtém o comprimento máximo do parâmetro de rota.</summary>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint">
      <summary>Restringe um parâmetro de rota para ser um inteiro com um valor máximo.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint.#ctor(System.Int64)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint" />.</summary>
      <param name="max">O valor máximo.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MaxRouteConstraint.Max">
      <summary>Obtém o valor máximo do parâmetro de rota.</summary>
      <returns>O valor máximo do parâmetro de rota.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint">
      <summary>Restringe um parâmetro de rota para ser uma cadeia de caracteres com um comprimento máximo.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint.#ctor(System.Int32)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint" />.</summary>
      <param name="minLength">O comprimento mínimo.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome da comparação.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MinLengthRouteConstraint.MinLength">
      <summary>Obtém o comprimento mínimo do parâmetro de rota.</summary>
      <returns>O comprimento mínimo do parâmetro de rota.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.MinRouteConstraint">
      <summary>Restringe um parâmetro de rota para ser um longo com um valor mínimo.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinRouteConstraint.#ctor(System.Int64)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Routing.Constraints.MinRouteConstraint" />.</summary>
      <param name="min">O valor mínimo.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.MinRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.MinRouteConstraint.Min">
      <summary>Obtém o valor mínimo do parâmetro de rota.</summary>
      <returns>O valor mínimo do parâmetro de rota.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint">
      <summary>Restringe uma rota por uma restrição interna que não falha quando um parâmetro opcional é definido com seu valor padrão.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.#ctor(System.Web.Routing.IRouteConstraint)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint" />.</summary>
      <param name="innerConstraint">A restrição interna para correspondência se o parâmetro não é um parâmetro opcional sem um valor</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.InnerConstraint">
      <summary>Obtém a restrição interna para correspondência se o parâmetro não é um parâmetro opcional sem um valor.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.OptionalRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)"></member>
    <member name="T:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint">
      <summary>Restringe um parâmetro de rota para ser um inteiro dentro de um determinado intervalo de valores.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.#ctor(System.Int64,System.Int64)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint" />.</summary>
      <param name="min">O valor mínimo.</param>
      <param name="max">O valor máximo.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.Max">
      <summary>Obtém o valor máximo do parâmetro de rota.</summary>
      <returns>O valor máximo do parâmetro de rota.</returns>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.RangeRouteConstraint.Min">
      <summary>Obtém o valor mínimo do parâmetro de rota.</summary>
      <returns>O valor mínimo do parâmetro de rota.</returns>
    </member>
    <member name="T:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint">
      <summary>Restringe um parâmetro de rota para corresponder a uma expressão regular.</summary>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint" /> com o padrão especificado.</summary>
      <param name="pattern">O padrão para correspondência.</param>
    </member>
    <member name="M:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="httpContext">O contexto HTTP.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="P:System.Web.Mvc.Routing.Constraints.RegexRouteConstraint.Pattern">
      <summary>Obtém o padrão de expressão regular para correspondência.</summary>
      <returns>O padrão de expressão regular para correspondência.</returns>
    </member>
  </members>
</doc>