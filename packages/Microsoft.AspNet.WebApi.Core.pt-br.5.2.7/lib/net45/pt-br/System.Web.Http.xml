<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>System.Web.Http</name>
  </assembly>
  <members>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.Http.InvalidByteRangeException)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Exception)">
      <summary>Cria uma <see cref="T:System.Net.Http.HttpResponseMessage" /> que representa uma exceção.</summary>
      <returns>A solicitação deve ser associada a uma instância de <see cref="T:System.Web.Http.HttpConfiguration" />.Uma <see cref="T:System.Net.Http.HttpResponseMessage" /> cujo conteúdo é uma representação serializada de uma instância de <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">A solicitação HTTP.</param>
      <param name="statusCode">O código do status da resposta.</param>
      <param name="exception">A exceção.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String)">
      <summary>Cria uma <see cref="T:System.Net.Http.HttpResponseMessage" /> que representa uma mensagem de erro.</summary>
      <returns>A solicitação deve ser associada a uma instância de <see cref="T:System.Web.Http.HttpConfiguration" />.Uma <see cref="T:System.Net.Http.HttpResponseMessage" /> cujo conteúdo é uma representação serializada de uma instância de <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">A solicitação HTTP.</param>
      <param name="statusCode">O código do status da resposta.</param>
      <param name="message">A mensagem de erro.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String,System.Exception)">
      <summary>Cria uma <see cref="T:System.Net.Http.HttpResponseMessage" /> que representa uma exceção com uma mensagem de erro.</summary>
      <returns>A solicitação deve ser associada a uma instância de <see cref="T:System.Web.Http.HttpConfiguration" />.Uma <see cref="T:System.Net.Http.HttpResponseMessage" /> cujo conteúdo é uma representação serializada de uma instância de <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">A solicitação HTTP.</param>
      <param name="statusCode">O código do status da resposta.</param>
      <param name="message">A mensagem de erro.</param>
      <param name="exception">A exceção.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Web.Http.HttpError)">
      <summary>Cria uma <see cref="T:System.Net.Http.HttpResponseMessage" /> que representa um erro.</summary>
      <returns>A solicitação deve ser associada a uma instância de <see cref="T:System.Web.Http.HttpConfiguration" />.Uma <see cref="T:System.Net.Http.HttpResponseMessage" /> cujo conteúdo é uma representação serializada de uma instância de <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">A solicitação HTTP.</param>
      <param name="statusCode">O código do status da resposta.</param>
      <param name="error">O erro de HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Cria uma <see cref="T:System.Net.Http.HttpResponseMessage" /> que representa um erro no estado do modelo.</summary>
      <returns>A solicitação deve ser associada a uma instância de <see cref="T:System.Web.Http.HttpConfiguration" />.Uma <see cref="T:System.Net.Http.HttpResponseMessage" /> cujo conteúdo é uma representação serializada de uma instância de <see cref="T:System.Web.Http.HttpError" />.</returns>
      <param name="request">A solicitação HTTP.</param>
      <param name="statusCode">O código do status da resposta.</param>
      <param name="modelState">O estado do modelo.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0)">
      <summary>Cria uma <see cref="T:System.Net.Http.HttpResponseMessage" /> conectada à <see cref="T:System.Net.Http.HttpRequestMessage" /> associada.</summary>
      <returns>Uma <see cref="T:System.Net.Http.HttpResponseMessage" /> inicializada, conectada à <see cref="T:System.Net.Http.HttpRequestMessage" /> associada.</returns>
      <param name="request">A mensagem de solicitação HTTP que levou a essa mensagem de resposta.</param>
      <param name="statusCode">O código do status da resposta HTTP.</param>
      <param name="value">O conteúdo da mensagem de resposta HTTP.</param>
      <typeparam name="T">O tipo de mensagem de resposta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Cria uma <see cref="T:System.Net.Http.HttpResponseMessage" /> conectada à <see cref="T:System.Net.Http.HttpRequestMessage" /> associada.</summary>
      <returns>Uma <see cref="T:System.Net.Http.HttpResponseMessage" /> inicializada, conectada à <see cref="T:System.Net.Http.HttpRequestMessage" /> associada.</returns>
      <param name="request">A mensagem de solicitação HTTP que levou a essa mensagem de resposta.</param>
      <param name="statusCode">O código do status da resposta HTTP.</param>
      <param name="value">O conteúdo da mensagem de resposta HTTP.</param>
      <param name="formatter">O formatador do tipo de mídia.</param>
      <typeparam name="T">O tipo de mensagem de resposta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Cria uma <see cref="T:System.Net.Http.HttpResponseMessage" /> conectada à <see cref="T:System.Net.Http.HttpRequestMessage" /> associada.</summary>
      <returns>Uma <see cref="T:System.Net.Http.HttpResponseMessage" /> inicializada, conectada à <see cref="T:System.Net.Http.HttpRequestMessage" /> associada.</returns>
      <param name="request">A mensagem de solicitação HTTP que levou a essa mensagem de resposta.</param>
      <param name="statusCode">O código do status da resposta HTTP.</param>
      <param name="value">O conteúdo da mensagem de resposta HTTP.</param>
      <param name="formatter">O formatador do tipo de mídia.</param>
      <param name="mediaType">O valor do cabeçalho do tipo de mídia.</param>
      <typeparam name="T">O tipo de mensagem de resposta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
      <summary>Cria uma <see cref="T:System.Net.Http.HttpResponseMessage" /> conectada à <see cref="T:System.Net.Http.HttpRequestMessage" /> associada.</summary>
      <returns>Uma <see cref="T:System.Net.Http.HttpResponseMessage" /> inicializada, conectada à <see cref="T:System.Net.Http.HttpRequestMessage" /> associada.</returns>
      <param name="request">A mensagem de solicitação HTTP que levou a essa mensagem de resposta.</param>
      <param name="statusCode">O código do status da resposta HTTP.</param>
      <param name="value">O conteúdo da mensagem de resposta HTTP.</param>
      <param name="formatter">O formatador do tipo de mídia.</param>
      <param name="mediaType">O tipo de mídia.</param>
      <typeparam name="T">O tipo de mensagem de resposta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Cria uma <see cref="T:System.Net.Http.HttpResponseMessage" /> conectada à <see cref="T:System.Net.Http.HttpRequestMessage" /> associada.</summary>
      <returns>Uma <see cref="T:System.Net.Http.HttpResponseMessage" /> inicializada, conectada à <see cref="T:System.Net.Http.HttpRequestMessage" /> associada.</returns>
      <param name="request">A mensagem de solicitação HTTP que levou a essa mensagem de resposta.</param>
      <param name="statusCode">O código do status da resposta HTTP.</param>
      <param name="value">O conteúdo da mensagem de resposta HTTP.</param>
      <param name="mediaType">O valor do cabeçalho do tipo de mídia.</param>
      <typeparam name="T">O tipo de mensagem de resposta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.String)">
      <summary>Cria uma <see cref="T:System.Net.Http.HttpResponseMessage" /> conectada à <see cref="T:System.Net.Http.HttpRequestMessage" /> associada.</summary>
      <returns>Uma <see cref="T:System.Net.Http.HttpResponseMessage" /> inicializada, conectada à <see cref="T:System.Net.Http.HttpRequestMessage" /> associada.</returns>
      <param name="request">A mensagem de solicitação HTTP que levou a essa mensagem de resposta.</param>
      <param name="statusCode">O código do status da resposta HTTP.</param>
      <param name="value">O conteúdo da mensagem de resposta HTTP.</param>
      <param name="mediaType">O tipo de mídia.</param>
      <typeparam name="T">O tipo de mensagem de resposta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,``0,System.Web.Http.HttpConfiguration)">
      <summary>Cria uma <see cref="T:System.Net.Http.HttpResponseMessage" /> conectada à <see cref="T:System.Net.Http.HttpRequestMessage" /> associada.</summary>
      <returns>Uma <see cref="T:System.Net.Http.HttpResponseMessage" /> inicializada, conectada à <see cref="T:System.Net.Http.HttpRequestMessage" /> associada.</returns>
      <param name="request">A mensagem de solicitação HTTP que levou a essa mensagem de resposta.</param>
      <param name="statusCode">O código do status da resposta HTTP.</param>
      <param name="value">O conteúdo da mensagem de resposta HTTP.</param>
      <param name="configuration">A configuração HTTP que contém o resolvedor de dependência, usado para resolver os serviços.</param>
      <typeparam name="T">O tipo de mensagem de resposta HTTP.</typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.CreateResponse``1(System.Net.Http.HttpRequestMessage,``0)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.DisposeRequestResources(System.Net.Http.HttpRequestMessage)">
      <summary>Descarta todos os recursos controlados associados à <paramref name="request" />, que foram adicionados através do método<see cref="M:System.Net.Http.HttpRequestMessageExtensions.RegisterForDispose(System.Net.Http.HttpRequestMessage,System.IDisposable)" />.</summary>
      <param name="request">A solicitação HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetActionDescriptor(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetClientCertificate(System.Net.Http.HttpRequestMessage)">
      <summary>Obtém o certificado X.509 atual de uma determinada solicitação HTTP.</summary>
      <returns>O <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> atual, ou nulo se um certificado não estiver disponível.</returns>
      <param name="request">A solicitação HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetConfiguration(System.Net.Http.HttpRequestMessage)">
      <summary>Recupera a <see cref="T:System.Web.Http.HttpConfiguration" /> para a solicitação em questão.</summary>
      <returns>A <see cref="T:System.Web.Http.HttpConfiguration" /> para a solicitação em questão.</returns>
      <param name="request">A solicitação HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetCorrelationId(System.Net.Http.HttpRequestMessage)">
      <summary>Recupera a <see cref="T:System.Guid" /> atribuída como a ID de correlação associada à <paramref name="request" /> em questão.O valor será criado e definido na primeira vez que este método for chamado.</summary>
      <returns>O objeto do <see cref="T:System.Guid" /> que representa a ID de correlação associada à solicitação.</returns>
      <param name="request">A solicitação HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetDependencyScope(System.Net.Http.HttpRequestMessage)">
      <summary>Recupera os <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> para a solicitação em questão ou nulo se não estiverem disponíveis.</summary>
      <returns>Os <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> para a solicitação em questão ou nulo se não estiverem disponíveis.</returns>
      <param name="request">A solicitação HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetQueryNameValuePairs(System.Net.Http.HttpRequestMessage)">
      <summary>Obtém a cadeia de consulta analisada como uma coleção de pares chave/valor.</summary>
      <returns>A cadeia de consulta como uma coleção de pares chave/valor.</returns>
      <param name="request">A solicitação HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetRequestContext(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetResourcesForDisposal(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetRouteData(System.Net.Http.HttpRequestMessage)">
      <summary>Recupera os <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> para a solicitação em questão ou nulo se não estiverem disponíveis.</summary>
      <returns>Os <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> para a solicitação em questão ou nulo se não estiverem disponíveis.</returns>
      <param name="request">A solicitação HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetSynchronizationContext(System.Net.Http.HttpRequestMessage)">
      <summary>Recupera os <see cref="T:System.Threading.SynchronizationContext" /> para a solicitação em questão ou nulo se não estiverem disponíveis.</summary>
      <returns>Os <see cref="T:System.Threading.SynchronizationContext" /> para a solicitação em questão ou nulo se não estiverem disponíveis.</returns>
      <param name="request">A solicitação HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.GetUrlHelper(System.Net.Http.HttpRequestMessage)">
      <summary>Obtém uma instância <see cref="T:System.Web.Http.Routing.UrlHelper" /> para uma solicitação HTTP.</summary>
      <returns>Uma instância <see cref="T:System.Web.Http.Routing.UrlHelper" /> que é inicializada para a solicitação HTTP especificada.</returns>
      <param name="request">A solicitação HTTP.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.IsBatchRequest(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.IsLocal(System.Net.Http.HttpRequestMessage)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.RegisterForDispose(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.IDisposable})"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.RegisterForDispose(System.Net.Http.HttpRequestMessage,System.IDisposable)">
      <summary>Adiciona o <paramref name="resource" /> fornecido a uma lista de recursos que será preparada por um host quando a <paramref name="request" /> estiver pronta.</summary>
      <param name="request">A solicitação HTTP que controla o ciclo de vida do <paramref name="resource" />.</param>
      <param name="resource">O recurso a ser preparado quando a <paramref name="request" /> estiver sendo preparada.</param>
    </member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.SetConfiguration(System.Net.Http.HttpRequestMessage,System.Web.Http.HttpConfiguration)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.SetRequestContext(System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpRequestContext)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.SetRouteData(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRouteData)"></member>
    <member name="M:System.Net.Http.HttpRequestMessageExtensions.ShouldIncludeErrorDetail(System.Net.Http.HttpRequestMessage)"></member>
    <member name="T:System.Net.Http.HttpResponseMessageExtensions">
      <summary>Representa as extensões das mensagens de resposta HTTP de uma operação ASP. NET.</summary>
    </member>
    <member name="M:System.Net.Http.HttpResponseMessageExtensions.TryGetContentValue``1(System.Net.Http.HttpResponseMessage,``0@)">
      <summary>Tenta recuperar o valor do conteúdo da <see cref="T:System.Net.Http.HttpResponseMessageExtensions" />.</summary>
      <returns>O resultado da recuperação do valor do conteúdo.</returns>
      <param name="response">A resposta da operação.</param>
      <param name="value">O valor do conteúdo.</param>
      <typeparam name="T">O tipo do valor a ser recuperado.</typeparam>
    </member>
    <member name="T:System.Net.Http.Formatting.MediaTypeFormatterExtensions">
      <summary>Representa extensões para adicionar itens de <see cref="T:System.Net.Http.Formatting.MediaTypeMapping" /> a um <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddUriPathExtensionMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.Net.Http.Headers.MediaTypeHeaderValue)"></member>
    <member name="M:System.Net.Http.Formatting.MediaTypeFormatterExtensions.AddUriPathExtensionMapping(System.Net.Http.Formatting.MediaTypeFormatter,System.String,System.String)"></member>
    <member name="T:System.Net.Http.Formatting.UriPathExtensionMapping">
      <summary>Fornece <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" />s das extensões de caminho que aparecem em uma <see cref="T:System.Uri" />. </summary>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.#ctor(System.String,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary> Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" />. </summary>
      <param name="uriPathExtension">A extensão que corresponde ao mediaType. Este valor não deve incluir ponto final ou caracteres curinga.</param>
      <param name="mediaType">O <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> retornado se a uriPathExtension for correspondida.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.#ctor(System.String,System.String)">
      <summary> Inicializa uma nova instância da classe <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" />. </summary>
      <param name="uriPathExtension">A extensão que corresponde ao mediaType. Este valor não deve incluir ponto final ou caracteres curinga.</param>
      <param name="mediaType">O tipo de mídia retornado se a uriPathExtension for correspondida.</param>
    </member>
    <member name="M:System.Net.Http.Formatting.UriPathExtensionMapping.TryMatchMediaType(System.Net.Http.HttpRequestMessage)">
      <summary> Retorna um valor que indica se esta instância do <see cref="T:System.Net.Http.Formatting.UriPathExtensionMapping" /> pode fornecer um <see cref="T:System.Net.Http.Headers.MediaTypeHeaderValue" /> para a <see cref="T:System.Uri" /> da solicitação. </summary>
      <returns>Se esta instância puder ser correspondida a uma extensão de arquivo na solicitação, retorna 1.0; caso contrário, 0.0.</returns>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> a ser verificada.</param>
    </member>
    <member name="P:System.Net.Http.Formatting.UriPathExtensionMapping.UriPathExtension">
      <summary> Obtém a extensão de caminho da <see cref="T:System.Uri" />. </summary>
      <returns>A extensão de caminho da <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="F:System.Net.Http.Formatting.UriPathExtensionMapping.UriPathExtensionKey">
      <summary>A chave da extensão de caminho da <see cref="T:System.Uri" />.</summary>
    </member>
    <member name="T:System.Web.Http.AcceptVerbsAttribute">
      <summary>Representa um atributo que especifica para quais métodos HTTP um método de ação responderá.</summary>
    </member>
    <member name="M:System.Web.Http.AcceptVerbsAttribute.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.AcceptVerbsAttribute" /> usando o método de ação para os quais responderá.</summary>
      <param name="method">O método HTTP para os quais o método de ação responderá.</param>
    </member>
    <member name="M:System.Web.Http.AcceptVerbsAttribute.#ctor(System.String[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.AcceptVerbsAttribute" /> ao usar uma lista de métodos HTTP para os quais o método de ação responderá.</summary>
      <param name="methods">Os métodos HTTP para os quais o método de ação responderá.</param>
    </member>
    <member name="P:System.Web.Http.AcceptVerbsAttribute.HttpMethods">
      <summary>Obtém ou define a lista de métodos HTTP para os quais o método de ação responderá.</summary>
      <returns>Obtém ou define a lista de métodos HTTP para os quais o método de ação responderá.</returns>
    </member>
    <member name="T:System.Web.Http.ActionNameAttribute">
      <summary>Representa um atributo usado para o nome de uma ação.</summary>
    </member>
    <member name="M:System.Web.Http.ActionNameAttribute.#ctor(System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ActionNameAttribute" />.</summary>
      <param name="name">O nome da ação.</param>
    </member>
    <member name="P:System.Web.Http.ActionNameAttribute.Name">
      <summary>Obtém ou define o nome da ação.</summary>
      <returns>O nome da ação.</returns>
    </member>
    <member name="T:System.Web.Http.AllowAnonymousAttribute">
      <summary>Especifica que ações e controladores são ignorados pelo <see cref="T:System.Web.Http.AuthorizeAttribute" /> durante a autorização.</summary>
    </member>
    <member name="M:System.Web.Http.AllowAnonymousAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.AllowAnonymousAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Http.ApiController">
      <summary>Define as propriedades e métodos do controlador API.</summary>
    </member>
    <member name="M:System.Web.Http.ApiController.#ctor"></member>
    <member name="P:System.Web.Http.ApiController.ActionContext">
      <summary>Obtém o contexto da ação.</summary>
      <returns>O contexto da ação.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.BadRequest">
      <summary>Cria um <see cref="T:System.Web.Http.Results.BadRequestResult" />.</summary>
      <returns>Uma <see cref="T:System.Web.Http.Results.BadRequestResult" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.BadRequest(System.String)">
      <summary>Cria um <see cref="T:System.Web.Http.Results.ErrorMessageResult" /> (400 Solicitação Inválida) com a mensagem de erro especificada.</summary>
      <returns>Um <see cref="T:System.Web.Http.Results.InvalidModelStateResult" /> com o estado do modelo especificado.</returns>
      <param name="message">A mensagem de erro visível pelo usuário.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Cria um <see cref="T:System.Web.Http.Results.InvalidModelStateResult" /> com o estado do modelo especificado.</summary>
      <returns>Um <see cref="T:System.Web.Http.Results.InvalidModelStateResult" /> com o estado do modelo especificado.</returns>
      <param name="modelState">O estado do modelo a ser incluído no erro.</param>
    </member>
    <member name="P:System.Web.Http.ApiController.Configuration">
      <summary>Obtém o <see cref="T:System.Web.Http.HttpConfiguration" /> do <see cref="T:System.Web.Http.ApiController" /> atual.</summary>
      <returns>A <see cref="T:System.Web.Http.HttpConfiguration" /> do <see cref="T:System.Web.Http.ApiController" /> atual.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Conflict">
      <summary>Cria um <see cref="T:System.Web.Http.Results.ConflictResult" /> (409 Conflito).</summary>
      <returns>Uma <see cref="T:System.Web.Http.Results.ConflictResult" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
      <summary>Cria um &lt;consulte cref="T:System.Web.Http.NegotiatedContentResult`1" /&gt; com os valores especificados.</summary>
      <returns>Um &lt;consulte cref="T:System.Web.Http.NegotiatedContentResult`1" /&gt; com os valores especificados.</returns>
      <param name="statusCode">O código de status HTTP para a mensagem de resposta.</param>
      <param name="value">O valor de conteúdo a ser negociado e formatado no corpo da entidade.</param>
      <typeparam name="T">O tipo de conteúdo no corpo da entidade.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
      <summary>Cria um &lt;consulte cref="T:System.Web.Http.FormattedContentResult`1" /&gt; com os valores especificados.</summary>
      <returns>Um &lt;consulte cref="T:System.Web.Http.FormattedContentResult`1" /&gt; com os valores especificados.</returns>
      <param name="statusCode">O código de status HTTP para a mensagem de resposta.</param>
      <param name="value">O valor de conteúdo a formatar no corpo da entidade.</param>
      <param name="formatter">O formatador a utilizar para formatar o conteúdo.</param>
      <typeparam name="T">O tipo de conteúdo no corpo da entidade.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
      <summary>Cria um &lt;consulte cref="T:System.Web.Http.FormattedContentResult`1" /&gt; com os valores especificados.</summary>
      <returns>Um &lt;consulte cref="T:System.Web.Http.FormattedContentResult`1" /&gt; com os valores especificados.</returns>
      <param name="statusCode">O código de status HTTP para a mensagem de resposta.</param>
      <param name="value">O valor de conteúdo a formatar no corpo da entidade.</param>
      <param name="formatter">O formatador a utilizar para formatar o conteúdo.</param>
      <param name="mediaType"> O valor do cabeçalho Content-Type, ou &lt;consulte langword="null" /&gt; para que o formatador selecione um valor padrão. </param>
      <typeparam name="T">O tipo de conteúdo no corpo da entidade.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
      <summary>Cria um &lt;consulte cref="T:System.Web.Http.FormattedContentResult`1" /&gt; com os valores especificados.</summary>
      <returns>Um &lt;consulte cref="T:System.Web.Http.FormattedContentResult`1" /&gt; com os valores especificados.</returns>
      <param name="statusCode">O código de status HTTP para a mensagem de resposta.</param>
      <param name="value">O valor de conteúdo a formatar no corpo da entidade.</param>
      <param name="formatter">O formatador a utilizar para formatar o conteúdo.</param>
      <param name="mediaType">O valor do cabeçalho Content-Type.</param>
      <typeparam name="T">O tipo de conteúdo no corpo da entidade.</typeparam>
    </member>
    <member name="P:System.Web.Http.ApiController.ControllerContext">
      <summary>Obtém o <see cref="T:System.Web.Http.HttpConfiguration" /> do <see cref="T:System.Web.Http.ApiController" /> atual.</summary>
      <returns>A <see cref="T:System.Web.Http.HttpConfiguration" /> do <see cref="T:System.Web.Http.ApiController" /> atual.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
      <summary>Cria um <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" /> (201 Criado) com os valores especificados.</summary>
      <returns>Um <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" /> com os valores especificados.</returns>
      <param name="location">O local no qual o conteúdo foi criado.</param>
      <param name="content">O valor de conteúdo a ser negociado e formatado no corpo da entidade.</param>
      <typeparam name="T">O tipo de conteúdo no corpo da entidade.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
      <summary>Cria um <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" /> (201 Criado) com os valores especificados.</summary>
      <returns>Um <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" /> com os valores especificados.</returns>
      <param name="location">O local no qual o conteúdo foi criado.</param>
      <param name="content">O valor de conteúdo a ser negociado e formatado no corpo da entidade.</param>
      <typeparam name="T">O tipo de conteúdo no corpo da entidade.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
      <summary>Cria um <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> (201 Criado) com os valores especificados.</summary>
      <returns>Um <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> com os valores especificados.</returns>
      <param name="routeName">O nome da rota a ser usado para gerar a URL.</param>
      <param name="routeValues">Os dados da rota a serem usados para gerar a URL.</param>
      <param name="content">O valor de conteúdo a ser negociado e formatado no corpo da entidade.</param>
      <typeparam name="T">O tipo de conteúdo no corpo da entidade.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
      <summary>Cria um <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> (201 Criado) com os valores especificados.</summary>
      <returns>Um <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> com os valores especificados.</returns>
      <param name="routeName">O nome da rota a ser usado para gerar a URL.</param>
      <param name="routeValues">Os dados da rota a serem usados para gerar a URL.</param>
      <param name="content">O valor de conteúdo a ser negociado e formatado no corpo da entidade.</param>
      <typeparam name="T">O tipo de conteúdo no corpo da entidade.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Dispose">
      <summary>Realiza tarefas definidas pelo aplicativo associadas à liberação ou redefinição de recursos não gerenciados.</summary>
    </member>
    <member name="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados que são usados pelo objeto e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">verdadeiro para liberar os recursos gerenciados e os não gerenciados; falso para liberar apenas os recursos não gerenciados.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
      <summary>Executa uma única operação HTTP de forma assíncrona.</summary>
      <returns>A tarefa recém-iniciada.</returns>
      <param name="controllerContext">O contexto do controlador de uma única operação HTTP.</param>
      <param name="cancellationToken">O cancelamento do token atribuído à operação HTTP.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Inicializa a instância <see cref="T:System.Web.Http.ApiController" /> com o controllerContext especificado.</summary>
      <param name="controllerContext">O objeto <see cref="T:System.Web.Http.Controllers.HttpControllerContext" /> que é usado para a inicialização.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.InternalServerError">
      <summary>Cria um <see cref="T:System.Web.Http.Results.InternalServerErrorResult" /> (500 Erro Interno do Servidor).</summary>
      <returns>Uma <see cref="T:System.Web.Http.Results.InternalServerErrorResult" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
      <summary>Cria um <see cref="T:System.Web.Http.Results.ExceptionResult" /> (500 Erro Interno do Servidor) com a exceção especificada.</summary>
      <returns>Um <see cref="T:System.Web.Http.Results.ExceptionResult" /> com a exceção especificada.</returns>
      <param name="exception">A exceção a ser incluída no erro.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Json``1(``0)">
      <summary>Cria um <see cref="T:System.Web.Http.Results.JsonResult`1" /> (200 OK) com o valor especificado.</summary>
      <returns>Um <see cref="T:System.Web.Http.Results.JsonResult`1" /> com o valor especificado.</returns>
      <param name="content">O valor de conteúdo a serializar no corpo da entidade.</param>
      <typeparam name="T">O tipo de conteúdo no corpo da entidade.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
      <summary>Cria um <see cref="T:System.Web.Http.Results.JsonResult`1" /> (200 OK) com os valores especificados.</summary>
      <returns>Um <see cref="T:System.Web.Http.Results.JsonResult`1" /> com os valores especificados.</returns>
      <param name="content">O valor de conteúdo a serializar no corpo da entidade.</param>
      <param name="serializerSettings">As configurações do serializador.</param>
      <typeparam name="T">O tipo de conteúdo no corpo da entidade.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
      <summary>Cria um <see cref="T:System.Web.Http.Results.JsonResult`1" /> (200 OK) com os valores especificados.</summary>
      <returns>Um <see cref="T:System.Web.Http.Results.JsonResult`1" /> com os valores especificados.</returns>
      <param name="content">O valor de conteúdo a serializar no corpo da entidade.</param>
      <param name="serializerSettings">As configurações do serializador.</param>
      <param name="encoding">A codificação do conteúdo.</param>
      <typeparam name="T">O tipo de conteúdo no corpo da entidade.</typeparam>
    </member>
    <member name="P:System.Web.Http.ApiController.ModelState">
      <summary>Obtém o estado do modelo após o processo de associação do modelo.</summary>
      <returns>O estado do modelo após o processo de associação do modelo.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.NotFound">
      <summary>Cria um <see cref="T:System.Web.Http.Results.NotFoundResult" />.</summary>
      <returns>Uma <see cref="T:System.Web.Http.Results.NotFoundResult" />.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Ok">
      <summary>Cria um <see cref="T:System.Web.Http.Results.OkResult" /> (200 OK).</summary>
      <returns>Um <see cref="T:System.Web.Http.Results.OkResult" /> .</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Ok``1(``0)">
      <summary>Cria um <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> com os valores especificados.</summary>
      <returns>Um <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> com os valores especificados.</returns>
      <param name="content">O valor de conteúdo a ser negociado e formatado no corpo da entidade.</param>
      <typeparam name="T">O tipo de conteúdo no corpo da entidade.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Redirect(System.String)">
      <summary>Cria um resultado de redirecionamento (302 Não encontrado) com o valor especificado.</summary>
      <returns>Um resultado de redirecionamento (302 Não encontrado) com o valor especificado.</returns>
      <param name="location">O local para o qual redirecionar.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Redirect(System.Uri)">
      <summary>Cria um resultado de redirecionamento (302 Não encontrado) com o valor especificado.</summary>
      <returns>Um resultado de redirecionamento (302 Não encontrado) com o valor especificado.</returns>
      <param name="location">O local para o qual redirecionar.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Cria um resultado de rota (302 Não encontrado) com os valores especificados.</summary>
      <returns>Um resultado de rota (302 Não encontrado) com os valores especificados.</returns>
      <param name="routeName">O nome da rota a ser usado para gerar a URL.</param>
      <param name="routeValues">Os dados da rota a serem usados para gerar a URL.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
      <summary>Cria um resultado de rota (302 Não encontrado) com os valores especificados.</summary>
      <returns>Um resultado de rota (302 Não encontrado) com os valores especificados.</returns>
      <param name="routeName">O nome da rota a ser usado para gerar a URL.</param>
      <param name="routeValues">Os dados da rota a serem usados para gerar a URL.</param>
    </member>
    <member name="P:System.Web.Http.ApiController.Request">
      <summary>Obtém ou define o HttpRequestMessage do <see cref="T:System.Web.Http.ApiController" /> atual.</summary>
      <returns>O HttpRequestMessage do <see cref="T:System.Web.Http.ApiController" /> atual.</returns>
    </member>
    <member name="P:System.Web.Http.ApiController.RequestContext">
      <summary>Obtém o contexto da solicitação.</summary>
      <returns>O contexto da solicitação.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
      <summary>Cria um <see cref="T:System.Web.Http.Results.ResponseMessageResult" /> com a resposta especificada.</summary>
      <returns>Um <see cref="T:System.Web.Http.Results.ResponseMessageResult" /> para a resposta especificada.</returns>
      <param name="response">A mensagem de resposta HTTP.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
      <summary>Cria um <see cref="T:System.Web.Http.StatusCodeResult" /> com o código de status especificado.</summary>
      <returns>Cria um <see cref="T:System.Web.Http.StatusCodeResult" /> com o código de status especificado.</returns>
      <param name="status">O código de status HTTP para a mensagem de resposta</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
      <summary>Cria um <see cref="T:System.Web.Http.Results.UnauthorizedResult" /> (401 Não Autorizado) com os valores especificados.</summary>
      <returns>Um <see cref="T:System.Web.Http.Results.UnauthorizedResult" /> com os valores especificados.</returns>
      <param name="challenges">Os desafios de WWW-Authenticate.</param>
    </member>
    <member name="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
      <summary>Cria um <see cref="T:System.Web.Http.Results.UnauthorizedResult" /> (401 Não Autorizado) com os valores especificados.</summary>
      <returns>Um <see cref="T:System.Web.Http.Results.UnauthorizedResult" /> com os valores especificados.</returns>
      <param name="challenges">Os desafios de WWW-Authenticate.</param>
    </member>
    <member name="P:System.Web.Http.ApiController.Url">
      <summary>Obtém uma instância de um <see cref="T:System.Web.Http.Routing.UrlHelper" />, que é usado para gerar URLs para outras APIs. </summary>
      <returns>Um <see cref="T:System.Web.Http.Routing.UrlHelper" /> que é usado para gerar URLs para outras APIs.</returns>
    </member>
    <member name="P:System.Web.Http.ApiController.User">
      <summary>Retorna o principal atual associado a esta solicitação.</summary>
      <returns>O principal atual associado a esta solicitação.</returns>
    </member>
    <member name="M:System.Web.Http.ApiController.Validate``1(``0)">
      <summary>Valida a entidade fornecida e adiciona os erros de validação ao estado do modelo abaixo do prefixo vazio, se houver.</summary>
      <param name="entity">A entidade sendo validada.</param>
      <typeparam name="TEntity">O tipo da entidade a ser valida.</typeparam>
    </member>
    <member name="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
      <summary>Valida a entidade fornecida e adiciona os erros de validação ao estado do modelo, se houver.</summary>
      <param name="entity">A entidade sendo validada.</param>
      <param name="keyPrefix">O prefixo de chave abaixo dos quais os erros de estado do modelo seriam adicionados no estado de modelo.</param>
      <typeparam name="TEntity">O tipo da entidade a ser valida.</typeparam>
    </member>
    <member name="T:System.Web.Http.AuthorizeAttribute">
      <summary>Especifica o filtro de autorização que verifica o <see cref="T:System.Security.Principal.IPrincipal" /> da solicitação.</summary>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.AuthorizeAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.HandleUnauthorizedRequest(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Processa solicitações cuja autorização falhou.</summary>
      <param name="actionContext">O contexto.</param>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.IsAuthorized(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Indica se o controle especificado é autorizado.</summary>
      <returns>verdadeiro se o controle for autorizado; caso contrário, falso.</returns>
      <param name="actionContext">O contexto.</param>
    </member>
    <member name="M:System.Web.Http.AuthorizeAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Chama quando uma ação está sendo autorizada.</summary>
      <param name="actionContext">O contexto.</param>
      <exception cref="T:System.ArgumentNullException">O parâmetro de contexto é nulo.</exception>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.Roles">
      <summary>Obtém ou define as funções autorizadas. </summary>
      <returns>A cadeia de funções. </returns>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.TypeId">
      <summary>Obtém um identificador exclusivo para este atributo.</summary>
      <returns>O identificador exclusivo para este atributo.</returns>
    </member>
    <member name="P:System.Web.Http.AuthorizeAttribute.Users">
      <summary>Obtém ou define os usuários autorizados. </summary>
      <returns>A cadeia de usuários. </returns>
    </member>
    <member name="T:System.Web.Http.FromBodyAttribute">
      <summary> Um atributo que especifica que um parâmetro de ação vem somente de um corpo de entidade da <see cref="T:System.Net.Http.HttpRequestMessage" /> de entrada. </summary>
    </member>
    <member name="M:System.Web.Http.FromBodyAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.FromBodyAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.FromBodyAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Obtém uma associação de parâmetros.</summary>
      <returns>A associação do parâmetro.</returns>
      <param name="parameter">O descritor do parâmetro.</param>
    </member>
    <member name="T:System.Web.Http.FromUriAttribute">
      <summary>Um atributo que especifica que um parâmetro de ação vem do URI da <see cref="T:System.Net.Http.HttpRequestMessage" /> de entrada.</summary>
    </member>
    <member name="M:System.Web.Http.FromUriAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.FromUriAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.FromUriAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
      <summary>Obtém as fábricas do provedor de valor para o associador de modelo.</summary>
      <returns>A coleção de objetos <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</returns>
      <param name="configuration">A configuração.</param>
    </member>
    <member name="T:System.Web.Http.HttpBindNeverAttribute">
      <summary>Representa os atributos que especificam que a associação HTTP deve excluir uma propriedade.</summary>
    </member>
    <member name="M:System.Web.Http.HttpBindNeverAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.HttpBindNeverAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Http.HttpBindRequiredAttribute">
      <summary>Representa o atributo necessário para a associação http.</summary>
    </member>
    <member name="M:System.Web.Http.HttpBindRequiredAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.HttpBindRequiredAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Http.HttpConfiguration">
      <summary>Representa uma configuração de instâncias <see cref="T:System.Web.Http.HttpServer" />. </summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.#ctor(System.Web.Http.HttpRouteCollection)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.HttpConfiguration" /> com uma coleção de rotas HTTP.</summary>
      <param name="routes">A coleção de rotas HTTP a ser associada a esta instância.</param>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.DependencyResolver">
      <summary>Obtém ou define o resolvedor de dependência associado a esta instância.</summary>
      <returns>O resolvedor de dependência.</returns>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.Dispose">
      <summary>Realiza tarefas definidas pelo aplicativo associadas à liberação ou redefinição de recursos não gerenciados.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados que são usados pelo objeto e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">verdadeiro para liberar os recursos gerenciados e os não gerenciados; falso para liberar apenas os recursos não gerenciados.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfiguration.EnsureInitialized">
      <summary>Chame o gancho do Inicializador.Ele é considerado imutável deste ponto em diante.É seguro chamar isso várias vezes.</summary>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Filters">
      <summary>Obtém a lista de filtros que se aplicam a todas as solicitações atendidas usando esta instância <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
      <returns>A lista de filtros.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Formatters">
      <summary>Obtém os formatadores do tipo de mídia para esta instância.</summary>
      <returns>A coleção de objetos <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.IncludeErrorDetailPolicy">
      <summary>Obtém ou define o valor que indica se os detalhes de erro devem ser incluídos nas mensagens de erro.</summary>
      <returns>O valor <see cref="T:System.Web.Http.IncludeErrorDetailPolicy" /> que indica a política com os detalhes do erro.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Initializer">
      <summary> Obtém ou define a ação que realizará a inicialização final da instância <see cref="T:System.Web.Http.HttpConfiguration" /> antes de ser usada para processar as solicitações. </summary>
      <returns>A ação que realizará a inicialização final da instância <see cref="T:System.Web.Http.HttpConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.MessageHandlers">
      <summary>Obtém uma lista ordenada de instâncias do <see cref="T:System.Net.Http.DelegatingHandler" /> a ser invocada quando uma <see cref="T:System.Net.Http.HttpRequestMessage" /> é enviada para uma pilha e uma <see cref="T:System.Net.Http.HttpResponseMessage" /> é enviada de volta. </summary>
      <returns>A coleção de manipuladores de mensagens.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.ParameterBindingRules">
      <summary>Obtém a coleção de regras de como os parâmetros devem ser associados.</summary>
      <returns>Uma coleção de funções que podem produzir uma associação de parâmetros para um parâmetro determinado.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Properties">
      <summary>Obtém as propriedades associadas a esta instância.</summary>
      <returns>O <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2" /> que contém as propriedades.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Routes">
      <summary>Obtém a <see cref="T:System.Web.Http.HttpRouteCollection" /> associada a esta instância do <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
      <returns>A <see cref="T:System.Web.Http.HttpRouteCollection" />.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.Services">
      <summary>Obtém o contêiner dos serviços padrão associados a esta instância.</summary>
      <returns>A <see cref="T:System.Web.Http.Controllers.ServicesContainer" /> que contém os serviços padrão para esta instância.</returns>
    </member>
    <member name="P:System.Web.Http.HttpConfiguration.VirtualPathRoot">
      <summary>Obtém o caminho virtual raiz.</summary>
      <returns>O caminho virtual raiz.</returns>
    </member>
    <member name="T:System.Web.Http.HttpConfigurationExtensions">
      <summary>Contém os métodos de extensão da classe <see cref="T:System.Web.Http.HttpConfiguration" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.BindParameter(System.Web.Http.HttpConfiguration,System.Type,System.Web.Http.ModelBinding.IModelBinder)"></member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.MapHttpAttributeRoutes(System.Web.Http.HttpConfiguration)"></member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.MapHttpAttributeRoutes(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.IDirectRouteProvider)">
      <summary>Mapeia as rotas definidas por atributos para o aplicativo.</summary>
      <param name="configuration">A configuração do servidor.</param>
      <param name="directRouteProvider">O <see cref="T:System.Web.Http.Routing.IDirectRouteProvider" /> a ser usado para descobrir e criar rotas.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.MapHttpAttributeRoutes(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary>Mapeia as rotas definidas por atributos para o aplicativo.</summary>
      <param name="configuration">A configuração do servidor.</param>
      <param name="constraintResolver">O resolvedor de restrição.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.MapHttpAttributeRoutes(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.IInlineConstraintResolver,System.Web.Http.Routing.IDirectRouteProvider)">
      <summary>Mapeia as rotas definidas por atributos para o aplicativo.</summary>
      <param name="configuration">A configuração do servidor.</param>
      <param name="constraintResolver">O <see cref="T:System.Web.Http.Routing.IInlineConstraintResolver" /> a ser usado para resolver restrições embutidas.</param>
      <param name="directRouteProvider">O <see cref="T:System.Web.Http.Routing.IDirectRouteProvider" /> a ser usado para descobrir e criar rotas.</param>
    </member>
    <member name="M:System.Web.Http.HttpConfigurationExtensions.SuppressHostPrincipal(System.Web.Http.HttpConfiguration)"></member>
    <member name="T:System.Web.Http.HttpDeleteAttribute">
      <summary>Especifica que uma ação suporta o método HTTP DELETE.</summary>
    </member>
    <member name="M:System.Web.Http.HttpDeleteAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.HttpDeleteAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpDeleteAttribute.HttpMethods">
      <summary>Obtém os métodos http correspondentes a este atributo.</summary>
      <returns>Os métodos http correspondentes a este atributo.</returns>
    </member>
    <member name="T:System.Web.Http.HttpError">
      <summary>Define um contêiner serializável para armazenar informações sobre erros. Essa informação é armazenada como pares de chave/valor. As chaves de dicionário para pesquisar informações de erro padrão estão disponíveis no tipo <see cref="T:System.Web.Http.HttpErrorKeys" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.HttpError" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.Exception,System.Boolean)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.HttpError" /> para <paramref name="exception" />.</summary>
      <param name="exception">A exceção a usar para as informações de erro.</param>
      <param name="includeErrorDetail">true para incluir as informações de exceção no erro; caso contrário, false.</param>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.HttpError" /> contendo a mensagem de erro <paramref name="message" />.</summary>
      <param name="message">A mensagem de erro a associar a esta instância.</param>
    </member>
    <member name="M:System.Web.Http.HttpError.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.Boolean)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.HttpError" /> para <paramref name="modelState" />.</summary>
      <param name="modelState">O modelo de estado inválido a usar para as informações de erro.</param>
      <param name="includeErrorDetail">true para incluir mensagens de exceção no erro; caso contrário, false.</param>
    </member>
    <member name="P:System.Web.Http.HttpError.ExceptionMessage">
      <summary>Obtém ou define a mensagem do <see cref="T:System.Exception" />, se disponível.</summary>
      <returns>A mensagem do <see cref="T:System.Exception" />, se disponível.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.ExceptionType">
      <summary>Obtém ou define o tipo do <see cref="T:System.Exception" />, se disponível.</summary>
      <returns>O tipo do <see cref="T:System.Exception" />, se disponível.</returns>
    </member>
    <member name="M:System.Web.Http.HttpError.GetPropertyValue``1(System.String)">
      <summary>Obtém um valor de propriedade particular a partir desta instância de erro.</summary>
      <returns>Um determinado valor de propriedade a partir desta instância de erro.</returns>
      <param name="key">O nome da propriedade de erro.</param>
      <typeparam name="TValue">O tipo da propriedade.</typeparam>
    </member>
    <member name="P:System.Web.Http.HttpError.InnerException">
      <summary>Obtém o <see cref="T:System.Exception" /> interno associado a esta instância, se disponível.</summary>
      <returns>O <see cref="T:System.Exception" /> interno associado a esta instância, se disponível.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.Message">
      <summary>Obtém ou define a mensagem genérica visível pelo usuário explicando a causa do erro. As informações divulgadas neste campo devem ser consideradas públicas, já que passarão pela transferência eletrônica independentemente do <see cref="T:System.Web.Http.IncludeErrorDetailPolicy" />. Como resultado, deve-se ter cautela para não divulgar informações confidenciais sobre o servidor ou o aplicativo.</summary>
      <returns>A mensagem genérica visível pelo usuário explicando a causa do erro. As informações divulgadas neste campo devem ser consideradas públicas, já que passarão pela transferência eletrônica independentemente do <see cref="T:System.Web.Http.IncludeErrorDetailPolicy" />. Como resultado, deve-se ter cautela para não divulgar informações confidenciais sobre o servidor ou o aplicativo.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.MessageDetail">
      <summary>Obtém ou define uma descrição detalhada do erro para que o desenvolvedor entenda exatamente o que falhou.</summary>
      <returns>Uma descrição detalhada do erro para que o desenvolvedor entenda exatamente o que falhou.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.ModelState">
      <summary>Obtém o <see cref="P:System.Web.Http.HttpError.ModelState" /> que contém informações sobre os erros que ocorreram durante a associação de modelo.</summary>
      <returns>O <see cref="P:System.Web.Http.HttpError.ModelState" /> que contém informações sobre os erros que ocorreram durante a associação de modelo.</returns>
    </member>
    <member name="P:System.Web.Http.HttpError.StackTrace">
      <summary>Obtém ou define as informações do rastreamento de pilha associadas a esta instância, se disponível.</summary>
      <returns>As informações do rastreamento de pilha associadas a esta instância, se disponível.</returns>
    </member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>Este método está reservado e não deve ser usado.</summary>
      <returns>Sempre retorna nulo.</returns>
    </member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>Gera uma instância <see cref="T:System.Web.Http.HttpError" /> de sua representação XML.</summary>
      <param name="reader">O fluxo XmlReader a partir do qual o objeto é desserializado.</param>
    </member>
    <member name="M:System.Web.Http.HttpError.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>Converte uma instância <see cref="T:System.Web.Http.HttpError" /> em sua representação XML.</summary>
      <param name="writer">O fluxo XmlWriter para o qual o objeto é serializado.</param>
    </member>
    <member name="T:System.Web.Http.HttpErrorKeys">
      <summary> Fornece chaves para pesquisar informações de erro armazenadas no dicionário <see cref="T:System.Web.Http.HttpError" />. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ErrorCodeKey">
      <summary> Fornece uma chave para o ErrorCode. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ExceptionMessageKey">
      <summary> Fornece uma chave para o ExceptionMessage. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ExceptionTypeKey">
      <summary> Fornece uma chave para o ExceptionType. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.InnerExceptionKey">
      <summary> Fornece uma chave para o InnerException. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.MessageDetailKey">
      <summary> Fornece uma chave para o MessageDetail. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.MessageKey">
      <summary> Fornece uma chave para o Message. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.MessageLanguageKey">
      <summary> Fornece uma chave para o MessageLanguage. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.ModelStateKey">
      <summary> Fornece uma chave para o ModelState. </summary>
    </member>
    <member name="F:System.Web.Http.HttpErrorKeys.StackTraceKey">
      <summary> Fornece uma chave para o StackTrace. </summary>
    </member>
    <member name="T:System.Web.Http.HttpGetAttribute">
      <summary>Especifica que uma ação suporta o método HTTP GET.</summary>
    </member>
    <member name="M:System.Web.Http.HttpGetAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.HttpGetAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpGetAttribute.HttpMethods">
      <summary>Obtém os métodos http correspondentes a este atributo.</summary>
      <returns>Os métodos http correspondentes a este atributo.</returns>
    </member>
    <member name="T:System.Web.Http.HttpHeadAttribute">
      <summary> Especifica que uma ação suporta o método HTTP HEAD. </summary>
    </member>
    <member name="M:System.Web.Http.HttpHeadAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.HttpHeadAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpHeadAttribute.HttpMethods">
      <summary>Obtém os métodos HTTP correspondentes a este atributo.</summary>
      <returns>Os métodos HTTP correspondentes a este atributo.</returns>
    </member>
    <member name="T:System.Web.Http.HttpOptionsAttribute">
      <summary>Representa um atributo que é usado para restringir um método HTTP a fim de que o método trate apenas das solicitações HTTP OPTIONS.</summary>
    </member>
    <member name="M:System.Web.Http.HttpOptionsAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.HttpOptionsAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpOptionsAttribute.HttpMethods">
      <summary>Obtém os métodos HTTP correspondentes a este atributo.</summary>
      <returns>Os métodos HTTP correspondentes a este atributo.</returns>
    </member>
    <member name="T:System.Web.Http.HttpPatchAttribute">
      <summary> Especifica que uma ação suporta o método HTTP PATCH. </summary>
    </member>
    <member name="M:System.Web.Http.HttpPatchAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.HttpPatchAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpPatchAttribute.HttpMethods">
      <summary>Obtém os métodos HTTP correspondentes a este atributo.</summary>
      <returns>Os métodos HTTP correspondentes a este atributo.</returns>
    </member>
    <member name="T:System.Web.Http.HttpPostAttribute">
      <summary>Especifica que uma ação suporta o método HTTP POST. </summary>
    </member>
    <member name="M:System.Web.Http.HttpPostAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.HttpPostAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpPostAttribute.HttpMethods">
      <summary>Obtém os métodos HTTP correspondentes a este atributo.</summary>
      <returns>Os métodos HTTP correspondentes a este atributo.</returns>
    </member>
    <member name="T:System.Web.Http.HttpPutAttribute">
      <summary>Representa um atributo que é usado para restringir um método HTTP a fim de que o método trate apenas das solicitações HTTP PUT.</summary>
    </member>
    <member name="M:System.Web.Http.HttpPutAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.HttpPutAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.HttpPutAttribute.HttpMethods">
      <summary>Obtém os métodos HTTP correspondentes a este atributo.</summary>
      <returns>Os métodos HTTP correspondentes a este atributo.</returns>
    </member>
    <member name="T:System.Web.Http.HttpResponseException">
      <summary> Uma exceção que permite que um determinado <see cref="T:System.Net.Http.HttpResponseMessage" /> seja retornado ao cliente. </summary>
    </member>
    <member name="M:System.Web.Http.HttpResponseException.#ctor(System.Net.Http.HttpResponseMessage)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.HttpResponseException" />.</summary>
      <param name="response">A resposta HTTP a ser retornada ao cliente.</param>
    </member>
    <member name="M:System.Web.Http.HttpResponseException.#ctor(System.Net.HttpStatusCode)">
      <summary> Inicia uma nova instância da classe <see cref="T:System.Web.Http.HttpResponseException" />. </summary>
      <param name="statusCode">O código do status da resposta.</param>
    </member>
    <member name="P:System.Web.Http.HttpResponseException.Response">
      <summary>Obtém a resposta HTTP a ser retornada ao cliente.</summary>
      <returns>A <see cref="T:System.Net.Http.HttpResponseMessage" /> que representa a resposta HTTP.</returns>
    </member>
    <member name="T:System.Web.Http.HttpRouteCollection">
      <summary>Um conjunto de instâncias de <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.HttpRouteCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.#ctor(System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.HttpRouteCollection" />.</summary>
      <param name="virtualPathRoot">O caminho virtual raiz.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Add(System.String,System.Web.Http.Routing.IHttpRoute)">
      <summary>Adiciona uma instância <see cref="T:System.Web.Http.Routing.IHttpRoute" /> à coleção.</summary>
      <param name="name">O nome da rota.</param>
      <param name="route">A instância <see cref="T:System.Web.Http.Routing.IHttpRoute" /> para adicionar à coleção.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Clear">
      <summary>Remove todos os itens da coleção.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Contains(System.Web.Http.Routing.IHttpRoute)">
      <summary>Determina se a coleção contém uma <see cref="T:System.Web.Http.Routing.IHttpRoute" /> específica.</summary>
      <returns>verdadeiro se a <see cref="T:System.Web.Http.Routing.IHttpRoute" /> for encontrada na coleção; caso contrário, falso.</returns>
      <param name="item">O objeto a ser localizado na coleção.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.ContainsKey(System.String)">
      <summary>Determina se a coleção contém um elemento que tem a chave especificada.</summary>
      <returns>verdadeiro se a coleção contiver um elemento com a chave; caso contrário, falso.</returns>
      <param name="name">A chave a ser localizada na coleção.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.Routing.IHttpRoute}[],System.Int32)">
      <summary>Copia as instâncias da <see cref="T:System.Web.Http.Routing.IHttpRoute" /> da coleção para uma matriz, começando em um índice de matriz específico.</summary>
      <param name="array">A matriz que é o destino dos elementos copiados a partir da coleção.</param>
      <param name="arrayIndex">O índice baseado em zero na <paramref name="array" /> na qual a cópia inicia.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CopyTo(System.Web.Http.Routing.IHttpRoute[],System.Int32)">
      <summary>Copia os nomes da rota e as instâncias da <see cref="T:System.Web.Http.Routing.IHttpRoute" /> da coleção para uma matriz, começando em um índice de matriz específico.</summary>
      <param name="array">A matriz que é o destino dos elementos copiados a partir da coleção.</param>
      <param name="arrayIndex">O índice baseado em zero na <paramref name="array" /> na qual a cópia inicia.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Count">
      <summary>Obtém o número de itens na coleção.</summary>
      <returns>O número de itens na coleção.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Cria uma instância <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</summary>
      <returns>A nova instância <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</returns>
      <param name="routeTemplate">O modelo de rota.</param>
      <param name="defaults">Um objeto que contém os parâmetros da rota padrão.</param>
      <param name="constraints">Um objeto que contém as restrições da rota.</param>
      <param name="dataTokens">Os tokens dos dados da rota.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Net.Http.HttpMessageHandler)">
      <summary>Cria uma instância <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</summary>
      <returns>A nova instância <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</returns>
      <param name="routeTemplate">O modelo de rota.</param>
      <param name="defaults">Um objeto que contém os parâmetros da rota padrão.</param>
      <param name="constraints">Um objeto que contém as restrições da rota.</param>
      <param name="dataTokens">Os tokens dos dados da rota.</param>
      <param name="handler">O manipulador de mensagens da rota.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Object,System.Object)">
      <summary>Cria uma instância <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</summary>
      <returns>A nova instância <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</returns>
      <param name="routeTemplate">O modelo de rota.</param>
      <param name="defaults">Um objeto que contém os parâmetros da rota padrão.</param>
      <param name="constraints">Um objeto que contém as restrições da rota.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Dispose">
      <summary>Realiza tarefas definidas pelo aplicativo associadas à liberação ou redefinição de recursos não gerenciados.</summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados que são usados pelo objeto e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">verdadeiro para liberar os recursos gerenciados e os não gerenciados; falso para liberar apenas os recursos não gerenciados.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetEnumerator">
      <summary>Retorna um enumerador que itera por meio da coleção.</summary>
      <returns>Um <see cref="T:System.Collections.Generic.IEnumerator`1" /> que pode ser usado para iterar por meio da coleção.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetRouteData(System.Net.Http.HttpRequestMessage)">
      <summary>Obtém os dados da rota para uma solicitação HTTP especificada.</summary>
      <returns>Uma instância <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> que representa os dados da rota.</returns>
      <param name="request">A solicitação HTTP.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Obtém um caminho virtual.</summary>
      <returns>Uma instância de <see cref="T:System.Web.Http.Routing.IHttpVirtualPathData" /> que representa o caminho virtual.</returns>
      <param name="request">A solicitação HTTP.</param>
      <param name="name">O nome da rota.</param>
      <param name="values">Os valores de rota.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Insert(System.Int32,System.String,System.Web.Http.Routing.IHttpRoute)">
      <summary>Insere uma instância <see cref="T:System.Web.Http.Routing.IHttpRoute" /> na coleção.</summary>
      <param name="index">O índice baseado em zero em que o <paramref name="value" /> deve ser inserido.</param>
      <param name="name">O nome da rota.</param>
      <param name="value">A <see cref="T:System.Web.Http.Routing.IHttpRoute" /> a ser inserida.O valor não pode ser nulo.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.IsReadOnly">
      <summary>Obtém um valor que indica se a coleção é somente leitura.</summary>
      <returns>verdadeiro se o conjunto for somente leitura; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Item(System.Int32)">
      <summary>Obtém ou define o elemento no índice especificado.</summary>
      <returns>A <see cref="T:System.Web.Http.Routing.IHttpRoute" /> no índice especificado.</returns>
      <param name="index">O índice.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.Item(System.String)">
      <summary>Obtém ou define o elemento com o nome da rota especificada.</summary>
      <returns>A <see cref="T:System.Web.Http.Routing.IHttpRoute" /> no índice especificado.</returns>
      <param name="name">O nome da rota.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.OnGetEnumerator">
      <summary>Chamado internamente para obter o enumerador da coleção.</summary>
      <returns>Um <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar por meio da coleção.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.Remove(System.String)">
      <summary>Remove uma instância de <see cref="T:System.Web.Http.Routing.IHttpRoute" /> da coleção.</summary>
      <returns>verdadeiro se o elemento for removido com êxito; caso contrário, falso.Este método também retorna falso se <paramref name="name" /> não foi encontrado na coleção.</returns>
      <param name="name">O nome da rota a ser removida.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#Generic#ICollection{T}#Add(System.Web.Http.Routing.IHttpRoute)">
      <summary>Adiciona um item à coleção.</summary>
      <param name="route">O objeto a adicionar à coleção.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#Generic#ICollection{T}#Remove(System.Web.Http.Routing.IHttpRoute)">
      <summary>Remove a primeira ocorrência de um objeto específico da coleção.</summary>
      <returns>verdadeiro se <paramref name="route" /> foi removido com êxito da coleção; caso contrário, falso.Este método também retorna falso se a <paramref name="route" /> não for encontrada na coleção.</returns>
      <param name="route">O objeto a ser removido da coleção.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um enumerador que itera por meio da coleção.</summary>
      <returns>Um objeto <see cref="T:System.Collections.IEnumerator" /> que pode ser usado para iterar por meio da coleção.</returns>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.TryGetValue(System.String,System.Web.Http.Routing.IHttpRoute@)">
      <summary>Obtém a <see cref="T:System.Web.Http.Routing.IHttpRoute" /> com o nome da rota especificada.</summary>
      <returns>verdadeiro se a coleção contiver um elemento com o nome especificado; caso contrário, falso.</returns>
      <param name="name">O nome da rota.</param>
      <param name="route">Quando este método retorna, contém a instância de <see cref="T:System.Web.Http.Routing.IHttpRoute" />, se o nome da rota for encontrado; caso contrário, nulo.Este parâmetro é passado não inicializado.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollection.ValidateConstraint(System.String,System.String,System.Object)">
      <summary>Confirma que a restrição é válida para um <see cref="T:System.Web.Http.Routing.IHttpRoute" /> criado pela chamada para o método <see cref="M:System.Web.Http.HttpRouteCollection.CreateRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IDictionary{System.String,System.Object},System.Net.Http.HttpMessageHandler)" />.</summary>
      <param name="routeTemplate">O modelo de rota.</param>
      <param name="name">O nome da restrição.</param>
      <param name="constraint">O objeto de restrição.</param>
    </member>
    <member name="P:System.Web.Http.HttpRouteCollection.VirtualPathRoot">
      <summary>Obtém a raiz do caminho virtual.</summary>
      <returns>O caminho virtual raiz.</returns>
    </member>
    <member name="T:System.Web.Http.HttpRouteCollectionExtensions">
      <summary> Métodos de extensão para <see cref="T:System.Web.Http.HttpRouteCollection" /></summary>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.IgnoreRoute(System.Web.Http.HttpRouteCollection,System.String,System.String)">
      <summary>Ignora a rota especificada.</summary>
      <returns>Retorna <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</returns>
      <param name="routes">Um conjunto de rotas para o aplicativo.</param>
      <param name="routeName">O nome da rota a ser ignorada.</param>
      <param name="routeTemplate">O modelo de rota para a rota.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.IgnoreRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object)">
      <summary>Ignora a rota especificada.</summary>
      <returns>Retorna <see cref="T:System.Web.Http.Routing.IHttpRoute" />.</returns>
      <param name="routes">Um conjunto de rotas para o aplicativo.</param>
      <param name="routeName">O nome da rota a ser ignorada.</param>
      <param name="routeTemplate">O modelo de rota para a rota.</param>
      <param name="constraints">Um conjunto de expressões que especificam valores para o modelo de rota.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpBatchRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Web.Http.Batch.HttpBatchHandler)">
      <summary> Mapeia a rota especificada para tratar de solicitações HTTP de lotes. </summary>
      <param name="routes">Um conjunto de rotas para o aplicativo.</param>
      <param name="routeName">O nome da rota a ser mapeada.</param>
      <param name="routeTemplate">O modelo de rota para a rota.</param>
      <param name="batchHandler">O <see cref="T:System.Web.Http.Batch.HttpBatchHandler" /> para tratar de solicitações de lotes.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String)">
      <summary>Mapeia o modelo de rota especificado.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="routes">Um conjunto de rotas para o aplicativo.</param>
      <param name="name">O nome da rota a ser mapeada.</param>
      <param name="routeTemplate">O modelo de rota para a rota.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object)">
      <summary>Mapeia o modelo da rota especificada e define os valores da rota padrão.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="routes">Um conjunto de rotas para o aplicativo.</param>
      <param name="name">O nome da rota a ser mapeada.</param>
      <param name="routeTemplate">O modelo de rota para a rota.</param>
      <param name="defaults">Um objeto que contém valores de rota padrão.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object,System.Object)">
      <summary>Mapeia o modelo de rota especificado e define as restrições e os valores de rota padrão.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="routes">Um conjunto de rotas para o aplicativo.</param>
      <param name="name">O nome da rota a ser mapeada.</param>
      <param name="routeTemplate">O modelo de rota para a rota.</param>
      <param name="defaults">Um objeto que contém valores de rota padrão.</param>
      <param name="constraints">Um conjunto de expressões que especificam valores para <paramref name="routeTemplate" />.</param>
    </member>
    <member name="M:System.Web.Http.HttpRouteCollectionExtensions.MapHttpRoute(System.Web.Http.HttpRouteCollection,System.String,System.String,System.Object,System.Object,System.Net.Http.HttpMessageHandler)">
      <summary>Mapeia o modelo de rota especificado e define os valores da rota padrão, as restrições e o manipulador de mensagem do ponto de extremidade.</summary>
      <returns>Uma referência para a rota mapeada.</returns>
      <param name="routes">Um conjunto de rotas para o aplicativo.</param>
      <param name="name">O nome da rota a ser mapeada.</param>
      <param name="routeTemplate">O modelo de rota para a rota.</param>
      <param name="defaults">Um objeto que contém valores de rota padrão.</param>
      <param name="constraints">Um conjunto de expressões que especificam valores para <paramref name="routeTemplate" />.</param>
      <param name="handler">O manipulador para o qual a solicitação será distribuída.</param>
    </member>
    <member name="T:System.Web.Http.HttpServer">
      <summary> Define uma implementação de um <see cref="T:System.Net.Http.HttpMessageHandler" />, o qual expede uma <see cref="T:System.Net.Http.HttpRequestMessage" /> de entrada e cria uma <see cref="T:System.Net.Http.HttpResponseMessage" /> como resultado. </summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.HttpServer" /> usando a configuração padrão e o distribuidor.</summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Net.Http.HttpMessageHandler)">
      <summary> Inicializa uma nova instância da classe <see cref="T:System.Web.Http.HttpServer" /> com um distribuidor especificado. </summary>
      <param name="dispatcher">O distribuidor HTTP que tratará das solicitações de entrada.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.HttpServer" /> com um distribuidor especificado.</summary>
      <param name="configuration">A <see cref="T:System.Web.Http.HttpConfiguration" /> usada para configurar esta instância.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.#ctor(System.Web.Http.HttpConfiguration,System.Net.Http.HttpMessageHandler)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.HttpServer" /> com o distribuidor e a configuração especificados.</summary>
      <param name="configuration">A <see cref="T:System.Web.Http.HttpConfiguration" /> usada para configurar esta instância.</param>
      <param name="dispatcher">O distribuidor HTTP que tratará das solicitações de entrada.</param>
    </member>
    <member name="P:System.Web.Http.HttpServer.Configuration">
      <summary>Obtém a <see cref="T:System.Web.Http.HttpConfiguration" /> usada para configurar esta instância.</summary>
      <returns>A <see cref="T:System.Web.Http.HttpConfiguration" /> usada para configurar esta instância.</returns>
    </member>
    <member name="P:System.Web.Http.HttpServer.Dispatcher">
      <summary>Obtém o distribuidor HTTP que trata das solicitações de entrada.</summary>
      <returns>O distribuidor HTTP que trata das solicitações de entrada.</returns>
    </member>
    <member name="M:System.Web.Http.HttpServer.Dispose(System.Boolean)">
      <summary>Libera os recursos não gerenciados que são usados pelo objeto e, opcionalmente, libera os recursos gerenciados.</summary>
      <param name="disposing">verdadeiro para liberar os recursos gerenciados e os não gerenciados; falso para liberar apenas os recursos não gerenciados.</param>
    </member>
    <member name="M:System.Web.Http.HttpServer.Initialize">
      <summary>Prepara o servidor para a operação.</summary>
    </member>
    <member name="M:System.Web.Http.HttpServer.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Expede uma <see cref="T:System.Net.Http.HttpRequestMessage" /> de entrada.</summary>
      <returns> Uma tarefa que representa a operação assíncrona.</returns>
      <param name="request">A solicitação a ser expedida.</param>
      <param name="cancellationToken">O token para monitorar quanto às solicitações de cancelamento.</param>
    </member>
    <member name="T:System.Web.Http.IHttpActionResult">
      <summary>Define um comando que cria um <see cref="T:System.Net.Http.HttpResponseMessage" /> de forma assíncrona.</summary>
    </member>
    <member name="M:System.Web.Http.IHttpActionResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Cria um <see cref="T:System.Net.Http.HttpResponseMessage" /> de forma assíncrona.</summary>
      <returns>Uma tarefa que, quando concluída, contém o <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
      <param name="cancellationToken">O token para monitorar quanto às solicitações de cancelamento.</param>
    </member>
    <member name="T:System.Web.Http.IncludeErrorDetailPolicy">
      <summary>Especifica se os detalhes do erro, como mensagens de exceção e rastreamentos de pilha, devem ser incluídos nas mensagens de erro.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Always">
      <summary>Sempre incluir os detalhes do erro.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Default">
      <summary>Utilizar o comportamente padrão para o ambiente de host.Para hospedagem ASP.NET, utilizar o valor do elemento customErrors no arquivo Web.config.Para auto-hospedagem, utilizar o valor <see cref="F:System.Web.Http.IncludeErrorDetailPolicy.LocalOnly" />.</summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.LocalOnly">
      <summary>Incluir os detalhes do erro apenas ao responder a uma solicitação local. </summary>
    </member>
    <member name="F:System.Web.Http.IncludeErrorDetailPolicy.Never">
      <summary>Nunca incluir os detalhes do erro. </summary>
    </member>
    <member name="T:System.Web.Http.NonActionAttribute">
      <summary>Representa um atributo que é usado para indicar que um método de controlador não é um método de ação.</summary>
    </member>
    <member name="M:System.Web.Http.NonActionAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.NonActionAttribute" />.</summary>
    </member>
    <member name="T:System.Web.Http.OverrideActionFiltersAttribute">
      <summary>Representa um atributo de filtro que substitui os filtros de ação definidos em um nível superior.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideActionFiltersAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.OverrideActionFiltersAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.OverrideActionFiltersAttribute.AllowMultiple">
      <summary>Obtém um valor que indica se o filtro de ação permite atributo múltiplo.</summary>
      <returns>verdadeiro se o filtro de ação permitir atributo múltiplo; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Http.OverrideActionFiltersAttribute.FiltersToOverride">
      <summary>Obtém o tipo de filtros a substituir.</summary>
      <returns>O tipo de filtros a substituir.</returns>
    </member>
    <member name="T:System.Web.Http.OverrideAuthenticationAttribute">
      <summary>Representa um atributo de filtro que substitui os filtros de autenticação definidos em um nível superior.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideAuthenticationAttribute.#ctor"></member>
    <member name="P:System.Web.Http.OverrideAuthenticationAttribute.AllowMultiple"></member>
    <member name="P:System.Web.Http.OverrideAuthenticationAttribute.FiltersToOverride"></member>
    <member name="T:System.Web.Http.OverrideAuthorizationAttribute">
      <summary>Representa um atributo de filtro que substitui os filtros de autorização definidos em um nível superior.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideAuthorizationAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.OverrideAuthorizationAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.OverrideAuthorizationAttribute.AllowMultiple">
      <summary>Obtém ou define um valor booliano que indica se mais de uma instância do atributo indicado pode ser especificada para um único elemento do programa.</summary>
      <returns>verdadeiro se mais de uma instância puder ser especificada; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Http.OverrideAuthorizationAttribute.FiltersToOverride">
      <summary>Obtém o tipo para filtrar atributos de substituição.</summary>
      <returns>O tipo para filtrar atributos de substituição.</returns>
    </member>
    <member name="T:System.Web.Http.OverrideExceptionFiltersAttribute">
      <summary>Representa um atributo de filtro que substitui os filtros de exceção definidos em um nível superior.</summary>
    </member>
    <member name="M:System.Web.Http.OverrideExceptionFiltersAttribute.#ctor"></member>
    <member name="P:System.Web.Http.OverrideExceptionFiltersAttribute.AllowMultiple"></member>
    <member name="P:System.Web.Http.OverrideExceptionFiltersAttribute.FiltersToOverride"></member>
    <member name="T:System.Web.Http.ParameterBindingAttribute">
      <summary>Atributo em um parâmetro ou tipo que produz uma <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />.Se o atributo estiver em uma declaração de tipo, será como se o atributo estivesse presente em todos os parâmetros de ação daquele tipo.</summary>
    </member>
    <member name="M:System.Web.Http.ParameterBindingAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ParameterBindingAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.ParameterBindingAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Obtém a associação do parâmetro.</summary>
      <returns>A associação do parâmetro.</returns>
      <param name="parameter">O descritor do parâmetro.</param>
    </member>
    <member name="T:System.Web.Http.RouteAttribute">
      <summary>Coloque em uma ação para expô-la diretamente por meio de uma rota.</summary>
    </member>
    <member name="M:System.Web.Http.RouteAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.RouteAttribute" />. </summary>
    </member>
    <member name="M:System.Web.Http.RouteAttribute.#ctor(System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.RouteAttribute" />. </summary>
      <param name="template">O modelo de rota que descreve o padrão de URI com o qual corresponder.</param>
    </member>
    <member name="P:System.Web.Http.RouteAttribute.Name">
      <returns>Retorna <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.RouteAttribute.Order">
      <returns>Retorna <see cref="T:System.Int32" />.</returns>
    </member>
    <member name="M:System.Web.Http.RouteAttribute.System#Web#Http#Routing#IDirectRouteFactory#CreateRoute(System.Web.Http.Routing.DirectRouteFactoryContext)"></member>
    <member name="P:System.Web.Http.RouteAttribute.Template">
      <returns>Retorna <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.RouteParameter">
      <summary>É possível usar a classe <see cref="T:System.Web.Http.RouteParameter" /> para indicar propriedades sobre um parâmetro de rota (os literais e os espaços reservados localizados em segmentos de um <see cref="M:IHttpRoute.RouteTemplate" />).É possível, por exemplo, usá-la para indicar que um parâmetro de rota é opcional.</summary>
    </member>
    <member name="F:System.Web.Http.RouteParameter.Optional">
      <summary>Um parâmetro opcional.</summary>
    </member>
    <member name="M:System.Web.Http.RouteParameter.ToString">
      <summary>Retorna uma <see cref="T:System.String" /> que representa esta instância.</summary>
      <returns>Uma <see cref="T:System.String" /> que representa esta instância.</returns>
    </member>
    <member name="T:System.Web.Http.RoutePrefixAttribute">
      <summary> Anota um controlador com um prefixo de rota que se aplica a todas as ações no controlador. </summary>
    </member>
    <member name="M:System.Web.Http.RoutePrefixAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.RoutePrefixAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.RoutePrefixAttribute.#ctor(System.String)">
      <summary> Inicia uma nova instância da classe <see cref="T:System.Web.Http.RoutePrefixAttribute" />. </summary>
      <param name="prefix">O prefixo da rota para o controlador.</param>
    </member>
    <member name="P:System.Web.Http.RoutePrefixAttribute.Prefix">
      <summary> Obtém o prefixo da rota. </summary>
    </member>
    <member name="T:System.Web.Http.ServicesExtensions">
      <summary>Fornece acessadores do tipo seguro para serviços obtidos a partir de um objeto <see cref="T:System.Web.Http.Controllers.ServicesContainer" />.</summary>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionInvoker(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém o serviço <see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" />.</summary>
      <returns>Retorna uma instância <see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" />.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionSelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém o serviço <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" />.</summary>
      <returns>Retorna uma instância <see cref="T:System.Web.Http.Controllers.IHttpActionSelector" />.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetActionValueBinder(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém o serviço <see cref="T:System.Web.Http.Controllers.IActionValueBinder" />.</summary>
      <returns>Retorna uma instância <see cref="T:System.Web.Http.Controllers.IActionValueBinder" />.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetApiExplorer(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém o serviço <see cref="T:System.Web.Http.Description.IApiExplorer" />.</summary>
      <returns>Retorna uma instância <see cref="T:System.Web.Http.Description.IApiExplorer" />.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetAssembliesResolver(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém o serviço <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" />.</summary>
      <returns>Retorna uma instância <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" />.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetBodyModelValidator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém o serviço <see cref="T:System.Web.Http.Validation.IBodyModelValidator" />.</summary>
      <returns>Retorna uma instância <see cref="T:System.Web.Http.Validation.IBodyModelValidator" />.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetContentNegotiator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém o serviço <see cref="T:System.Net.Http.Formatting.IContentNegotiator" />.</summary>
      <returns>Retorna uma instância <see cref="T:System.Net.Http.Formatting.IContentNegotiator" />.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetDocumentationProvider(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém o serviço <see cref="T:System.Web.Http.Description.IDocumentationProvider" />.</summary>
      <returns>Retorna uma instância <see cref="T:System.Web.Http.Description.IDocumentationProvider" />.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetExceptionHandler(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Retorna o manipulador de exceção registrado não manipulado, se houver.</summary>
      <returns>O manipulador de exceção registrado não manipulado, se houver; caso contrário, null.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetExceptionLoggers(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Retorna a coleção de agentes de exceção registrados não manipulados.</summary>
      <returns>A coleção de agentes de exceção registrados não manipulados.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetFilterProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém a coleção <see cref="T:System.Web.Http.Filters.IFilterProvider" />.</summary>
      <returns>Retorna uma coleção de objetos <see cref="T:System.Web.Http.Filters.IFilterProvider" />.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHostBufferPolicySelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém o serviço <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" />.</summary>
      <returns>Retorna uma instância <see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" />.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerActivator(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém o serviço <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" />.</summary>
      <returns>Retorna uma instância <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" />, ou nulo se nenhuma instância foi registrada.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerSelector(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém o serviço <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" />.</summary>
      <returns>Retorna uma instância <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" />.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetHttpControllerTypeResolver(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém o serviço <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" />.</summary>
      <returns>Retorna uma instância <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" />.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelBinderProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém a coleção <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</summary>
      <returns>Retorna uma coleção de objetos <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelMetadataProvider(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém o serviço <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />.</summary>
      <returns>Retorna uma instância <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetModelValidatorProviders(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém a coleção <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />.</summary>
      <returns>Retorna uma coleção de objetos <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetTraceManager(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém o serviço <see cref="T:System.Web.Http.Tracing.ITraceManager" />.</summary>
      <returns>Retorna uma instância <see cref="T:System.Web.Http.Tracing.ITraceManager" />.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetTraceWriter(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém o serviço <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</summary>
      <returns>Retorna uma instância <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ServicesExtensions.GetValueProviderFactories(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém a coleção <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</summary>
      <returns>Retorna uma coleção de objetos <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="T:System.Web.Http.SingleResult">
      <summary>Representa um <see cref="T:System.Linq.IQueryable" /> que contém zero ou uma entidade.Use junto com um [EnableQuery] do namespace System.Web.Http.OData ou System.Web.OData.</summary>
    </member>
    <member name="M:System.Web.Http.SingleResult.#ctor(System.Linq.IQueryable)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.SingleResult" />.</summary>
      <param name="queryable">O <see cref="T:System.Linq.IQueryable" /> que contém zero ou uma entidade.</param>
    </member>
    <member name="M:System.Web.Http.SingleResult.Create``1(System.Linq.IQueryable{``0})">
      <summary>Cria um <see cref="T:System.Web.Http.SingleResult`1" /> de um <see cref="T:System.Linq.IQueryable`1" />.Um método auxiliar para instanciar um objeto <see cref="T:System.Web.Http.SingleResult`1" /> sem precisar especificar explicitamente o tipo <paramref name="T" />.</summary>
      <returns>O <see cref="T:System.Web.Http.SingleResult`1" /> criado.</returns>
      <param name="queryable">O <see cref="T:System.Linq.IQueryable`1" /> que contém zero ou uma entidade.</param>
      <typeparam name="T">O tipo dos dados na fonte de dados.</typeparam>
    </member>
    <member name="P:System.Web.Http.SingleResult.Queryable">
      <summary>O <see cref="T:System.Linq.IQueryable" /> que contém zero ou uma entidade.</summary>
    </member>
    <member name="T:System.Web.Http.SingleResult`1">
      <summary>Representa um <see cref="T:System.Linq.IQueryable`1" /> que contém zero ou uma entidade.Use junto com um [EnableQuery] do namespace System.Web.Http.OData ou System.Web.OData.</summary>
      <typeparam name="T">O tipo dos dados na fonte de dados.</typeparam>
    </member>
    <member name="M:System.Web.Http.SingleResult`1.#ctor(System.Linq.IQueryable{`0})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.SingleResult`1" />.</summary>
      <param name="queryable">O <see cref="T:System.Linq.IQueryable`1" /> que contém zero ou uma entidade.</param>
    </member>
    <member name="P:System.Web.Http.SingleResult`1.Queryable">
      <summary>O <see cref="T:System.Linq.IQueryable`1" /> que contém zero ou uma entidade.</summary>
    </member>
    <member name="T:System.Web.Http.Batch.BatchExecutionOrder">
      <summary> Define a ordem de execução para solicitações em lote. </summary>
    </member>
    <member name="F:System.Web.Http.Batch.BatchExecutionOrder.NonSequential">
      <summary> Executa as solicitações em lote não sequencialmente. </summary>
    </member>
    <member name="F:System.Web.Http.Batch.BatchExecutionOrder.Sequential">
      <summary> Executa as solicitações em lote sequencialmente. </summary>
    </member>
    <member name="T:System.Web.Http.Batch.BatchHttpRequestMessageExtensions">
      <summary> Fornece métodos de extensão para a classe <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
    </member>
    <member name="M:System.Web.Http.Batch.BatchHttpRequestMessageExtensions.CopyBatchRequestProperties(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpRequestMessage)">
      <summary> Copia as propriedades de outro <see cref="T:System.Net.Http.HttpRequestMessage" />. </summary>
      <param name="subRequest">A subsolicitação.</param>
      <param name="batchRequest">A solicitação em lote que contém as propriedades a serem copiadas.</param>
    </member>
    <member name="T:System.Web.Http.Batch.DefaultHttpBatchHandler">
      <summary>Representa a implementação padrão de <see cref="T:System.Web.Http.Batch.HttpBatchHandler" /> que codifica as mensagens de solicitação/resposta HTTP como MIME de partes múltiplas.</summary>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Batch.DefaultHttpBatchHandler" />.</summary>
      <param name="httpServer">O <see cref="T:System.Web.Http.HttpServer" /> para manipular as solicitações em lote individuais.</param>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.CreateResponseMessageAsync(System.Collections.Generic.IList{System.Net.Http.HttpResponseMessage},System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Cria a mensagem de resposta do lote.</summary>
      <returns>A mensagem de resposta do lote.</returns>
      <param name="responses">As respostas para as solicitações em lote.</param>
      <param name="request">A solicitação original contendo todas as solicitações em lote.</param>
      <param name="cancellationToken">O token de cancelamento.</param>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ExecuteRequestMessagesAsync(System.Collections.Generic.IEnumerable{System.Net.Http.HttpRequestMessage},System.Threading.CancellationToken)">
      <summary>Executa as mensagens de solicitação em lote.</summary>
      <returns>Uma coleção de <see cref="T:System.Net.Http.HttpResponseMessage" /> para as solicitações em lote.</returns>
      <param name="requests">A coleção de mensagens de solicitação em lote.</param>
      <param name="cancellationToken">O token de cancelamento.</param>
    </member>
    <member name="P:System.Web.Http.Batch.DefaultHttpBatchHandler.ExecutionOrder">
      <summary>Obtém ou define a ordem de execução para as solicitações em lote.A ordem de execução padrão é sequencial.</summary>
      <returns>A ordem de execução para as solicitações em lote.A ordem de execução padrão é sequencial.</returns>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ParseBatchRequestsAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Converte a solicitação em lote de entrada em uma coleção de mensagens de solicitação.</summary>
      <returns>Uma coleção de <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
      <param name="request">A solicitação contendo as mensagens de solicitação em lote.</param>
      <param name="cancellationToken">O token de cancelamento.</param>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ProcessBatchAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Processa as solicitações em lote.</summary>
      <returns>O resultado da operação.</returns>
      <param name="request">A solicitação em lote.</param>
      <param name="cancellationToken">O token de cancelamento.</param>
    </member>
    <member name="P:System.Web.Http.Batch.DefaultHttpBatchHandler.SupportedContentTypes">
      <summary>Obtém os tipos de conteúdo com suporte para a solicitação em lote.</summary>
      <returns>Os tipos de conteúdo com suporte para a solicitação em lote.</returns>
    </member>
    <member name="M:System.Web.Http.Batch.DefaultHttpBatchHandler.ValidateRequest(System.Net.Http.HttpRequestMessage)">
      <summary>Valida a solicitação de entrada que contém as mensagens de solicitação em lote.</summary>
      <param name="request">A solicitação contendo as mensagens de solicitação em lote.</param>
    </member>
    <member name="T:System.Web.Http.Batch.HttpBatchHandler">
      <summary>Define a abstração para manipular solicitações HTTP em lote.</summary>
    </member>
    <member name="M:System.Web.Http.Batch.HttpBatchHandler.#ctor(System.Web.Http.HttpServer)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Batch.HttpBatchHandler" />.</summary>
      <param name="httpServer">O <see cref="T:System.Web.Http.HttpServer" /> para manipular as solicitações em lote individuais.</param>
    </member>
    <member name="P:System.Web.Http.Batch.HttpBatchHandler.Invoker">
      <summary>Obtém o chamador para enviar as solicitações em lote ao <see cref="T:System.Web.Http.HttpServer" />.</summary>
      <returns>O chamador para enviar as solicitações em lote ao <see cref="T:System.Web.Http.HttpServer" />.</returns>
    </member>
    <member name="M:System.Web.Http.Batch.HttpBatchHandler.ProcessBatchAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Processa a solicitação em lote de entrada como um único <see cref="T:System.Net.Http.HttpRequestMessage" />.</summary>
      <returns>A resposta do lote.</returns>
      <param name="request">A solicitação em lote.</param>
      <param name="cancellationToken">O token de cancelamento.</param>
    </member>
    <member name="M:System.Web.Http.Batch.HttpBatchHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envia o manipulador de lotes de forma assíncrona.</summary>
      <returns>O resultado da operação.</returns>
      <param name="request">a solicitação de envio.</param>
      <param name="cancellationToken">O token de cancelamento.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ApiControllerActionInvoker">
      <summary>Invoca os métodos de ação de um controlador.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionInvoker.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionInvoker.InvokeActionAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Invoca a ação especificada de forma assíncrona usando o contexto de controlador especificado.</summary>
      <returns>A ação invocada.</returns>
      <param name="actionContext">O contexto do controlador.</param>
      <param name="cancellationToken">O token de cancelamento.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ApiControllerActionSelector">
      <summary>Representa um seletor de ações baseado em reflexo.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Obtém os mapeamentos da ação do <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" />.</summary>
      <returns>Os mapeamentos da ação.</returns>
      <param name="controllerDescriptor">As informações que descrevem um controlador.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ApiControllerActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Seleciona uma ação para o <see cref="T:System.Web.Http.Controllers.ApiControllerActionSelector" />.</summary>
      <returns>A ação selecionada.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ControllerServices">
      <summary> Representa um contêiner para serviços que podem ser específicos de um controlador.  Isto sombreia os serviços de seu <see cref="T:System.Web.Http.Controllers.ServicesContainer" /> pai. Um controlador pode definir um serviço aqui ou cair para um conjunto mais global de serviços.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.#ctor(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Controllers.ControllerServices" />.</summary>
      <param name="parent">O contêiner de serviços pai.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.ClearSingle(System.Type)">
      <summary>Remove um serviço de única instância dos serviços padrão.</summary>
      <param name="serviceType">O tipo de serviço.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetService(System.Type)">
      <summary>Obtém um serviço do tipo em questão.</summary>
      <returns>A primeira instância do serviço ou nulo se o serviço não for encontrado.</returns>
      <param name="serviceType">O tipo de serviço.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetServiceInstances(System.Type)">
      <summary>Obtém a lista de objetos de serviço para um tipo de serviço em questão e valida o tipo de serviço.</summary>
      <returns>A lista de objetos de serviço do tipo especificado.</returns>
      <param name="serviceType">O tipo de serviço.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.GetServices(System.Type)">
      <summary>Obtém a lista de objetos de serviço para um tipo de serviço em questão.</summary>
      <returns>A lista de objetos de serviço do tipo especificado ou uma lista vazia se o serviço não for encontrado.</returns>
      <param name="serviceType">O tipo de serviço.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.IsSingleService(System.Type)">
      <summary>Consulta se um tipo de serviço é de única instância.</summary>
      <returns>verdadeiro se o tipo de serviço tiver no máximo uma instância ou falso se o tipo de serviço suportar várias instâncias.</returns>
      <param name="serviceType">O tipo de serviço.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ControllerServices.ReplaceSingle(System.Type,System.Object)">
      <summary>Substitui um objeto de serviço de única instância.</summary>
      <param name="serviceType">O tipo de serviço.</param>
      <param name="service">O objeto de serviço que substitui a instância anterior.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionBinding">
      <summary>Descreve *como* a associação ocorrerá e não faz a associação, propriamente dita.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.#ctor(System.Web.Http.Controllers.HttpActionDescriptor,System.Web.Http.Controllers.HttpParameterBinding[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />.</summary>
      <param name="actionDescriptor">O retorno à ação a que esta associação se destina.  </param>
      <param name="bindings">As associações síncronas de cada parâmetro.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionBinding.ActionDescriptor">
      <summary>Obtém ou define o retorno à ação a que esta associação se destina.  </summary>
      <returns>O retorno à ação a que esta associação se destina.  </returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionBinding.ExecuteBindingAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Executa a associação de forma assíncrona em relação ao contexto de solicitação em questão.</summary>
      <returns>A tarefa que foi marcada na conclusão da associação. </returns>
      <param name="actionContext">O contexto de ação para a associação. Isto contém o dicionário de parâmetros que será preenchido.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação de associação. Ou um associador também pode associar um parâmetro a ele.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionBinding.ParameterBindings">
      <summary>Obtém ou define as associações síncronas de cada parâmetro. </summary>
      <returns>As associações síncronas de cada parâmetro.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionContext">
      <summary>Contém as informações para a ação de execução.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContext.#ctor">
      <summary> Inicia uma nova instância da classe <see cref="T:System.Web.Http.Controllers.HttpActionContext" />. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContext.#ctor(System.Web.Http.Controllers.HttpControllerContext,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Controllers.HttpActionContext" />.</summary>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ActionArguments">
      <summary>Obtém uma lista de argumentos de ação.</summary>
      <returns>Uma lista de argumentos de ação.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ActionDescriptor">
      <summary>Obtém ou define o descritor da ação para o contexto da ação.</summary>
      <returns>O descritor da ação.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ControllerContext">
      <summary>Obtém ou define o contexto do controlador.</summary>
      <returns>O contexto do controlador.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.ModelState">
      <summary>Obtém o dicionário de estado de modelo para o contexto.</summary>
      <returns>O dicionário de estado de modelo.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.Request">
      <summary>Obtém a mensagem de solicitação para o contexto da ação.</summary>
      <returns>A mensagem de solicitação para o contexto da ação.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.RequestContext">
      <summary>Obtém o contexto da solicitação atual.</summary>
      <returns>O contexto da solicitação atual.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionContext.Response">
      <summary>Obtém ou define a mensagem de resposta para o contexto da ação.</summary>
      <returns>A mensagem de resposta para o contexto da ação.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionContextExtensions">
      <summary>Contém métodos de extensão para <see cref="T:System.Web.Http.Controllers.HttpActionContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.Bind(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.Bind(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IEnumerable{System.Web.Http.ModelBinding.IModelBinder})"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetMetadataProvider(System.Web.Http.Controllers.HttpActionContext)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetValidatorProviders(System.Web.Http.Controllers.HttpActionContext)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.GetValidators(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Metadata.ModelMetadata)"></member>
    <member name="M:System.Web.Http.Controllers.HttpActionContextExtensions.TryBindStrongModel``1(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.String,System.Web.Http.Metadata.ModelMetadataProvider,``0@)">
      <typeparam name="TModel"></typeparam>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpActionDescriptor">
      <summary>Fornece informações sobre os métodos de ação.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.#ctor(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> com as informações especificadas que descreve o controlador da ação.</summary>
      <param name="controllerDescriptor">A informação que descreve o controlador da ação.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ActionBinding">
      <summary>Obtém ou define a associação que descreve a ação.</summary>
      <returns>A associação que descreve a ação.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ActionName">
      <summary>Obtém o nome da ação.</summary>
      <returns>O nome da ação.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.Configuration">
      <summary>Obtém ou define a configuração da ação.</summary>
      <returns>A configuração da ação.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ControllerDescriptor">
      <summary>Obtém a informação que descreve o controlador da ação.</summary>
      <returns>A informação que descreve o controlador da ação.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
      <summary>Executa a ação descrita e retorna uma <see cref="T:System.Threading.Tasks.Task`1" /> que, uma vez concluída, conterá o valor de retorno da ação.</summary>
      <returns>Uma <see cref="T:System.Threading.Tasks.Task`1" /> que, uma vez concluída, conterá o valor de retorno da ação.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="arguments">Uma lista de argumentos.</param>
      <param name="cancellationToken">O token de cancelamento.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetCustomAttributes``1">
      <summary>Retorna os atributos personalizados associados ao descritor da ação.</summary>
      <returns>Os atributos personalizados associados ao descritor da ação.</returns>
      <typeparam name="T">O descritor da ação.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetCustomAttributes``1(System.Boolean)">
      <summary>Obtém os atributos personalizados para a ação.</summary>
      <returns>A coleção de atributos personalizados aplicados para essa ação.</returns>
      <param name="inherit">verdadeiro para pesquisar a cadeia de herança dessa ação para encontrar os atributos; caso contrário, falso.</param>
      <typeparam name="T">O tipo de atributo a localizar.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetFilterPipeline">
      <summary>Recupera os filtros para a configuração e a ação em questão.</summary>
      <returns>Os filtros para a configuração e a ação em questão.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetFilters">
      <summary>Recupera os filtros do descritor da ação.</summary>
      <returns>Os filtros do descritor da ação.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpActionDescriptor.GetParameters">
      <summary>Recupera os parâmetros do descritor da ação.</summary>
      <returns>Os parâmetros do descritor da ação.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.Properties">
      <summary>Obtém as propriedades associadas a esta instância.</summary>
      <returns>As propriedades associadas a esta instância.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ResultConverter">
      <summary>Obtém o conversor para transformar corretamente o resultado da chamada de ExecuteAsync(HttpControllerContext, IDictionaryString, Object)" em uma instância de <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>O conversor de resultados da ação.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.ReturnType">
      <summary>Obtém o tipo de retorno do descritor.</summary>
      <returns>O tipo de retorno do descritor.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpActionDescriptor.SupportedHttpMethods">
      <summary>Obtém a coleção dos métodos HTTP suportados para o descritor.</summary>
      <returns>A coleção dos métodos HTTP suportados para o descritor.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpControllerContext">
      <summary>Contém informações para uma única operação HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerContext.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Controllers.HttpControllerContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerContext.#ctor(System.Web.Http.Controllers.HttpRequestContext,System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpControllerDescriptor,System.Web.Http.Controllers.IHttpController)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Controllers.HttpControllerContext" />.</summary>
      <param name="requestContext">O contexto da solicitação.</param>
      <param name="request">A solicitação HTTP.</param>
      <param name="controllerDescriptor">O descritor do controlador.</param>
      <param name="controller">O controlador.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerContext.#ctor(System.Web.Http.HttpConfiguration,System.Web.Http.Routing.IHttpRouteData,System.Net.Http.HttpRequestMessage)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Controllers.HttpControllerContext" />.</summary>
      <param name="configuration">A configuração.</param>
      <param name="routeData">Os dados de rota.</param>
      <param name="request">A solicitação.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Configuration">
      <summary>Obtém ou define a configuração.</summary>
      <returns>A configuração.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Controller">
      <summary>Obtém ou define o controlador HTTP.</summary>
      <returns>O controlador HTTP.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.ControllerDescriptor">
      <summary>Obtém ou define o descritor do controlador.</summary>
      <returns>O descritor do controlador.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.Request">
      <summary>Obtém ou define a solicitação.</summary>
      <returns>A solicitação.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.RequestContext">
      <summary>Obtém ou define o contexto da solicitação.</summary>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerContext.RouteData">
      <summary>Obtém ou define os dados de rota.</summary>
      <returns>Os dados de rota.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpControllerDescriptor">
      <summary>Representa a informação que descreve o controlador HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.#ctor(System.Web.Http.HttpConfiguration,System.String,System.Type)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</summary>
      <param name="configuration">A configuração.</param>
      <param name="controllerName">O nome do controlador.</param>
      <param name="controllerType">O tipo do controlador.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.Configuration">
      <summary>Obtém ou define as configurações associadas ao controlador.</summary>
      <returns>As configurações associadas ao controlador.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.ControllerName">
      <summary>Obtém ou define o nome do controlador.</summary>
      <returns>O nome do controlador.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.ControllerType">
      <summary>Obtém ou define o tipo do controlador.</summary>
      <returns>O tipo do controlador.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.CreateController(System.Net.Http.HttpRequestMessage)">
      <summary>Cria uma instância de controlador para a <see cref="T:System.Net.Http.HttpRequestMessage" /> determinada.</summary>
      <returns>A instância de controlador criada.</returns>
      <param name="request">A mensagem de solicitação.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.GetCustomAttributes``1">
      <summary>Recupera uma coleção de atributos personalizados do controlador.</summary>
      <returns>Uma coleção de atributos personalizados.</returns>
      <typeparam name="T">O tipo do objeto.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.GetCustomAttributes``1(System.Boolean)">
      <summary> Retorna uma coleção de atributos que pode ser atribuída a &lt;typeparamref name="T" /&gt; para esse controlador do descritor. </summary>
      <returns>Uma coleção de atributos associados a este controlador.</returns>
      <param name="inherit">verdadeiro para pesquisar a cadeia de herança do controlador para encontrar os atributos; caso contrário, falso.</param>
      <typeparam name="T">Usado para filtrar a coleção de atributos. Use um valor de <see cref="T:System.Object" /> para recuperar todos os atributos.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerDescriptor.GetFilters">
      <summary>Retorna uma coleção de filtros associados ao controlador.</summary>
      <returns>Uma coleção de filtros associados ao controlador.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerDescriptor.Properties">
      <summary>Obtém as propriedades associadas a esta instância.</summary>
      <returns>As propriedades associadas a esta instância.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpControllerSettings">
      <summary>Contém configurações para um controlador HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpControllerSettings.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Controllers.HttpControllerSettings" />.</summary>
      <param name="configuration">Um objeto de configuração usado para inicializar a instância.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.Formatters">
      <summary>Obtém a coleção de instâncias de <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> para o controlador.</summary>
      <returns>A coleção de instâncias de <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.ParameterBindingRules">
      <summary>Obtém a coleção de funções de associação de parâmetro para o controlador.</summary>
      <returns>A coleção de funções de associação de parâmetro.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpControllerSettings.Services">
      <summary>Obtém a coleção de instâncias de serviço para o controlador.</summary>
      <returns>A coleção de instâncias de serviço.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpParameterBinding">
      <summary> Descreve como um parâmetro é associado. A associação deve ser estática (com base puramente no descritor) e pode ser compartilhada entre as solicitações.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />.</summary>
      <param name="descriptor">Um <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> que descreve os parâmetros.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.Descriptor">
      <summary>Obtém o <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" /> que foi usado para inicializar esta instância.</summary>
      <returns>A instância <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.ErrorMessage">
      <summary>Se a associação for inválida, obtém uma mensagem de erro que descreve o erro de associação.</summary>
      <returns>Uma mensagem de erro. Se a associação foi realizada com êxito, o valor será nulo.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Executa a associação para a solicitação em questão de forma assíncrona.</summary>
      <returns>Um objeto de tarefa que representa a operação assíncrona.</returns>
      <param name="metadataProvider">O provedor de metadados a ser usado para a validação.</param>
      <param name="actionContext">O contexto de ação para a associação. O contexto de ação contém o dicionário de parâmetros que será preenchido com o parâmetro.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação de associação.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.GetValue(System.Web.Http.Controllers.HttpActionContext)">
      <summary> Obtém o valor de parâmetro do dicionário de argumentos do contexto de ação.</summary>
      <returns>O valor deste parâmetro no contexto de ação em questão, ou nulo se o parâmetro ainda não tiver sido definido.</returns>
      <param name="actionContext">O contexto da ação.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.IsValid">
      <summary>Obtém um valor que indica se a associação foi realizada com êxito.</summary>
      <returns>verdadeiro se a associação foi realizada com êxito; caso contrário, falso.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterBinding.SetValue(System.Web.Http.Controllers.HttpActionContext,System.Object)">
      <summary>Define o resultado desta associação de parâmetros no dicionário de argumentos do contexto de ação.  </summary>
      <param name="actionContext">O contexto da ação.</param>
      <param name="value">O valor de parâmetro.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterBinding.WillReadBody">
      <summary>Retorna um valor que indica se esta instância <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> lerá o corpo da entidade da mensagem HTTP.</summary>
      <returns>Verdadeiro se esta <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> irá ler o corpo da entidade; caso contrário, falso.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpParameterDescriptor">
      <summary>Representa o descritor de parâmetro HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.#ctor(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</summary>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ActionDescriptor">
      <summary>Obtém ou define o descritor da ação.</summary>
      <returns>O descritor da ação.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Configuration">
      <summary>Obtém ou define a <see cref="T:System.Web.Http.HttpConfiguration" /> do <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</summary>
      <returns>A <see cref="T:System.Web.Http.HttpConfiguration" /> do <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.DefaultValue">
      <summary>Obtém o valor padrão do parâmetro.</summary>
      <returns>O valor padrão do parâmetro.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpParameterDescriptor.GetCustomAttributes``1">
      <summary>Recupera uma coleção dos atributos personalizados do parâmetro.</summary>
      <returns>Uma coleção dos atributos personalizados do parâmetro.</returns>
      <typeparam name="T">O tipo dos atributos personalizados.</typeparam>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.IsOptional">
      <summary>Obtém um valor que indica se o parâmetro é opcional.</summary>
      <returns>verdadeiro se o parâmetro for opcional; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterBinderAttribute">
      <summary>Obtém ou define o atributo de associação do parâmetro.</summary>
      <returns>O atributo de associação do parâmetro.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterName">
      <summary>Obtém o nome do parâmetro.</summary>
      <returns>O nome do parâmetro.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.ParameterType">
      <summary>Obtém o tipo do parâmetro.</summary>
      <returns>O tipo do parâmetro.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Prefix">
      <summary>Obtém o prefixo desse parâmetro.</summary>
      <returns>O prefixo desse parâmetro.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpParameterDescriptor.Properties">
      <summary>Obtém as propriedades desse parâmetro.</summary>
      <returns>As propriedades desse parâmetro.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.HttpRequestContext">
      <summary>Representa o contexto associado a uma solicitação.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.HttpRequestContext.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Controllers.HttpRequestContext" />.</summary>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.ClientCertificate">
      <summary>Obtém ou define o certificado do cliente.</summary>
      <returns>Retorna <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.Configuration">
      <summary>Obtém ou define a configuração.</summary>
      <returns>Retorna <see cref="T:System.Web.Http.HttpConfiguration" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.IncludeErrorDetail">
      <summary>Obtém ou define um valor indicando se os detalhes do erro, como mensagens de exceção e rastreamentos de pilha, devem ser incluídos na resposta para esta solicitação.</summary>
      <returns>Retorna <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.IsLocal">
      <summary>Obtém ou define um valor que indica se a solicitação se origina de um endereço local.</summary>
      <returns>Retorna <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.Principal">
      <summary>Obtém ou define a entidade de segurança.</summary>
      <returns>Retorna <see cref="T:System.Security.Principal.IPrincipal" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.RouteData">
      <summary>Obtém ou define os dados de rota.</summary>
      <returns>Retorna <see cref="T:System.Web.Http.Routing.IHttpRouteData" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.Url">
      <summary>Obtém ou define o alocador usado para gerar URLs para outras APIs.</summary>
      <returns>Retorna <see cref="T:System.Web.Http.Routing.UrlHelper" />.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.HttpRequestContext.VirtualPathRoot">
      <summary>Obtém ou define a raiz do caminho virtual.</summary>
      <returns>Retorna <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.IActionHttpMethodProvider"></member>
    <member name="P:System.Web.Http.Controllers.IActionHttpMethodProvider.HttpMethods"></member>
    <member name="T:System.Web.Http.Controllers.IActionResultConverter">
      <summary> Um contrato para uma rotina de conversão que pode usar o resultado de uma ação retornado de &lt;consulte cref="M:System.Web.Http.Controllers.HttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object})" /&gt; e convertê-lo em uma instância da <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IActionResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Converte o objeto <see cref="T:System.Web.Http.Controllers.IActionResultConverter" /> especificado em outro objeto.</summary>
      <returns>O objeto convertido.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionResult">O resultado da ação.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IActionValueBinder">
      <summary>Define o método para recuperação da associação de ações associadas a um valor de parâmetro.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IActionValueBinder.GetBinding(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Obtém a <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />.</summary>
      <returns>Um objeto <see cref="T:System.Web.Http.Controllers.HttpActionBinding" />.</returns>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IControllerConfiguration">
      <summary> Se um controlador estiver decorado com um atributo com esta interface, ele será invocado para inicializar as configurações do controlador.  </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IControllerConfiguration.Initialize(System.Web.Http.Controllers.HttpControllerSettings,System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary> Retorno de chamada invocado para definir substituições por controlador para este Descritor do controlador. </summary>
      <param name="controllerSettings">As configurações do controlador a serem inicializadas.</param>
      <param name="controllerDescriptor">O descritor do controlador. Observe que o <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> pode ser associado ao tipo de controlador derivado dado que a <see cref="T:System.Web.Http.Controllers.IControllerConfiguration" /> seja herdada.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpActionInvoker">
      <summary>Contém o método que é usado para invocar a operação HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionInvoker.InvokeActionAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Executa a operação HTTP de forma assíncrona.</summary>
      <returns>A tarefa recém-iniciada.</returns>
      <param name="actionContext">O contexto de execução.</param>
      <param name="cancellationToken">O cancelamento do token atribuído à operação HTTP.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpActionSelector">
      <summary>Contém a lógica relacionada à seleção de um método de ação.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionSelector.GetActionMapping(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Retorna um mapa, organizado pela cadeia de caracteres de ação, de todos os <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> que o selecionador pode selecionar.Ele é chamado, primariamente, por um <see cref="T:System.Web.Http.Description.IApiExplorer" /> para descobrir todas as ações possíveis no controlador.</summary>
      <returns>Um mapa de todos os <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> que o seletor pode selecionar, ou nulo se o seletor não tiver um mapeamento bem definido do <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />.</returns>
      <param name="controllerDescriptor">O descritor do controlador.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpActionSelector.SelectAction(System.Web.Http.Controllers.HttpControllerContext)">
      <summary>Seleciona a ação para o controlador.</summary>
      <returns>A ação para o controlador.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.IHttpController">
      <summary>Representa um controlador HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
      <summary>Executa o controlador para a sincronização.</summary>
      <returns>O controlador.</returns>
      <param name="controllerContext">O contexto atual de um controlador de testes.</param>
      <param name="cancellationToken">A notificação que cancela a operação.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ParameterBindingExtensions">
      <summary>Define os métodos de extensão para <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindAsError(System.Web.Http.Controllers.HttpParameterDescriptor,System.String)">
      <summary>Associa o parâmetro que resulta em um erro. </summary>
      <returns>O objeto de associação do parâmetro HTTP.</returns>
      <param name="parameter">O descritor do parâmetro que descreve o parâmetro a associar.</param>
      <param name="message">A mensagem de erro que descreve o motivo da falha de associação.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithAttribute(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ParameterBindingAttribute)">
      <summary>Associar o parâmetro como se ele tivesse o atributo em questão na declaração.</summary>
      <returns>O objeto de associação do parâmetro HTTP.</returns>
      <param name="parameter">O parâmetro para o qual fornecer associação.</param>
      <param name="attribute">O atributo que descreve a associação.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Associa o parâmetro analisando o conteúdo do corpo HTTP.</summary>
      <returns>O objeto de associação do parâmetro HTTP.</returns>
      <param name="parameter">O descritor do parâmetro que descreve o parâmetro a associar.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Associa o parâmetro analisando o conteúdo do corpo HTTP.</summary>
      <returns>O objeto de associação do parâmetro HTTP.</returns>
      <param name="parameter">O descritor do parâmetro que descreve o parâmetro a associar.</param>
      <param name="formatters">A lista dos formatadores que fornece a seleção de um formatador adequado para serializar o parâmetro no objeto.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Web.Http.Validation.IBodyModelValidator)">
      <summary>Associa o parâmetro analisando o conteúdo do corpo HTTP.</summary>
      <returns>O objeto de associação do parâmetro HTTP.</returns>
      <param name="parameter">O descritor do parâmetro que descreve o parâmetro a associar.</param>
      <param name="formatters">A lista dos formatadores que fornece a seleção de um formatador adequado para serializar o parâmetro no objeto.</param>
      <param name="bodyModelValidator">O validador de modelo do corpo usado para validar o parâmetro.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithFormatter(System.Web.Http.Controllers.HttpParameterDescriptor,System.Net.Http.Formatting.MediaTypeFormatter[])">
      <summary>Associa o parâmetro analisando o conteúdo do corpo HTTP.</summary>
      <returns>O objeto de associação do parâmetro HTTP.</returns>
      <param name="parameter">O descritor do parâmetro que descreve o parâmetro a associar.</param>
      <param name="formatters">A lista dos formatadores que fornece a seleção de um formatador adequado para serializar o parâmetro no objeto.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Associa o parâmetro analisando a cadeia de consulta.</summary>
      <returns>O objeto de associação do parâmetro HTTP.</returns>
      <param name="parameter">O descritor do parâmetro que descreve o parâmetro a associar.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Associa o parâmetro analisando a cadeia de consulta.</summary>
      <returns>O objeto de associação do parâmetro HTTP.</returns>
      <param name="parameter">O descritor do parâmetro que descreve o parâmetro a associar.</param>
      <param name="valueProviderFactories">As fábricas do provedor de valor que fornecem dados do parâmetro da cadeia de consulta.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder)">
      <summary>Associa o parâmetro analisando a cadeia de consulta.</summary>
      <returns>O objeto de associação do parâmetro HTTP.</returns>
      <param name="parameter">O descritor do parâmetro que descreve o parâmetro a associar.</param>
      <param name="binder">O associador de modelo usado para montar o parâmetro em um objeto.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Associa o parâmetro analisando a cadeia de consulta.</summary>
      <returns>O objeto de associação do parâmetro HTTP.</returns>
      <param name="parameter">O descritor do parâmetro que descreve o parâmetro a associar.</param>
      <param name="binder">O associador de modelo usado para montar o parâmetro em um objeto.</param>
      <param name="valueProviderFactories">As fábricas do provedor de valor que fornecem dados do parâmetro da cadeia de consulta.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ParameterBindingExtensions.BindWithModelBinding(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ValueProviders.ValueProviderFactory[])">
      <summary>Associa o parâmetro analisando a cadeia de consulta.</summary>
      <returns>O objeto de associação do parâmetro HTTP.</returns>
      <param name="parameter">O descritor do parâmetro que descreve o parâmetro a associar.</param>
      <param name="valueProviderFactories">As fábricas do provedor de valor que fornecem dados do parâmetro da cadeia de consulta.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ReflectedHttpActionDescriptor">
      <summary>Representa um método de ação síncrono ou assíncrono refletido.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Controllers.ReflectedHttpActionDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.#ctor(System.Web.Http.Controllers.HttpControllerDescriptor,System.Reflection.MethodInfo)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Controllers.ReflectedHttpActionDescriptor" /> com os detalhes do descritor e do método especificados.</summary>
      <param name="controllerDescriptor">O descritor do controlador.</param>
      <param name="methodInfo">As informações do método de ação.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ActionName">
      <summary>Obtém o nome da ação.</summary>
      <returns>O nome da ação.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.Equals(System.Object)"></member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)">
      <summary>Executa a ação descrita e retorna uma <see cref="T:System.Threading.Tasks.Task`1" /> que, uma vez concluída, conterá o valor de retorno da ação.</summary>
      <returns>Um [T:System.Threading.Tasks.Task`1"] que, uma vez concluído, conterá o valor de retorno da ação.</returns>
      <param name="controllerContext">O contexto.</param>
      <param name="arguments">Os argumentos.</param>
      <param name="cancellationToken">Um token de cancelamento para cancelar a ação.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetCustomAttributes``1(System.Boolean)">
      <summary>Retorna uma matriz de atributos personalizados definidos para esse membro, identificados por tipo.</summary>
      <returns>Uma matriz de atributos personalizados ou uma matriz vazia se não existirem atributos personalizados.</returns>
      <param name="inherit">verdadeiro para pesquisar a cadeia de herança dessa ação para encontrar os atributos; caso contrário, falso.</param>
      <typeparam name="T">O tipo dos atributos personalizados.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetFilters">
      <summary>Recupera informações sobre os filtros de ação.</summary>
      <returns>As informações de filtro.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetHashCode"></member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.GetParameters">
      <summary>Recupera os parâmetros do método de ação.</summary>
      <returns>Os parâmetros do método de ação.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.MethodInfo">
      <summary>Obtém ou define as informações do método de ação.</summary>
      <returns>As informações do método de ação.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.ReturnType">
      <summary>Obtém o tipo de retorno deste método.</summary>
      <returns>O tipo de retorno deste método.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpActionDescriptor.SupportedHttpMethods">
      <summary>Obtém ou define os métodos HTTP suportados.</summary>
      <returns>Os métodos http suportados.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor">
      <summary>Representa o descritor de parâmetro HTTP refletido.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.#ctor(System.Web.Http.Controllers.HttpActionDescriptor,System.Reflection.ParameterInfo)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor" />.</summary>
      <param name="actionDescriptor">O descritor da ação.</param>
      <param name="parameterInfo">As informações do parâmetro.</param>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.DefaultValue">
      <summary>Obtém o valor padrão para o parâmetro.</summary>
      <returns>O valor padrão para o parâmetro.</returns>
    </member>
    <member name="M:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.GetCustomAttributes``1">
      <summary>Recupera uma coleção dos atributos personalizados do parâmetro.</summary>
      <returns>Uma coleção dos atributos personalizados do parâmetro.</returns>
      <typeparam name="TAttribute">O tipo dos atributos personalizados.</typeparam>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.IsOptional">
      <summary>Obtém um valor que indica se o parâmetro é opcional.</summary>
      <returns>verdadeiro se o parâmetro for opcional; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterInfo">
      <summary>Obtém ou define as informações do parâmetro.</summary>
      <returns>As informações do parâmetro.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterName">
      <summary>Obtém o nome do parâmetro.</summary>
      <returns>O nome do parâmetro.</returns>
    </member>
    <member name="P:System.Web.Http.Controllers.ReflectedHttpParameterDescriptor.ParameterType">
      <summary>Obtém o tipo do parâmetro.</summary>
      <returns>O tipo do parâmetro.</returns>
    </member>
    <member name="T:System.Web.Http.Controllers.ResponseMessageResultConverter">
      <summary>Representa um conversor para ações com um tipo de retorno de <see cref="T:System.Net.Http.HttpResponseMessage" />. </summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ResponseMessageResultConverter.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Controllers.ResponseMessageResultConverter" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ResponseMessageResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Converte um objeto <see cref="T:System.Web.Http.Controllers.ResponseMessageResultConverter" /> em outro objeto.</summary>
      <returns>O objeto convertido.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionResult">O resultado da ação.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ServicesContainer">
      <summary>Uma classe abstrata que fornece um contêiner para os serviços usados pela ASP.NET Web API.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Controllers.ServicesContainer" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Add(System.Type,System.Object)">
      <summary> Adiciona um serviço ao final da lista de serviços para o tipo de serviço em questão.  </summary>
      <param name="serviceType">O tipo de serviço.</param>
      <param name="service">A instância do serviço.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.AddRange(System.Type,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Adiciona os serviços da coleção especificada ao final da lista de serviços para o tipo de serviço em questão. </summary>
      <param name="serviceType">O tipo de serviço.</param>
      <param name="services">Os serviços a adicionar.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Clear(System.Type)">
      <summary> Remove todas as instâncias de serviços do tipo de serviço em questão.  </summary>
      <param name="serviceType">O tipo de serviço a limpar da lista de serviços.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ClearMultiple(System.Type)">
      <summary>Remove todas as instâncias de um tipo de várias instâncias.</summary>
      <param name="serviceType">O tipo de serviço a ser removido.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ClearSingle(System.Type)">
      <summary>Remove um tipo de serviço de única instância.</summary>
      <param name="serviceType">O tipo de serviço a ser removido.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Dispose">
      <summary>Realiza tarefas definidas pelo aplicativo associadas à liberação ou redefinição de recursos não gerenciados.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.FindIndex(System.Type,System.Predicate{System.Object})">
      <summary> Procura por um serviço que corresponda às condições definidas pelo predicado especificado e retorna o índice baseado em zero da primeira ocorrência. </summary>
      <returns>O índice da primeira ocorrência baseado em zero, se encontrado; caso contrário, -1.</returns>
      <param name="serviceType">O tipo de serviço.</param>
      <param name="match">O delegado que define as condições do elemento a pesquisar. </param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetService(System.Type)">
      <summary>Obtém uma instância de serviço de um tipo especificado.</summary>
      <param name="serviceType">O tipo de serviço.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetServiceInstances(System.Type)">
      <summary>Obtém uma lista mutável de instâncias de serviço de um tipo especificado.</summary>
      <returns>Uma lista mutável de instâncias de serviço.</returns>
      <param name="serviceType">O tipo de serviço.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.GetServices(System.Type)">
      <summary>Obtém uma coleção de instâncias de serviço de um tipo especificado.</summary>
      <returns>Uma coleção de instâncias de serviço.</returns>
      <param name="serviceType">O tipo de serviço.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Insert(System.Type,System.Int32,System.Object)">
      <summary> Insere um serviço na coleção no índice especificado. </summary>
      <param name="serviceType">O tipo de serviço.</param>
      <param name="index">O índice baseado em zero em que o serviço deve ser inserido.Se <see cref="F:System.Int32.MaxValue" /> for passado, assegure que o elemento seja adicionado ao final.</param>
      <param name="service">O serviço a inserir.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.InsertRange(System.Type,System.Int32,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Insere os elementos da coleção na lista de serviços no índice especificado. </summary>
      <param name="serviceType">O tipo de serviço.</param>
      <param name="index">O índice baseado em zero em que os novos elementos devem ser inseridos.Se <see cref="F:System.Int32.MaxValue" /> for passado, assegure que os elementos sejam adicionados ao final.</param>
      <param name="services">A coleção de instâncias a ser inserida.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.IsSingleService(System.Type)">
      <summary> Determina se o tipo de serviço deve ser buscado com GetService ou GetServices.  </summary>
      <returns>verdadeiro se o serviço for singular. </returns>
      <param name="serviceType">tipo de serviço a ser consultado</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Remove(System.Type,System.Object)">
      <summary> Remove a primeira ocorrência do serviço em questão da lista de serviços para o tipo de serviço em questão. </summary>
      <returns>verdadeiro se o item for removido com êxito; caso contrário, falso.</returns>
      <param name="serviceType">O tipo de serviço.</param>
      <param name="service">A instância do serviço a ser removida.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.RemoveAll(System.Type,System.Predicate{System.Object})">
      <summary> Remove todos os elementos que correspondem às condições definidas pelo predicado especificado. </summary>
      <returns>O número de elementos removidos da lista.</returns>
      <param name="serviceType">O tipo de serviço.</param>
      <param name="match">O delegado que define as condições dos elementos a serem removidos.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.RemoveAt(System.Type,System.Int32)">
      <summary> Remove o serviço no índice especificado. </summary>
      <param name="serviceType">O tipo de serviço.</param>
      <param name="index">O índice baseado em zero do serviço a ser removido.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.Replace(System.Type,System.Object)">
      <summary>Substitui todos os serviços existentes do serviço em questão pela instância do serviço especificada.Isto funciona para serviços tanto singular quanto plural.</summary>
      <param name="serviceType">O tipo de serviço.</param>
      <param name="service">A instância do serviço.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceMultiple(System.Type,System.Object)">
      <summary>Substitui todas as instâncias de um serviço de várias instâncias por uma nova instância.</summary>
      <param name="serviceType">O tipo de serviço.</param>
      <param name="service">A instância de serviço que substituirá os serviços atuais deste tipo.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceRange(System.Type,System.Collections.Generic.IEnumerable{System.Object})">
      <summary> Substitui todos os serviços existentes do serviço em questão pelas instâncias do serviço especificadas. </summary>
      <param name="serviceType">O tipo de serviço.</param>
      <param name="services">As instâncias do serviço.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ReplaceSingle(System.Type,System.Object)">
      <summary>Substitui um serviço de única instância de um tipo especificado.</summary>
      <param name="serviceType">O tipo de serviço. </param>
      <param name="service">A instância do serviço.</param>
    </member>
    <member name="M:System.Web.Http.Controllers.ServicesContainer.ResetCache(System.Type)">
      <summary>Remove os valores armazenados em cache para um único tipo de serviço.</summary>
      <param name="serviceType">O tipo de serviço.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.ValueResultConverter`1">
      <summary> Um conversor para criar respostas de ações que retornam um valor <paramref name="T" /> arbitrário. </summary>
      <typeparam name="T">O tipo de retorno declarado de uma ação.</typeparam>
    </member>
    <member name="M:System.Web.Http.Controllers.ValueResultConverter`1.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Controllers.ValueResultConverter`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.ValueResultConverter`1.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Converte o resultado de uma ação com tipo de retorno arbitrário <paramref name="T" /> para uma instância de <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>O objeto <see cref="T:System.Net.Http.HttpResponseMessage" /> recém-criado.</returns>
      <param name="controllerContext">O contexto do controlador da ação.</param>
      <param name="actionResult">O resultado da execução.</param>
    </member>
    <member name="T:System.Web.Http.Controllers.VoidResultConverter">
      <summary>Representa um conversor para criar uma resposta de ações que não retornam um valor.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.VoidResultConverter.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Controllers.VoidResultConverter" />.</summary>
    </member>
    <member name="M:System.Web.Http.Controllers.VoidResultConverter.Convert(System.Web.Http.Controllers.HttpControllerContext,System.Object)">
      <summary>Converte a resposta criada a partir de ações que não retornam um valor.</summary>
      <returns>A resposta convertida.</returns>
      <param name="controllerContext">O contexto do controlador.</param>
      <param name="actionResult">O resultado da ação.</param>
    </member>
    <member name="T:System.Web.Http.Dependencies.IDependencyResolver">
      <summary>Representa um contêiner de injeção de dependência.</summary>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyResolver.BeginScope">
      <summary> Inicia um escopo de resolução. </summary>
      <returns>O escopo de dependência.</returns>
    </member>
    <member name="T:System.Web.Http.Dependencies.IDependencyScope">
      <summary>Representa uma interface para o intervalo de dependências.</summary>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyScope.GetService(System.Type)">
      <summary>Recupera um serviço de um escopo.</summary>
      <returns>O serviço recuperado.</returns>
      <param name="serviceType">O serviço a ser recuperado.</param>
    </member>
    <member name="M:System.Web.Http.Dependencies.IDependencyScope.GetServices(System.Type)">
      <summary>Recupera uma coleção de serviços do escopo.</summary>
      <returns>A coleção de serviços recuperada.</returns>
      <param name="serviceType">A coleção de serviços a ser recuperada.</param>
    </member>
    <member name="T:System.Web.Http.Description.ApiDescription">
      <summary> Descreve uma API definida por um caminho de URI relativo e método HTTP. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiDescription.#ctor">
      <summary> Inicia uma nova instância da classe <see cref="T:System.Web.Http.Description.ApiDescription" />. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ActionDescriptor">
      <summary> Obtém ou define o descritor de ação que lidará com a API. </summary>
      <returns> O descritor da ação. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.Documentation">
      <summary> Obtém ou define a documentação da API. </summary>
      <returns> A documentação. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.HttpMethod">
      <summary> Obtém ou define o método HTTP. </summary>
      <returns> O método HTTP. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ID">
      <summary>Obtém a ID.A ID é exclusiva no <see cref="T:System.Web.Http.HttpServer" />.</summary>
      <returns>A ID.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ParameterDescriptions">
      <summary> Obtém as descrições de parâmetro. </summary>
      <returns>As descrições do parâmetro.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.RelativePath">
      <summary> Obtém ou define o caminho relativo. </summary>
      <returns> O caminho relativo. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.ResponseDescription">
      <summary>Obtém ou define a descrição da resposta.</summary>
      <returns>A descrição da resposta.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.Route">
      <summary> Obtém ou define a rota registrada da API. </summary>
      <returns> A rota. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.SupportedRequestBodyFormatters">
      <summary> Obtém os formatadores de corpo da solicitação compatíveis. </summary>
      <returns>Os formatadores de corpo da solicitação compatíveis.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiDescription.SupportedResponseFormatters">
      <summary> Obtém os formatadores de resposta compatíveis. </summary>
      <returns>Os formatadores de resposta compatíveis.</returns>
    </member>
    <member name="T:System.Web.Http.Description.ApiExplorer">
      <summary> Explora o espaço do URI do serviço com base nas rotas, controladores e ações disponíveis no sistema. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.#ctor(System.Web.Http.HttpConfiguration)">
      <summary> Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Description.ApiExplorer" />. </summary>
      <param name="configuration">A configuração.</param>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions">
      <summary> Obtém as descrições de API. As descrições são inicializadas no primeiro acesso. </summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorer.DocumentationProvider">
      <summary> Obtém ou define o provedor de documentação. O provedor será responsável por documentar a API. </summary>
      <returns> O provedor de documentação. </returns>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.GetHttpMethodsSupportedByAction(System.Web.Http.Routing.IHttpRoute,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary> Obtém uma coleção dos HttpMethods compatíveis com a ação. Chamado ao inicializar as <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. </summary>
      <returns>Uma coleção dos HttpMethods compatíveis com a ação.</returns>
      <param name="route">A rota.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.ShouldExploreAction(System.String,System.Web.Http.Controllers.HttpActionDescriptor,System.Web.Http.Routing.IHttpRoute)">
      <summary> Determina se a ação deve ser considerada para a geração das <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. Chamado ao inicializar as <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. </summary>
      <returns>verdadeiro se a ação deve ser considerada para geração de <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />; caso contrário, falso.</returns>
      <param name="actionVariableValue">O valor variável da ação da rota.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
      <param name="route">A rota.</param>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorer.ShouldExploreController(System.String,System.Web.Http.Controllers.HttpControllerDescriptor,System.Web.Http.Routing.IHttpRoute)">
      <summary> Determina se o controlador deve ser considerado para a geração das <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. Chamado ao inicializar as <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />. </summary>
      <returns>verdadeiro se o controlador deve ser considerado para geração de <see cref="P:System.Web.Http.Description.ApiExplorer.ApiDescriptions" />; caso contrário, falso.</returns>
      <param name="controllerVariableValue">O valor variável do controlador da rota.</param>
      <param name="controllerDescriptor">O descritor do controlador.</param>
      <param name="route">A rota.</param>
    </member>
    <member name="T:System.Web.Http.Description.ApiExplorerSettingsAttribute">
      <summary> Este atributo pode ser usado nos controladores e ações que influenciarão o comportamento do <see cref="T:System.Web.Http.Description.ApiExplorer" />. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiExplorerSettingsAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Description.ApiExplorerSettingsAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiExplorerSettingsAttribute.IgnoreApi">
      <summary> Obtém ou define um valor que indica se é preciso excluir o controlador ou a ação das instâncias <see cref="T:System.Web.Http.Description.ApiDescription" /> geradas pelo <see cref="T:System.Web.Http.Description.ApiExplorer" />. </summary>
      <returns>verdadeiro se o controlador ou ação devem ser ignorados; caso contrário, falso.</returns>
    </member>
    <member name="T:System.Web.Http.Description.ApiParameterDescription">
      <summary> Descreve um parâmetro na API definida por um caminho de URI relativo e método HTTP. </summary>
    </member>
    <member name="M:System.Web.Http.Description.ApiParameterDescription.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Description.ApiParameterDescription" />.</summary>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Documentation">
      <summary> Obtém ou define a documentação. </summary>
      <returns> A documentação. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Name">
      <summary> Obtém ou define o nome. </summary>
      <returns> O nome. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.ParameterDescriptor">
      <summary> Obtém ou define o descritor do parâmetro. </summary>
      <returns> O descritor do parâmetro. </returns>
    </member>
    <member name="P:System.Web.Http.Description.ApiParameterDescription.Source">
      <summary> Obtém ou define a origem do parâmetro. Pode vir do URI da solicitação, do corpo da solicitação ou de outros lugares. </summary>
      <returns> A origem. </returns>
    </member>
    <member name="T:System.Web.Http.Description.ApiParameterSource">
      <summary> Descreve de onde o parâmetro vem. </summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.FromBody">
      <summary>O parâmetro vem do Corpo.</summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.FromUri">
      <summary>O parâmetro vem do URI.</summary>
    </member>
    <member name="F:System.Web.Http.Description.ApiParameterSource.Unknown">
      <summary>O local é desconhecido.</summary>
    </member>
    <member name="T:System.Web.Http.Description.IApiExplorer">
      <summary> Define a interface para obter uma coleção de <see cref="T:System.Web.Http.Description.ApiDescription" />. </summary>
    </member>
    <member name="P:System.Web.Http.Description.IApiExplorer.ApiDescriptions">
      <summary> Obtém as descrições de API. </summary>
    </member>
    <member name="T:System.Web.Http.Description.IDocumentationProvider">
      <summary> Define o provedor responsável por documentar o serviço. </summary>
    </member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary> Obtém a documentação com base no <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" />. </summary>
      <returns>A documentação do controlador.</returns>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpControllerDescriptor)"></member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetDocumentation(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary> Obtém a documentação com base no <see cref="T:System.Web.Http.Controllers.HttpParameterDescriptor" />. </summary>
      <returns>A documentação do controlador.</returns>
      <param name="parameterDescriptor">O descritor do parâmetro.</param>
    </member>
    <member name="M:System.Web.Http.Description.IDocumentationProvider.GetResponseDocumentation(System.Web.Http.Controllers.HttpActionDescriptor)"></member>
    <member name="T:System.Web.Http.Description.ResponseDescription">
      <summary>Descreve a resposta da API.</summary>
    </member>
    <member name="M:System.Web.Http.Description.ResponseDescription.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Description.ResponseDescription" />.</summary>
    </member>
    <member name="P:System.Web.Http.Description.ResponseDescription.DeclaredType">
      <summary>Obtém ou define o tipo de resposta declarado.</summary>
      <returns>O tipo de resposta declarado.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ResponseDescription.Documentation">
      <summary>Obtém ou define a documentação da resposta.</summary>
      <returns>A documentação da resposta.</returns>
    </member>
    <member name="P:System.Web.Http.Description.ResponseDescription.ResponseType">
      <summary>Obtém ou define o tipo de resposta real.</summary>
      <returns>O tipo de resposta real.</returns>
    </member>
    <member name="T:System.Web.Http.Description.ResponseTypeAttribute">
      <summary>Use isto para especificar o tipo de entidade retornado por uma ação quando o tipo de retorno declarado for <see cref="T:System.Net.Http.HttpResponseMessage" /> ou <see cref="T:System.Web.Http.IHttpActionResult" />.O <see cref="P:System.Web.Http.Description.ResponseTypeAttribute.ResponseType" /> será lido por <see cref="T:System.Web.Http.Description.ApiExplorer" /> ao gerar <see cref="T:System.Web.Http.Description.ApiDescription" />.</summary>
    </member>
    <member name="M:System.Web.Http.Description.ResponseTypeAttribute.#ctor(System.Type)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Description.ResponseTypeAttribute" />.</summary>
      <param name="responseType">O tipo de resposta.</param>
    </member>
    <member name="P:System.Web.Http.Description.ResponseTypeAttribute.ResponseType">
      <summary>Obtém o tipo de resposta.</summary>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultAssembliesResolver">
      <summary> Fornece uma implementação de <see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" /> sem dependências externas. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultAssembliesResolver.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Dispatcher.DefaultAssembliesResolver" />.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultAssembliesResolver.GetAssemblies">
      <summary> Retorna uma lista de assemblies disponíveis para o aplicativo. </summary>
      <returns>Um &lt;consulte cref="T:System.Collections.Generic.ICollection`1" /&gt; de assemblies.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerActivator">
      <summary>Representa uma implementação padrão de um <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" />. Uma implementação diferente pode ser registrada por meio do <see cref="T:System.Web.Http.Services.DependencyResolver" />. Otimizados para o caso em que se tem uma instância de <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" /> por instância de <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />, mas também há suporte para casos em que existem várias instâncias de <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> para um <see cref="T:System.Web.Http.Controllers.ApiControllerActionInvoker" />. No último caso, a pesquisa é um pouco mais lenta, pois ela passa pelo dicionário de <see cref="P:HttpControllerDescriptor.Properties" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerActivator.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerActivator" />.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerActivator.Create(System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpControllerDescriptor,System.Type)">
      <summary> Cria o <see cref="T:System.Web.Http.Controllers.IHttpController" /> especificado pelo <paramref name="controllerType" /> usando o <paramref name="request" /> em questão.</summary>
      <returns>Uma instância do tipo <paramref name="controllerType" />.</returns>
      <param name="request">A mensagem de solicitação.</param>
      <param name="controllerDescriptor">O descritor do controlador.</param>
      <param name="controllerType">O tipo do controlador.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector">
      <summary>Representa uma instância <see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" /> padrão para selecionar um <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> dado uma <see cref="T:System.Net.Http.HttpRequestMessage" />. Uma implementação diferente pode ser registrada por meio do <see cref="P:System.Web.Http.HttpConfiguration.Services" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.#ctor(System.Web.Http.HttpConfiguration)">
      <summary> Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector" />.</summary>
      <param name="configuration">A configuração.</param>
    </member>
    <member name="F:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.ControllerSuffix">
      <summary>Especifica a cadeia de caracteres de sufixo no nome do controlador.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.GetControllerMapping">
      <summary>Retorna um mapa, alinhado pela cadeia de caracteres de controlador, de todos os <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> que o selecionador pode selecionar. </summary>
      <returns>Um mapa de todos os <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> que o seletor pode selecionar, ou nulo se o seletor não tiver um mapeamento bem definido do <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.GetControllerName(System.Net.Http.HttpRequestMessage)">
      <summary>Obtém o nome do controlador para a <see cref="T:System.Net.Http.HttpRequestMessage" /> especificada.</summary>
      <returns>O nome do controlador para a <see cref="T:System.Net.Http.HttpRequestMessage" /> especificada.</returns>
      <param name="request">A mensagem de solicitação HTTP.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.SelectController(System.Net.Http.HttpRequestMessage)">
      <summary>Seleciona um <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> para o <see cref="T:System.Net.Http.HttpRequestMessage" /> especificado.</summary>
      <returns>A instância <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> para a <see cref="T:System.Net.Http.HttpRequestMessage" /> fornecida.</returns>
      <param name="request">A mensagem de solicitação HTTP.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver">
      <summary> Fornece uma implementação de <see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" /> sem dependências externas. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver" />.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.#ctor(System.Predicate{System.Type})">
      <summary>Inicializa uma nova instância <see cref="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver" /> usando um predicado para filtrar os tipos de controladores. </summary>
      <param name="predicate">O predicado.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.GetControllerTypes(System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary> Retorna uma lista de controladores disponíveis para o aplicativo. </summary>
      <returns>Um &lt;consulte cref="T:System.Collections.Generic.ICollection`1" /&gt; de controladores.</returns>
      <param name="assembliesResolver">O resolvedor de assemblies.</param>
    </member>
    <member name="P:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.IsControllerTypePredicate">
      <summary>Obtém um valor se o tipo de resolvedor for um predicado do tipo de controlador.</summary>
      <returns>verdadeiro se o tipo de resolvedor for um predicado do tipo de controlador; caso contrário, falso.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.HttpControllerDispatcher">
      <summary>Expede uma <see cref="T:System.Net.Http.HttpRequestMessage" /> de entrada para uma implementação de <see cref="T:System.Web.Http.Controllers.IHttpController" /> para processamento.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpControllerDispatcher.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" /> com a configuração especificada.</summary>
      <param name="configuration">A configuração http.</param>
    </member>
    <member name="P:System.Web.Http.Dispatcher.HttpControllerDispatcher.Configuration">
      <summary>Obtém a configuração HTTP.</summary>
      <returns>A configuração HTTP.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpControllerDispatcher.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Expede uma <see cref="T:System.Net.Http.HttpRequestMessage" /> de entrada para um <see cref="T:System.Web.Http.Controllers.IHttpController" />.</summary>
      <returns>Uma <see cref="T:System.Threading.Tasks.Task`1" /> que representa a operação em andamento.</returns>
      <param name="request">A solicitação a ser expedida</param>
      <param name="cancellationToken">O token de cancelamento.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher">
      <summary> Esta classe é o manipulador de mensagem do ponto de extremidade padrão que examina a <see cref="T:System.Web.Http.Routing.IHttpRoute" /> da rota correspondente e escolhe qual manipulador de mensagem chamar. Se <see cref="P:System.Web.Http.Routing.IHttpRoute.Handler" /> for nulo, ele delegará para o <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.#ctor(System.Web.Http.HttpConfiguration)">
      <summary> Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher" />, usando a <see cref="T:System.Web.Http.HttpConfiguration" /> e o <see cref="T:System.Web.Http.Dispatcher.HttpControllerDispatcher" /> fornecidos como o manipulador padrão. </summary>
      <param name="configuration">A configuração do servidor.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.#ctor(System.Web.Http.HttpConfiguration,System.Net.Http.HttpMessageHandler)">
      <summary> Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Dispatcher.HttpRoutingDispatcher" />, usando a <see cref="T:System.Web.Http.HttpConfiguration" /> e o <see cref="T:System.Net.Http.HttpMessageHandler" /> fornecidos. </summary>
      <param name="configuration">A configuração do servidor.</param>
      <param name="defaultHandler">O manipulador padrão a ser usado quando a <see cref="T:System.Web.Http.Routing.IHttpRoute" /> não tem <see cref="P:System.Web.Http.Routing.IHttpRoute.Handler" />.</param>
    </member>
    <member name="M:System.Web.Http.Dispatcher.HttpRoutingDispatcher.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envia uma solicitação HTTP como uma operação assíncrona.</summary>
      <returns>Um objeto de tarefa que representa a operação assíncrona.</returns>
      <param name="request">A mensagem de solicitação HTTP a ser enviada.</param>
      <param name="cancellationToken">O token de cancelamento para cancelar a operação.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IAssembliesResolver">
      <summary>Fornece uma abstração para gerenciar os assemblies de um aplicativo.Uma implementação diferente pode ser registrada por meio do <see cref="T:System.Web.Http.Services.DependencyResolver" />.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IAssembliesResolver.GetAssemblies">
      <summary> Retorna uma lista de assemblies disponíveis para o aplicativo. </summary>
      <returns>Um &lt;consulte cref="T:System.Collections.Generic.ICollection`1" /&gt; de assemblies.</returns>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerActivator">
      <summary>Define os métodos necessários para um <see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" />.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerActivator.Create(System.Net.Http.HttpRequestMessage,System.Web.Http.Controllers.HttpControllerDescriptor,System.Type)">
      <summary>Cria um objeto <see cref="T:System.Web.Http.Controllers.IHttpController" />.</summary>
      <returns>Um objeto de <see cref="T:System.Web.Http.Controllers.IHttpController" />.</returns>
      <param name="request">A solicitação de mensagem.</param>
      <param name="controllerDescriptor">O descritor do controlador HTTP.</param>
      <param name="controllerType">O tipo do controlador.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerSelector">
      <summary> Define os métodos necessários para uma fábrica de <see cref="T:System.Web.Http.Controllers.IHttpController" />. </summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerSelector.GetControllerMapping">
      <summary>Retorna um mapa, alinhado pela cadeia de caracteres de controlador, de todos os <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> que o selecionador pode selecionar.Ele é chamado, primariamente, por um <see cref="T:System.Web.Http.Description.IApiExplorer" /> para descobrir todos os controladores possíveis no sistema.</summary>
      <returns>Um mapa de todos os <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> que o seletor pode selecionar, ou nulo se o seletor não tiver um mapeamento bem definido do <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</returns>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerSelector.SelectController(System.Net.Http.HttpRequestMessage)">
      <summary> Seleciona um <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" /> para o <see cref="T:System.Net.Http.HttpRequestMessage" /> especificado. </summary>
      <returns>Uma instância de <see cref="T:System.Web.Http.Controllers.HttpControllerDescriptor" />.</returns>
      <param name="request">A mensagem de solicitação.</param>
    </member>
    <member name="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver">
      <summary> Fornece uma abstração para gerenciar os tipos de controlador de um aplicativo. É possível registrar uma implementação diferente através do DependencyResolver.</summary>
    </member>
    <member name="M:System.Web.Http.Dispatcher.IHttpControllerTypeResolver.GetControllerTypes(System.Web.Http.Dispatcher.IAssembliesResolver)">
      <summary> Retorna uma lista de controladores disponíveis para o aplicativo. </summary>
      <returns>Um &lt;consulte cref="T:System.Collections.Generic.ICollection`1" /&gt; de controladores.</returns>
      <param name="assembliesResolver">O resolvedor de assemblies cancelados.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks">
      <summary>Fornece os blocos de captura usados dentro deste assembly.</summary>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpBatchHandler">
      <summary>Obtém o bloco de captura em System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpBatchHandler.SendAsync.</summary>
      <returns>O bloco de captura em System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpBatchHandler.SendAsync.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpControllerDispatcher">
      <summary>Obtém o bloco de captura em System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpControllerDispatcher.SendAsync.</summary>
      <returns>O bloco de captura em System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpControllerDispatcher.SendAsync.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpServer">
      <summary>Obtém o bloco de captura em System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpServer.SendAsync.</summary>
      <returns>O bloco de captura em System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.HttpServer.SendAsync.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.IExceptionFilter">
      <summary>Obtém o bloco de captura em System.Web.Http.ApiController.ExecuteAsync quando usando <see cref="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.IExceptionFilter" />.</summary>
      <returns>Obtém o bloco de captura em System.Web.Http.ApiController.ExecuteAsync quando usando <see cref="P:System.Web.Http.ExceptionHandling.ExceptionCatchBlocks.IExceptionFilter" />.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionContext">
      <summary>Representa uma exceção e os dados contextuais associados a ela quando ela é capturada.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContext.#ctor(System.Exception,System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContext" />.</summary>
      <param name="exception">A exceção capturada.</param>
      <param name="catchBlock">O bloco de captura em que a exceção foi capturada.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContext.#ctor(System.Exception,System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock,System.Net.Http.HttpRequestMessage)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContext" />.</summary>
      <param name="exception">A exceção capturada.</param>
      <param name="catchBlock">O bloco de captura em que a exceção foi capturada.</param>
      <param name="request">Obtém a solicitação sendo processada quando a exceção foi capturada.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContext.#ctor(System.Exception,System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock,System.Net.Http.HttpRequestMessage,System.Net.Http.HttpResponseMessage)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContext" />.</summary>
      <param name="exception">A exceção capturada.</param>
      <param name="catchBlock">O bloco de captura em que a exceção foi capturada.</param>
      <param name="request">Obtém a solicitação sendo processada quando a exceção foi capturada.</param>
      <param name="response">A resposta sendo retornada quando a exceção foi capturada.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContext.#ctor(System.Exception,System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock,System.Web.Http.Controllers.HttpActionContext)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContext" />.</summary>
      <param name="exception">A exceção capturada.</param>
      <param name="catchBlock">O bloco de captura em que a exceção foi capturada.</param>
      <param name="actionContext">O contexto de ação no qual a exceção ocorreu.</param>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.ActionContext">
      <summary>Obtém o contexto de ação no qual a exceção ocorreu, se disponível.</summary>
      <returns>O contexto de ação no qual a exceção ocorreu, se disponível.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.CatchBlock">
      <summary>Obtém o bloco de captura no qual a exceção foi capturada.</summary>
      <returns>O bloco de captura no qual a exceção foi capturada.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.ControllerContext">
      <summary>Obtém o contexto de controlador no qual a exceção ocorreu, se disponível.</summary>
      <returns>O contexto de controlador no qual a exceção ocorreu, se disponível.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.Exception">
      <summary>Obtém a exceção capturada.</summary>
      <returns>A exceção capturada.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.Request">
      <summary>Obtém a solicitação sendo processada quando a exceção foi capturada.</summary>
      <returns>Obtém a solicitação sendo processada quando a exceção foi capturada.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.RequestContext">
      <summary>Obtém o contexto de solicitação no qual a exceção ocorreu.</summary>
      <returns>O contexto de solicitação no qual a exceção ocorreu.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContext.Response">
      <summary>Obtém a resposta sendo enviada quando a exceção foi capturada.</summary>
      <returns>A resposta sendo enviada quando a exceção foi capturada.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock">
      <summary>Representa o local do bloco de captura para um contexto de exceção.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.#ctor(System.String,System.Boolean,System.Boolean)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock" />.</summary>
      <param name="name">O rótulo para o bloco de captura em que a exceção foi capturada.</param>
      <param name="isTopLevel">Um valor indicando se o bloco de captura em que a exceção foi capturada é o último antes do host.</param>
      <param name="callsHandler">Um valor indicando se as exceções no bloco de captura podem ser manipuladas depois de serem registrada.</param>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.CallsHandler">
      <summary>Obtém um valor indicando se as exceções no bloco de captura podem ser manipuladas depois de serem registrada.</summary>
      <returns>Um valor indicando se as exceções no bloco de captura podem ser manipuladas depois de serem registrada.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.IsTopLevel">
      <summary>Obtém um valor indicando se o bloco de captura em que a exceção foi capturada é o último antes do host.</summary>
      <returns>Um valor indicando se o bloco de captura em que a exceção foi capturada é o último antes do host.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.Name">
      <summary>Obtém um rótulo para o bloco de captura no qual a exceção foi capturada.</summary>
      <returns>Um rótulo para o bloco de captura no qual a exceção foi capturada.</returns>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionContextCatchBlock.ToString">
      <returns>Retorna <see cref="T:System.String" />.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionHandler">
      <summary>Representa um manipulador de exceção não manipulada.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ExceptionHandling.ExceptionHandler" />.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.Handle(System.Web.Http.ExceptionHandling.ExceptionHandlerContext)">
      <summary>Quando substituído em uma classe derivada, manipula a exceção de maneira síncrona.</summary>
      <param name="context">O contexto do manipulador de exceção.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.HandleAsync(System.Web.Http.ExceptionHandling.ExceptionHandlerContext,System.Threading.CancellationToken)">
      <summary>Quando substituído em uma classe derivada, manipula a exceção de maneira assíncrona.</summary>
      <returns>Uma tarefa que representa a operação de manipulação de exceção assíncrona.</returns>
      <param name="context">O contexto do manipulador de exceção.</param>
      <param name="cancellationToken">O token para monitorar quanto às solicitações de cancelamento.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.ShouldHandle(System.Web.Http.ExceptionHandling.ExceptionHandlerContext)">
      <summary>Determina se a exceção deve ser manipulada.</summary>
      <returns>verdadeiro se a exceção precisar ser manipulada; caso contrário, falso.</returns>
      <param name="context">O contexto do manipulador de exceção.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandler.System#Web#Http#ExceptionHandling#IExceptionHandler#HandleAsync(System.Web.Http.ExceptionHandling.ExceptionHandlerContext,System.Threading.CancellationToken)">
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionHandlerContext">
      <summary>Representa o contexto dentro do qual a manipulação da exceção não manipulada ocorre.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.#ctor(System.Web.Http.ExceptionHandling.ExceptionContext)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ExceptionHandling.ExceptionHandlerContext" />.</summary>
      <param name="exceptionContext">O contexto de exceção.</param>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.CatchBlock">
      <summary>Obtém o bloco de captura no qual a exceção foi capturada.</summary>
      <returns>O bloco de captura no qual a exceção foi capturada.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.Exception">
      <summary>Obtém a exceção capturada.</summary>
      <returns>A exceção capturada.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.ExceptionContext">
      <summary>Obtém o contexto de exceção fornecendo a exceção e os dados relacionados.</summary>
      <returns>O contexto de exceção fornecendo a exceção e os dados relacionados.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.Request">
      <summary>Obtém a solicitação sendo processada quando a exceção foi capturada.</summary>
      <returns>Obtém a solicitação sendo processada quando a exceção foi capturada.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.RequestContext">
      <summary>Obtém o contexto de solicitação no qual a exceção ocorreu.</summary>
      <returns>O contexto de solicitação no qual a exceção ocorreu.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionHandlerContext.Result">
      <summary>Obtém ou define o resultado fornecendo a mensagem de resposta quando a exceção é manipulada.</summary>
      <returns>O resultado fornecendo a mensagem de resposta quando a exceção é manipulada.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionHandlerExtensions">
      <summary>Fornece métodos de extensão para <see cref="T:System.Web.Http.ExceptionHandling.IExceptionHandler" />.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionHandlerExtensions.HandleAsync(System.Web.Http.ExceptionHandling.IExceptionHandler,System.Web.Http.ExceptionHandling.ExceptionContext,System.Threading.CancellationToken)">
      <summary>Chama um manipulador de exceção e determina a resposta que o manipula, se houver.</summary>
      <returns>Uma tarefa que, quando concluída, contém a mensagem de resposta a ser retornada quando a exceção é manipulada, ou nulo quando a exceção permanecer não manipulada.</returns>
      <param name="handler">O manipulador de exceção não manipulada.</param>
      <param name="context">O contexto de exceção.</param>
      <param name="cancellationToken">O token para monitorar quanto às solicitações de cancelamento.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionLogger">
      <summary>Representa um agente de exceção não manipulada.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ExceptionHandling.ExceptionLogger" />.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.Log(System.Web.Http.ExceptionHandling.ExceptionLoggerContext)">
      <summary>Quando substituído em uma classe derivada, registra a exceção de maneira síncrona.</summary>
      <param name="context">O contexto do agente de exceção.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.LogAsync(System.Web.Http.ExceptionHandling.ExceptionLoggerContext,System.Threading.CancellationToken)">
      <summary>Quando substituído em uma classe derivada, registra a exceção de maneira assíncrona.</summary>
      <returns>Uma tarefa que representa a operação de registro de exceção assíncrona.</returns>
      <param name="context">O contexto do agente de exceção.</param>
      <param name="cancellationToken">O token para monitorar quanto às solicitações de cancelamento.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.ShouldLog(System.Web.Http.ExceptionHandling.ExceptionLoggerContext)">
      <summary>Determina se a exceção deve ser registrada.</summary>
      <returns>verdadeiro se a exceção precisar ser registrada; caso contrário, falso.</returns>
      <param name="context">O contexto do agente de exceção.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLogger.System#Web#Http#ExceptionHandling#IExceptionLogger#LogAsync(System.Web.Http.ExceptionHandling.ExceptionLoggerContext,System.Threading.CancellationToken)">
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task" />.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionLoggerContext">
      <summary>Representa o contexto dentro do qual a manipulação da exceção não registrada ocorre.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.#ctor(System.Web.Http.ExceptionHandling.ExceptionContext)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ExceptionHandling.ExceptionLoggerContext" />.</summary>
      <param name="exceptionContext">O contexto de exceção.</param>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.CallsHandler">
      <summary>Obtém ou define um valor indicando se a exceção pode ser definida subsequentemente por um <see cref="T:System.Web.Http.ExceptionHandling.IExceptionHandler" /> para produzir uma nova mensagem de resposta.</summary>
      <returns>Um valor indicando se a exceção pode ser definida subsequentemente por um <see cref="T:System.Web.Http.ExceptionHandling.IExceptionHandler" /> para produzir uma nova mensagem de resposta.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.CatchBlock">
      <summary>Obtém o bloco de captura no qual a exceção foi capturada.</summary>
      <returns>O bloco de captura no qual a exceção foi capturada.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.Exception">
      <summary>Obtém a exceção capturada.</summary>
      <returns>A exceção capturada.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.ExceptionContext">
      <summary>Obtém o contexto de exceção fornecendo a exceção e os dados relacionados.</summary>
      <returns>O contexto de exceção fornecendo a exceção e os dados relacionados.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.Request">
      <summary>Obtém a solicitação sendo processada quando a exceção foi capturada.</summary>
      <returns>Obtém a solicitação sendo processada quando a exceção foi capturada.</returns>
    </member>
    <member name="P:System.Web.Http.ExceptionHandling.ExceptionLoggerContext.RequestContext">
      <summary>Obtém o contexto de solicitação no qual a exceção ocorreu.</summary>
      <returns>O contexto de solicitação no qual a exceção ocorreu.</returns>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionLoggerExtensions">
      <summary>Fornece métodos de extensão para <see cref="T:System.Web.Http.ExceptionHandling.IExceptionLogger" />.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionLoggerExtensions.LogAsync(System.Web.Http.ExceptionHandling.IExceptionLogger,System.Web.Http.ExceptionHandling.ExceptionContext,System.Threading.CancellationToken)">
      <summary>Chama um agente de exceção.</summary>
      <returns>Uma tarefa que representa a operação de registro de exceção assíncrona.</returns>
      <param name="logger">O agente de exceção não manipulado.</param>
      <param name="context">O contexto de exceção.</param>
      <param name="cancellationToken">O token para monitorar quanto às solicitações de cancelamento.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.ExceptionServices">
      <summary>Cria serviços de exceção para chamar registro e manipulação a partir de blocos de captura.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionServices.GetHandler(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém um manipulador de exceção que chama o serviço do manipulador registrado, se houver, e garante que as exceções não sejam propagadas acidentalmente no host.</summary>
      <returns>Um manipulador de exceção que chama o manipulador registrado e garante que as exceções não sejam propagadas acidentalmente no host.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionServices.GetHandler(System.Web.Http.HttpConfiguration)">
      <summary>Obtém um manipulador de exceção que chama o serviço do manipulador registrado, se houver, e garante que as exceções não sejam propagadas acidentalmente no host.</summary>
      <returns>Um manipulador de exceção que chama o manipulador registrado e garante que as exceções não sejam propagadas acidentalmente no host.</returns>
      <param name="configuration">A configuração.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionServices.GetLogger(System.Web.Http.Controllers.ServicesContainer)">
      <summary>Obtém um agente de exceção que chama todos os serviços de agente registrados.</summary>
      <returns>Um agente composto.</returns>
      <param name="services">O contêiner de serviços.</param>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.ExceptionServices.GetLogger(System.Web.Http.HttpConfiguration)">
      <summary>Obtém um agente de exceção que chama todos os serviços de agente registrados.</summary>
      <returns>Um agente composto.</returns>
      <param name="configuration">A configuração.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.IExceptionHandler">
      <summary>Define um manipulador de exceção não manipulada.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.IExceptionHandler.HandleAsync(System.Web.Http.ExceptionHandling.ExceptionHandlerContext,System.Threading.CancellationToken)">
      <summary>Processar uma exceção não manipulada, permitindo sua propagação ou manipulando-a ao fornecer uma mensagem de resposta ao retorno em vez disso.</summary>
      <returns>Uma tarefa que representa a operação de manipulação de exceção assíncrona.</returns>
      <param name="context">O contexto do manipulador de exceção.</param>
      <param name="cancellationToken">O token para monitorar quanto às solicitações de cancelamento.</param>
    </member>
    <member name="T:System.Web.Http.ExceptionHandling.IExceptionLogger">
      <summary>Define um agente de exceção não manipulada.</summary>
    </member>
    <member name="M:System.Web.Http.ExceptionHandling.IExceptionLogger.LogAsync(System.Web.Http.ExceptionHandling.ExceptionLoggerContext,System.Threading.CancellationToken)">
      <summary>Registra uma exceção não manipulada.</summary>
      <returns>Uma tarefa que representa a operação de registro de exceção assíncrona.</returns>
      <param name="context">O contexto do agente de exceção.</param>
      <param name="cancellationToken">O token para monitorar quanto às solicitações de cancelamento.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ActionDescriptorFilterProvider">
      <summary>Fornece informações sobre um método de ação, como seu nome, controlador, parâmetros, atributos e filtros.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionDescriptorFilterProvider.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Filters.ActionDescriptorFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionDescriptorFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Retorna os filtros associados a este método de ação.</summary>
      <returns>Os filtros associados a este método de ação.</returns>
      <param name="configuration">A configuração.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ActionFilterAttribute">
      <summary>Representa a classe básica para todos os atributos de filtro de ação.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Filters.ActionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecuted(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Ocorre depois que o método da ação é invocado.</summary>
      <param name="actionExecutedContext">O contexto da ação executada.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecutedAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecuting(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Ocorre antes que o método da ação seja invocado.</summary>
      <param name="actionContext">O contexto da ação.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.OnActionExecutingAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.Filters.ActionFilterAttribute.System#Web#Http#Filters#IActionFilter#ExecuteActionFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Executa a ação do filtro de forma assíncrona.</summary>
      <returns>A tarefa recém-criada para esta operação.</returns>
      <param name="actionContext">O contexto da ação.</param>
      <param name="cancellationToken">O token de cancelamento atribuído a esta tarefa.</param>
      <param name="continuation">A função de delegação a continuar depois que o método da ação for invocado.</param>
    </member>
    <member name="T:System.Web.Http.Filters.AuthorizationFilterAttribute">
      <summary>Fornece detalhes para o filtro de autorização.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.OnAuthorization(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Chama quando um processo solicita autorização.</summary>
      <param name="actionContext">O contexto de ação, que encapsula as informações para usar o <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" />.</param>
    </member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.OnAuthorizationAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.Filters.AuthorizationFilterAttribute.System#Web#Http#Filters#IAuthorizationFilter#ExecuteAuthorizationFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Executa o filtro de autorização durante a sincronização.</summary>
      <returns>O filtro de autorização durante a sincronização.</returns>
      <param name="actionContext">O contexto de ação, que encapsula as informações para usar o <see cref="T:System.Web.Http.Filters.AuthorizationFilterAttribute" />.</param>
      <param name="cancellationToken">O token de cancelamento que cancela a operação.</param>
      <param name="continuation">Uma continuação da operação.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ConfigurationFilterProvider">
      <summary>Representa o provedor de filtros de configuração.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ConfigurationFilterProvider.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Filters.ConfigurationFilterProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ConfigurationFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Retorna os filtros associados a este método de configuração.</summary>
      <returns>Os filtros associados a este método de configuração.</returns>
      <param name="configuration">A configuração.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="T:System.Web.Http.Filters.ExceptionFilterAttribute">
      <summary>Representa os atributos para o filtro de exceção.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Filters.ExceptionFilterAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.OnException(System.Web.Http.Filters.HttpActionExecutedContext)">
      <summary>Eleva o evento de exceção.</summary>
      <param name="actionExecutedContext">O contexto de uma ação.</param>
    </member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.OnExceptionAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)"></member>
    <member name="M:System.Web.Http.Filters.ExceptionFilterAttribute.System#Web#Http#Filters#IExceptionFilter#ExecuteExceptionFilterAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)">
      <summary>Executa o filtro de exceção de forma assíncrona.</summary>
      <returns>O resultado da execução.</returns>
      <param name="actionExecutedContext">O contexto de uma ação.</param>
      <param name="cancellationToken">O contexto do cancelamento.</param>
    </member>
    <member name="T:System.Web.Http.Filters.FilterAttribute">
      <summary>Representa a classe base para atributos de filtro de ação.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.FilterAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Filters.FilterAttribute" />.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.FilterAttribute.AllowMultiple">
      <summary>Obtém um valor que indica se vários filtros são permitidos.</summary>
      <returns>verdadeiro se vários filtros forem permitidos; caso contrário, falso.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.FilterInfo">
      <summary>Fornece informações sobre os filtros de ação disponíveis.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.FilterInfo.#ctor(System.Web.Http.Filters.IFilter,System.Web.Http.Filters.FilterScope)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Filters.FilterInfo" />.</summary>
      <param name="instance">A instância desta classe.</param>
      <param name="scope">O escopo desta classe.</param>
    </member>
    <member name="P:System.Web.Http.Filters.FilterInfo.Instance">
      <summary>Obtém ou define uma instância de <see cref="T:System.Web.Http.Filters.FilterInfo" />.</summary>
      <returns>Uma <see cref="T:System.Web.Http.Filters.FilterInfo" />.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.FilterInfo.Scope">
      <summary>Obtém ou define o escopo <see cref="T:System.Web.Http.Filters.FilterInfo" />.</summary>
      <returns>O escopo da FilterInfo.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.FilterScope">
      <summary>Define valores que especificam a ordem em que os filtros são executados no mesmo tipo e ordem do filtro.</summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Action">
      <summary>Especifica uma ordem após o Controlador. </summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Controller">
      <summary>Especifica uma ordem antes de Ação e após Global.</summary>
    </member>
    <member name="F:System.Web.Http.Filters.FilterScope.Global">
      <summary>Especifica uma ação antes do Controlador.</summary>
    </member>
    <member name="T:System.Web.Http.Filters.HttpActionExecutedContext">
      <summary>Representa a ação do contexto HTTP executado.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpActionExecutedContext.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Filters.HttpActionExecutedContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpActionExecutedContext.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Exception)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Filters.HttpActionExecutedContext" />.</summary>
      <param name="actionContext">O contexto da ação.</param>
      <param name="exception">A exceção.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.ActionContext">
      <summary>Obtém ou define o contexto da ação HTTP.</summary>
      <returns>O contexto da ação HTTP.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Exception">
      <summary>Obtém ou define a exceção que foi elevada durante a execução.</summary>
      <returns>A exceção que foi elevada durante a execução.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Request">
      <summary>Obtém o objeto <see cref="T:System.Net.Http.HttpRequestMessage" /> do contexto.</summary>
      <returns>O objeto <see cref="T:System.Net.Http.HttpRequestMessage" /> do contexto.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpActionExecutedContext.Response">
      <summary>Obtém ou define a <see cref="T:System.Net.Http.HttpResponseMessage" /> do contexto.</summary>
      <returns>A <see cref="T:System.Net.Http.HttpResponseMessage" /> do contexto.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.HttpAuthenticationChallengeContext">
      <summary>Representa um contexto de desafio de autenticação contendo informações para executar um desafio de autenticação.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpAuthenticationChallengeContext.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.IHttpActionResult)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Filters.HttpAuthenticationChallengeContext" />.</summary>
      <param name="actionContext">O contexto da ação.</param>
      <param name="result">O resultado da ação atual.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationChallengeContext.ActionContext">
      <summary>Obtém o contexto da ação.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationChallengeContext.Request">
      <summary>Obtém a mensagem de solicitação.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationChallengeContext.Result">
      <summary>Obtém ou define o resultado da ação a ser executado.</summary>
    </member>
    <member name="T:System.Web.Http.Filters.HttpAuthenticationContext">
      <summary>Representa um contexto de autenticação contendo informações para executar a autenticação.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpAuthenticationContext.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Security.Principal.IPrincipal)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Filters.HttpAuthenticationContext" />.</summary>
      <param name="actionContext">O contexto da ação.</param>
      <param name="principal">A entidade de segurança atual.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.ActionContext">
      <summary>Obtém o contexto da ação.</summary>
      <returns>O contexto da ação.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.ErrorResult">
      <summary>Obtém ou define o resultado de uma ação que produzirá uma resposta de erro (se a autenticação falhou; caso contrário, nulo).</summary>
      <returns>O resultado de uma ação que produzirá uma resposta de erro.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.Principal">
      <summary>Obtém ou define a entidade de segurança autenticada.</summary>
      <returns>A entidade de segurança autenticada.</returns>
    </member>
    <member name="P:System.Web.Http.Filters.HttpAuthenticationContext.Request">
      <summary>Obtém a mensagem de solicitação.</summary>
      <returns>A mensagem de solicitação.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.HttpFilterCollection">
      <summary>Representa uma coleção de filtros HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Filters.HttpFilterCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Add(System.Web.Http.Filters.IFilter)">
      <summary>Adiciona um item ao final da coleção.</summary>
      <param name="filter">O item a adicionar à coleção.</param>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.AddRange(System.Collections.Generic.IEnumerable{System.Web.Http.Filters.IFilter})"></member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Clear">
      <summary>Remove todos os itens da coleção.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Contains(System.Web.Http.Filters.IFilter)">
      <summary>Determina se a coleção contém o item especificado.</summary>
      <returns>verdadeiro se a coleção contiver o item especificado; caso contrário, falso.</returns>
      <param name="filter">O item a ser verificado.</param>
    </member>
    <member name="P:System.Web.Http.Filters.HttpFilterCollection.Count">
      <summary>Obtém o número de elementos na coleção.</summary>
      <returns>O número de elementos na coleção.</returns>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.GetEnumerator">
      <summary>Obtém um enumerador que itera por meio da coleção.</summary>
      <returns>Um objeto enumerador que pode ser usado para iterar por meio da coleção.</returns>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.Remove(System.Web.Http.Filters.IFilter)">
      <summary>Remove o item especificado da coleção.</summary>
      <param name="filter">O item a ser removido da coleção.</param>
    </member>
    <member name="M:System.Web.Http.Filters.HttpFilterCollection.System#Collections#IEnumerable#GetEnumerator">
      <summary>Obtém um enumerador que itera por meio da coleção.</summary>
      <returns>Um objeto enumerador que pode ser usado para iterar por meio da coleção.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.IActionFilter">
      <summary>Define os métodos usados em um filtro de ação.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IActionFilter.ExecuteActionFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Executa a ação do filtro de forma assíncrona.</summary>
      <returns>A tarefa recém-criada para esta operação.</returns>
      <param name="actionContext">O contexto da ação.</param>
      <param name="cancellationToken">O token de cancelamento atribuído a esta tarefa.</param>
      <param name="continuation">A função de delegação a continuar depois que o método da ação for invocado.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IAuthenticationFilter">
      <summary>Define um filtro que executa a autenticação.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IAuthenticationFilter.AuthenticateAsync(System.Web.Http.Filters.HttpAuthenticationContext,System.Threading.CancellationToken)">
      <summary>Autentica a solicitação.</summary>
      <returns>Uma Tarefa que executará a autenticação.</returns>
      <param name="context">O contexto de autenticação.</param>
      <param name="cancellationToken">O token para monitorar quanto às solicitações de cancelamento.</param>
    </member>
    <member name="M:System.Web.Http.Filters.IAuthenticationFilter.ChallengeAsync(System.Web.Http.Filters.HttpAuthenticationChallengeContext,System.Threading.CancellationToken)"></member>
    <member name="T:System.Web.Http.Filters.IAuthorizationFilter">
      <summary>Define os métodos necessários para um filtro de autorização.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IAuthorizationFilter.ExecuteAuthorizationFilterAsync(System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken,System.Func{System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}})">
      <summary>Executa o filtro de autorização para sincronizar.</summary>
      <returns>O filtro de autorização para sincronizar.</returns>
      <param name="actionContext">O contexto da ação.</param>
      <param name="cancellationToken">O token de cancelamento associado ao filtro.</param>
      <param name="continuation">A continuação.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IExceptionFilter">
      <summary>Define os métodos necessários para um filtro de exceção.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IExceptionFilter.ExecuteExceptionFilterAsync(System.Web.Http.Filters.HttpActionExecutedContext,System.Threading.CancellationToken)">
      <summary>Executa um filtro de exceção assíncrono.</summary>
      <returns>Um filtro de exceção assíncrono.</returns>
      <param name="actionExecutedContext">O contexto da ação executada.</param>
      <param name="cancellationToken">O token de cancelamento.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IFilter">
      <summary>Define os métodos usados em um filtro.</summary>
    </member>
    <member name="P:System.Web.Http.Filters.IFilter.AllowMultiple">
      <summary>Obtém ou define um valor que indica se mais de uma instância do atributo indicado pode ser especificada em relação a um único elemento do programa.</summary>
      <returns>verdadeiro se mais de uma instância puder ser especificada; caso contrário, falso.O padrão é falso.</returns>
    </member>
    <member name="T:System.Web.Http.Filters.IFilterProvider">
      <summary>Fornece informações do filtro.</summary>
    </member>
    <member name="M:System.Web.Http.Filters.IFilterProvider.GetFilters(System.Web.Http.HttpConfiguration,System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Retorna uma enumeração dos filtros.</summary>
      <returns>Uma enumeração dos filtros.</returns>
      <param name="configuration">A configuração HTTP.</param>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="T:System.Web.Http.Filters.IOverrideFilter"></member>
    <member name="P:System.Web.Http.Filters.IOverrideFilter.FiltersToOverride"></member>
    <member name="T:System.Web.Http.Hosting.HttpPropertyKeys">
      <summary> Fornece chaves comuns para propriedades armazenadas nas <see cref="P:System.Net.Http.HttpRequestMessage.Properties" />.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.ClientCertificateKey">
      <summary>Fornece uma chave para o certificado de cliente para esta solicitação.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.DependencyScope">
      <summary>Fornece uma chave para o <see cref="T:System.Web.Http.Dependencies.IDependencyScope" /> associado a esta solicitação.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.DisposableRequestResourcesKey">
      <summary>Fornece uma chave para a coleção de recursos que deve ser disposta quando uma solicitação é disposta.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.HttpActionDescriptorKey">
      <summary> Fornece uma chave para o <see cref="T:System.Web.Http.Controllers.HttpActionDescriptor" /> associado a esta solicitação. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.HttpConfigurationKey">
      <summary>Fornece uma chave para o <see cref="T:System.Web.Http.HttpConfiguration" /> associado a esta solicitação.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.HttpRouteDataKey">
      <summary>Fornece uma chave para o <see cref="T:System.Web.Http.Routing.IHttpRouteData" /> associado a esta solicitação.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.IncludeErrorDetailKey">
      <summary>Fornece uma chave que indica se os detalhes do erro devem ser incluídos na resposta para esta solicitação HTTP.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.IsBatchRequest">
      <summary> Fornece uma chave que indica se a solicitação é uma solicitação de lotes. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.IsLocalKey">
      <summary>Fornece uma chave que indica se a solicitação se origina de um endereço local.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.NoRouteMatched">
      <summary> Fornece uma chave que indica se a solicitação falhou em corresponder a uma rota. </summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RequestContextKey">
      <summary>Fornece uma chave para o <see cref="T:System.Web.Http.Controllers.HttpRequestContext" /> para esta solicitação.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RequestCorrelationKey">
      <summary>Fornece uma chave para a <see cref="T:System.Guid" /> armazenada nas <see cref="T:System.Net.Http.Properties" />. Esta é a ID de correlação daquela solicitação.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RequestQueryNameValuePairsKey">
      <summary>Fornece uma chave para a cadeia de consulta analisada armazenada nas <see cref="T:System.Net.Http.Properties" />.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.RetrieveClientCertificateDelegateKey">
      <summary>Fornece uma chave para um delegado que pode recuperar o certificado de cliente para esta solicitação.</summary>
    </member>
    <member name="F:System.Web.Http.Hosting.HttpPropertyKeys.SynchronizationContextKey">
      <summary>Fornece uma chave para o <see cref="T:System.Threading.SynchronizationContext" /> atual armazenado em Properties(). Se Current() for nulo, nenhum contexto será armazenado.</summary>
    </member>
    <member name="T:System.Web.Http.Hosting.IHostBufferPolicySelector">
      <summary> Interface para controlar o uso das solicitações e respostas de armazenamento em buffer no host. Se um host fornece suporte para as solicitações e/ou respostas de armazenamento em buffer, então ele poderá usar essa interface para determinar a política de quando o armazenamento em buffer terá que ser usado.</summary>
    </member>
    <member name="M:System.Web.Http.Hosting.IHostBufferPolicySelector.UseBufferedInputStream(System.Object)">
      <summary>Determina se o host deve armazenar o corpo da entidade <see cref="T:System.Net.Http.HttpRequestMessage" /> em buffer.</summary>
      <returns>verdadeiro se o armazenamento em buffer deve ser usado; caso contrário, uma solicitação transmitida deve ser usada.</returns>
      <param name="hostContext">O contexto do host.</param>
    </member>
    <member name="M:System.Web.Http.Hosting.IHostBufferPolicySelector.UseBufferedOutputStream(System.Net.Http.HttpResponseMessage)">
      <summary>Determina se o host deve armazenar o corpo da entidade <see cref="T.System.Net.Http.HttpResponseMessage" /> em buffer.</summary>
      <returns>verdadeiro se o armazenamento em buffer deve ser usado; caso contrário, uma resposta transmitida deve ser usada.</returns>
      <param name="response">A mensagem de resposta HTTP.</param>
    </member>
    <member name="T:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler">
      <summary>Representa um manipulador de mensagens que suprime os resultados de autenticação do host.</summary>
    </member>
    <member name="M:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler" />.</summary>
    </member>
    <member name="M:System.Web.Http.Hosting.SuppressHostPrincipalMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>Envia uma mensagem de solicitação de forma assíncrona.</summary>
      <returns>A tarefa que conclui a operação assíncrona.</returns>
      <param name="request">A mensagem de solicitação a ser enviada.</param>
      <param name="cancellationToken">O token de cancelamento.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.ModelMetadata">
      <summary>Representa a classe de metadados do ModelMetadata.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.#ctor(System.Web.Http.Metadata.ModelMetadataProvider,System.Type,System.Func{System.Object},System.Type,System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Metadata.ModelMetadata" />.</summary>
      <param name="provider">O provedor.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="modelAccessor">O acessador do modelo.</param>
      <param name="modelType">O tipo do modelo.</param>
      <param name="propertyName">O nome da propriedade.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.AdditionalValues">
      <summary>Obtém um dicionário que contém metadados adicionais sobre o modelo.</summary>
      <returns>Um dicionário que contém metadados adicionais sobre o modelo.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ContainerType">
      <summary>Obtém ou define o tipo do contêiner para o modelo.</summary>
      <returns>O tipo do contêiner para o modelo.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ConvertEmptyStringToNull">
      <summary>Obtém ou define um valor que indica se cadeias de caracteres vazias que são postadas em formulários devem ser convertidas em nulo.</summary>
      <returns>verdadeiro se as cadeias de caracteres vazias que são postadas nos formulários devem ser convertidas em nulo; caso contrário falso.O valor padrão é verdadeiro.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Description">
      <summary>Obtém ou define a descrição do modelo.</summary>
      <returns>A descrição do modelo.O valor padrão é nulo.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.GetDisplayName">
      <summary>Obtém o nome de exibição do modelo.</summary>
      <returns>O nome de exibição do modelo.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadata.GetValidators(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Obtém uma lista de validadores para o modelo.</summary>
      <returns>Uma lista de validadores para o modelo.</returns>
      <param name="validatorProviders">Os provedores do validador para o modelo.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsComplexType">
      <summary>Obtém ou define um valor que indica se o modelo é um tipo complexo.</summary>
      <returns>Um valor que indica se o modelo é considerado um complexo.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsNullableValueType">
      <summary>Obtém um valor que indica se o tipo é anulável.</summary>
      <returns>verdadeiro se o tipo for anulável; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.IsReadOnly">
      <summary>Obtém ou define um valor que indica se o modelo é somente leitura.</summary>
      <returns>verdadeiro se o modelo for somente leitura; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Model">
      <summary>Obtém o valor do modelo.</summary>
      <returns>O valor do modelo pode ser nulo.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.ModelType">
      <summary>Obtém o tipo do modelo.</summary>
      <returns>O tipo do modelo.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Properties">
      <summary>Obtém um conjunto de objetos de metadados de modelo que descrevem as propriedades do modelo.</summary>
      <returns>Um conjunto de objetos de metadados de modelo que descrevem as propriedades do modelo.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.PropertyName">
      <summary>Obtém o nome da propriedade.</summary>
      <returns>O nome da propriedade.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.ModelMetadata.Provider">
      <summary>Obtém ou define o provedor.</summary>
      <returns>O provedor.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.ModelMetadataProvider">
      <summary>Fornece uma classe base abstrata para um provedor de metadados personalizado.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Obtém um objeto ModelMetadata para cada propriedade de um modelo.</summary>
      <returns>Um objeto ModelMetadata para cada propriedade de um modelo.</returns>
      <param name="container">O contêiner.</param>
      <param name="containerType">O tipo do contêiner.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Obtém um metadado para a propriedade especificada.</summary>
      <returns>O modelo de metadados para a propriedade especificada.</returns>
      <param name="modelAccessor">O acessador do modelo.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="propertyName">A propriedade para se obter o modelo de metadados.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.ModelMetadataProvider.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Obtém os metadados para o tipo de modelo e o acessador de modelo especificados.</summary>
      <returns>Os metadados.</returns>
      <param name="modelAccessor">O acessador do modelo.</param>
      <param name="modelType">O tipo do modo.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1">
      <summary>Fornece uma classe abstrata para implementar um provedor de metadados.</summary>
      <typeparam name="TModelMetadata">O tipo de metadados do modelo.</typeparam>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.CreateMetadataFromPrototype(`0,System.Func{System.Object})">
      <summary>Quando substituído em uma classe derivada, cria os metadados do modelo para a propriedade usando o protótipo especificado.</summary>
      <returns>Os metadados do modelo para a propriedade.</returns>
      <param name="prototype">O protótipo a partir do qual serão criados os metadados do modelo.</param>
      <param name="modelAccessor">O acessador do modelo.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Quando substituído em uma classe derivada, cria os metadados do modelo para a propriedade.</summary>
      <returns>Os metadados do modelo para a propriedade.</returns>
      <param name="attributes">O conjunto de atributos.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="modelType">O tipo do modelo.</param>
      <param name="propertyName">O nome da propriedade.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.GetMetadataForProperties(System.Object,System.Type)">
      <summary>Recupera uma lista de propriedades para o modelo.</summary>
      <returns>Uma lista de propriedades para o modelo.</returns>
      <param name="container">O contêiner do modelo.</param>
      <param name="containerType">O tipo do contêiner.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.GetMetadataForProperty(System.Func{System.Object},System.Type,System.String)">
      <summary>Recupera os metadados para a propriedade especificada usando o tipo de contêiner e o nome da propriedade.</summary>
      <returns>Os metadados para a propriedade especificada.</returns>
      <param name="modelAccessor">O acessador do modelo.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="propertyName">O nome da propriedade.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.AssociatedMetadataProvider`1.GetMetadataForType(System.Func{System.Object},System.Type)">
      <summary>Retorna os metadados para a propriedade especificada usando o tipo do modelo.</summary>
      <returns>Os metadados para a propriedade especificada.</returns>
      <param name="modelAccessor">O acessador do modelo.</param>
      <param name="modelType">O tipo do contêiner.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes">
      <summary>Fornece dados de cache de protótipo para <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.#ctor(System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes" />.</summary>
      <param name="attributes">Os atributos que fornecem dados para a inicialização.</param>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.Display">
      <summary>Obtém ou define o atributo para exibição de metadados.</summary>
      <returns>O atributo de exibição de metadados.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.DisplayFormat">
      <summary>Obtém ou define o atributo do formato de exibição dos metadados.</summary>
      <returns>O atributo do formato de exibição dos metadados.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.DisplayName"></member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.Editable">
      <summary>Obtém ou define o atributo editável dos metadados.</summary>
      <returns>O atributo editável dos metadados.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedDataAnnotationsMetadataAttributes.ReadOnly">
      <summary>Obtém ou define o atributo somente leitura dos metadados.</summary>
      <returns>O atributo somente leitura dos metadados.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata">
      <summary>Fornece um contêiner para metadados comuns, para a classe <see cref="T:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider" />, para um modelo de dados.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata" />.</summary>
      <param name="prototype">O protótipo usado para inicializar os metadados do modelo.</param>
      <param name="modelAccessor">O acessador do modelo.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.#ctor(System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata" />.</summary>
      <param name="provider">O provedor de metadados.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="modelType">O tipo do modelo.</param>
      <param name="propertyName">O nome da propriedade.</param>
      <param name="attributes">Os atributos que fornecem dados para a inicialização.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.ComputeConvertEmptyStringToNull">
      <summary>Recupera um valor que indica se cadeias de caracteres vazias que são postadas em formulários devem ser convertidas em nulas.</summary>
      <returns>verdadeiro se as cadeias de caracteres vazias que são postadas nos formulários devem ser convertidas em nulo; caso contrário falso.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.ComputeDescription">
      <summary>Recupera a descrição do modelo.</summary>
      <returns>A descrição do modelo.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.ComputeIsReadOnly">
      <summary>Recupera um valor que indica se o modelo é somente leitura.</summary>
      <returns>verdadeiro se o modelo for somente leitura; caso contrário, falso.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata.GetDisplayName"></member>
    <member name="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1">
      <summary>Fornece dados de cache de protótipo para o <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" />.</summary>
      <typeparam name="TPrototypeCache">O tipo de cache do protótipo.</typeparam>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.#ctor(System.Web.Http.Metadata.Providers.CachedModelMetadata{`0},System.Func{System.Object})">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" />.</summary>
      <param name="prototype">O protótipo.</param>
      <param name="modelAccessor">O acessador do modelo.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.#ctor(System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider,System.Type,System.Type,System.String,`0)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Metadata.Providers.CachedModelMetadata`1" />.</summary>
      <param name="provider">O provedor.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="modelType">O tipo do modelo.</param>
      <param name="propertyName">O nome da propriedade.</param>
      <param name="prototypeCache">O cache do protótipo.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeConvertEmptyStringToNull">
      <summary>Indica se cadeias de caracteres vazias que foram postadas nos formulários devem ser computadas e convertidas em nulas.</summary>
      <returns>verdadeiro se as cadeias de caracteres vazias que são postadas nos formulários devem ser computadas e convertidas em nulo; caso contrário, falso.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeDescription">
      <summary>Indica o valor de computação.</summary>
      <returns>O valor de computação.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeIsComplexType">
      <summary>Obtém um valor que indica se o modelo é um tipo complexo.</summary>
      <returns>Um valor que indica se o modelo é considerado um tipo complexo pela estrutura Web API.</returns>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ComputeIsReadOnly">
      <summary>Obtém um valor que indica se o modelo a ser computado é somente leitura.</summary>
      <returns>verdadeiro se o modelo a ser computado for somente leitura; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.ConvertEmptyStringToNull">
      <summary>Obtém ou define um valor que indica se cadeias de caracteres vazias que são postadas em formulários devem ser convertidas em nulo.</summary>
      <returns>verdadeiro se as cadeias de caracteres vazias que são postadas nos formulários devem ser convertidas em nulo; caso contrário falso.O valor padrão é verdadeiro.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.Description">
      <summary>Obtém ou define a descrição do modelo.</summary>
      <returns>A descrição do modelo.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.IsComplexType">
      <summary>Obtém um valor que indica se o modelo é um tipo complexo.</summary>
      <returns>Um valor que indica se o modelo é considerado um tipo complexo pela estrutura Web API.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.IsReadOnly">
      <summary>Obtém ou define um valor que indica se o modelo é somente leitura.</summary>
      <returns>verdadeiro se o modelo for somente leitura; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Http.Metadata.Providers.CachedModelMetadata`1.PrototypeCache">
      <summary>Obtém ou define um valor que indica se o cache do protótipo está sendo atualizado.</summary>
      <returns>verdadeiro se o cache do protótipo estiver sendo atualizado; caso contrário, falso.</returns>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider">
      <summary>Implementa o provedor de metadados do modelo padrão.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider.CreateMetadataFromPrototype(System.Web.Http.Metadata.Providers.CachedDataAnnotationsModelMetadata,System.Func{System.Object})">
      <summary>Cria os metadados a partir do protótipo da propriedade especificada.</summary>
      <returns>Os metadados para a propriedade.</returns>
      <param name="prototype">O protótipo.</param>
      <param name="modelAccessor">O acessador do modelo.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.DataAnnotationsModelMetadataProvider.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Cria os metadados para a propriedade especificada.</summary>
      <returns>Os metadados para a propriedade.</returns>
      <param name="attributes">Os atributos.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="modelType">O tipo do modelo.</param>
      <param name="propertyName">O nome da propriedade.</param>
    </member>
    <member name="T:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider">
      <summary>Representa um provedor de metadados de modelo vazio.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider.CreateMetadataFromPrototype(System.Web.Http.Metadata.ModelMetadata,System.Func{System.Object})">
      <summary>Cria metadados a partir do protótipo.</summary>
      <returns>Os metadados.</returns>
      <param name="prototype">O protótipo dos metadados do modelo.</param>
      <param name="modelAccessor">O acessador do modelo.</param>
    </member>
    <member name="M:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider.CreateMetadataPrototype(System.Collections.Generic.IEnumerable{System.Attribute},System.Type,System.Type,System.String)">
      <summary>Cria um protótipo do provedor de metadados do <see cref="T:System.Web.Http.Metadata.Providers.EmptyModelMetadataProvider" />.</summary>
      <returns>Um protótipo do provedor de metadados.</returns>
      <param name="attributes">Os atributos.</param>
      <param name="containerType">O tipo do contêiner.</param>
      <param name="modelType">O tipo do modelo.</param>
      <param name="propertyName">O nome da propriedade.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.CancellationTokenParameterBinding">
      <summary>Representa a associação diretamente para o token de cancelamento.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CancellationTokenParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.CancellationTokenParameterBinding" />.</summary>
      <param name="descriptor">O descritor de associação.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CancellationTokenParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Executa a associação durante a sincronização.</summary>
      <returns>A associação durante a sincronização.</returns>
      <param name="metadataProvider">O provedor de metadados.</param>
      <param name="actionContext">O contexto da ação.</param>
      <param name="cancellationToken">A notificação depois do cancelamento das operações.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.CustomModelBinderAttribute">
      <summary>Representa um atributo que invoca um associador de modelo personalizado.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CustomModelBinderAttribute.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.CustomModelBinderAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.CustomModelBinderAttribute.GetBinder">
      <summary>Recupera o associador de modelo associado.</summary>
      <returns>Uma referência a um objeto que implementa a interface do <see cref="T:System.Web.Http.ModelBinding.IModelBinder" />.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.DefaultActionValueBinder">
      <summary>Representa o valor de ação padrão do associador.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.DefaultActionValueBinder.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.DefaultActionValueBinder.GetBinding(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Implementação padrão da interface <see cref="T:System.Web.Http.Controllers.IActionValueBinder" />.Esta interface e o principal ponto de entrada para os parâmetros de ação de associação.</summary>
      <returns>O <see cref="T:System.Web.Http.Controllers.HttpActionBinding" /> associado à <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" />.</returns>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.DefaultActionValueBinder.GetParameterBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Obtém o <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> associada à <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" />.</summary>
      <returns>O <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> associado à <see cref="T:System.Web.Http.ModelBinding.DefaultActionValueBinder" />.</returns>
      <param name="parameter">O descritor do parâmetro.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ErrorParameterBinding">
      <summary>Define um erro de associação.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ErrorParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.ErrorParameterBinding" />.</summary>
      <param name="descriptor">O descritor do erro.</param>
      <param name="message">A mensagem.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ErrorParameterBinding.ErrorMessage">
      <summary>Obtém a mensagem de erro.</summary>
      <returns>A mensagem de erro.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ErrorParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Executa o método de associação durante a sincronização.</summary>
      <param name="metadataProvider">O provedor de metadados.</param>
      <param name="actionContext">O contexto da ação.</param>
      <param name="cancellationToken">O valor do Token de cancelamento.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.FormatterParameterBinding">
      <summary>Representa a associação de parâmetros que lerá a partir do corpo e invocará os formatadores.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Web.Http.Validation.IBodyModelValidator)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" />.</summary>
      <param name="descriptor">O descritor.</param>
      <param name="formatters">O formatador.</param>
      <param name="bodyModelValidator">O validador de modelo de corpo.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.BodyModelValidator">
      <summary>Obtém ou define uma interface para o validador do modelo de corpo.</summary>
      <returns>Uma interface para o validador de modelo de corpo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.ErrorMessage">
      <summary>Obtém a mensagem de erro.</summary>
      <returns>A mensagem de erro.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Executa a associação de <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" /> de forma assíncrona.</summary>
      <returns>O resultado da ação.</returns>
      <param name="metadataProvider">O provedor de metadados.</param>
      <param name="actionContext">O contexto associado à ação.</param>
      <param name="cancellationToken">O token de cancelamento.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.Formatters">
      <summary>Obtém ou define um objeto enumerável que representa o formatador para a associação de parâmetros.</summary>
      <returns>Um objeto enumerável que representa o formatador para a associação de parâmetros.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.ReadContentAsync(System.Net.Http.HttpRequestMessage,System.Type,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Lê o conteúdo de <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" /> de forma assíncrona.</summary>
      <returns>O resultado da ação.</returns>
      <param name="request">A solicitação.</param>
      <param name="type">O tipo.</param>
      <param name="formatters">O formatador.</param>
      <param name="formatterLogger">O agente de log de formato.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormatterParameterBinding.ReadContentAsync(System.Net.Http.HttpRequestMessage,System.Type,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter},System.Net.Http.Formatting.IFormatterLogger,System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.ModelBinding.FormatterParameterBinding.WillReadBody">
      <summary>Entende se a <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" /> lerá o corpo.</summary>
      <returns>Verdadeiro se a <see cref="T:System.Web.Http.ModelBinding.FormatterParameterBinding" /> irá ler o corpo; caso contrário, falso.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.FormDataCollectionExtensions">
      <summary>Representa as extensões da coleção de dados do formulário.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection)">
      <summary>Lê as extensões da coleção com o tipo especificado.</summary>
      <returns>As extensões da coleção lidas.</returns>
      <param name="formData">Os dados do formulário.</param>
      <typeparam name="T">O tipo genérico.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection,System.String,System.Net.Http.Formatting.IRequiredMemberSelector,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Lê as extensões da coleção com o tipo especificado.</summary>
      <returns>As extensões da coleção.</returns>
      <param name="formData">Os dados do formulário.</param>
      <param name="modelName">O nome do modelo.</param>
      <param name="requiredMemberSelector">O seletor de membros necessário.</param>
      <param name="formatterLogger">O agente de log do formatador.</param>
      <typeparam name="T">O tipo genérico.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection,System.String,System.Web.Http.Controllers.HttpActionContext)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type)">
      <summary>Lê as extensões da coleção com o tipo especificado.</summary>
      <returns>As extensões da coleção com o tipo especificado.</returns>
      <param name="formData">Os dados do formulário.</param>
      <param name="type">O tipo do objeto.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type,System.String,System.Net.Http.Formatting.IRequiredMemberSelector,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Lê as extensões da coleção com o tipo e o nome do modelo especificados.</summary>
      <returns>As extensões da coleção.</returns>
      <param name="formData">Os dados do formulário.</param>
      <param name="type">O tipo do objeto.</param>
      <param name="modelName">O nome do modelo.</param>
      <param name="requiredMemberSelector">O seletor de membros necessário.</param>
      <param name="formatterLogger">O agente de log do formatador.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type,System.String,System.Net.Http.Formatting.IRequiredMemberSelector,System.Net.Http.Formatting.IFormatterLogger,System.Web.Http.HttpConfiguration)">
      <summary>Desserialize os dados de formulário para o tipo determinado por meio da associação de modelos.</summary>
      <returns>melhor tentativa de associar o objeto. A melhor tentativa pode ser nula.</returns>
      <param name="formData">coleção com dados de url de formulário analisados</param>
      <param name="type">tipo de destino a ser lido como</param>
      <param name="modelName">nulo ou vazio para ler todo o formulário como um único objeto. Isso é comum para dados do corpo. Ou o nome de um modelo para fazer uma associação parcial com dados do formulário. Isto é comum para a extração de campos individuais.</param>
      <param name="requiredMemberSelector">O <see cref="T:System.Net.Http.Formatting.IRequiredMemberSelector" /> usado para determinar os membros necessários.</param>
      <param name="formatterLogger">O <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> em que se registrará os eventos.</param>
      <param name="config">A configuração do <see cref="T:System.Web.Http.HttpConfiguration" /> para seleção do associador. Pode ser nulo se a configuração ainda não tiver sido criada. Nesse caso, uma nova configuração será criada.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type,System.String,System.Web.Http.Controllers.HttpActionContext)"></member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs(System.Net.Http.Formatting.FormDataCollection,System.Type,System.Web.Http.Controllers.HttpActionContext)"></member>
    <member name="M:System.Web.Http.ModelBinding.FormDataCollectionExtensions.ReadAs``1(System.Net.Http.Formatting.FormDataCollection,System.Web.Http.Controllers.HttpActionContext)">
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:System.Web.Http.ModelBinding.HttpBindingBehavior">
      <summary>Enumera o comportamento da associação HTTP.</summary>
    </member>
    <member name="F:System.Web.Http.ModelBinding.HttpBindingBehavior.Never">
      <summary>Jamais utilize associação HTTP.</summary>
    </member>
    <member name="F:System.Web.Http.ModelBinding.HttpBindingBehavior.Optional">
      <summary>O comportamento de associação opcional</summary>
    </member>
    <member name="F:System.Web.Http.ModelBinding.HttpBindingBehavior.Required">
      <summary>É necessária a associação HTTP.</summary>
    </member>
    <member name="T:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute">
      <summary>Fornece uma classe base para os atributos do comportamento de associação de modelos.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute.#ctor(System.Web.Http.ModelBinding.HttpBindingBehavior)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute" />.</summary>
      <param name="behavior">O comportamento.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute.Behavior">
      <summary>Obtém ou define a categoria de comportamento.</summary>
      <returns>A categoria de comportamento.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.HttpBindingBehaviorAttribute.TypeId">
      <summary>Obtém um identificador exclusivo para este atributo.</summary>
      <returns>A ID desse atributo.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.HttpRequestParameterBinding">
      <summary>O parâmetro associa-se à solicitação.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.HttpRequestParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.HttpRequestParameterBinding" />.</summary>
      <param name="descriptor">O descritor do parâmetro.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.HttpRequestParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Executa a associação de parâmetros de forma assíncrona.</summary>
      <returns>O parâmetro associado.</returns>
      <param name="metadataProvider">O provedor de metadados.</param>
      <param name="actionContext">O contexto da ação.</param>
      <param name="cancellationToken">O token de cancelamento.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.IModelBinder">
      <summary>Define os métodos necessários para um associador de modelo.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.IModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Associa o modelo a um valor usando o contexto de controlador especificado e o contexto de associação.</summary>
      <returns>verdadeiro se a associação do modelo for bem-sucedida; caso contrário, falso.</returns>
      <param name="actionContext">O contexto da ação.</param>
      <param name="bindingContext">O contexto de associação.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.IValueProviderParameterBinding">
      <summary>Representa um provedor de valor para a associação de parâmetros.</summary>
    </member>
    <member name="P:System.Web.Http.ModelBinding.IValueProviderParameterBinding.ValueProviderFactories">
      <summary>Obtém as instâncias de <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> usadas por esta associação de parâmetros.</summary>
      <returns>As instâncias <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> usadas por esta associação de parâmetros.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter">
      <summary>Representa a classe do <see cref="T:System.Net.Http.Formatting.MediaTypeFormatter" /> para lidar com dados terminados em URL do formulário HTML, também conhecida como application/x-www-form-urlencoded.  </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.#ctor(System.Web.Http.HttpConfiguration)"></member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.CanReadType(System.Type)">
      <summary> Determina se este <see cref="T:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter" /> pode ler objetos do <paramref name="type" /> especificado. </summary>
      <returns>verdadeiro se os objetos deste tipo puderem ser lidos, caso contrário, falso.</returns>
      <param name="type">O tipo do objeto que será lido.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.JQueryMvcFormUrlEncodedFormatter.ReadFromStreamAsync(System.Type,System.IO.Stream,System.Net.Http.HttpContent,System.Net.Http.Formatting.IFormatterLogger)">
      <summary>Lê um objeto do <paramref name="type" /> especificado a partir do fluxo especificado. Este método é chamado durante a desserialização.</summary>
      <returns>Uma <see cref="T:System.Threading.Tasks.Task" /> cujo resultado será a instância do objeto lido.</returns>
      <param name="type">O tipo de objeto a ser lido.</param>
      <param name="readStream">A <see cref="T:System.IO.Stream" /> a partir da qual será feita a leitura.</param>
      <param name="content">O conteúdo sendo lido.</param>
      <param name="formatterLogger">O <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> em que se registrará os eventos.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderAttribute">
      <summary>Especifica que este parâmetro usa uma associador de modelo.Opcionalmente, pode especificar o associador de modelo e os provedores de valor específicos que acionam aquele associador do modelo.Os atributos derivados podem fornecer configurações convenientes para o associador de modelo ou provedor de valor.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.ModelBinderAttribute" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.#ctor(System.Type)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.ModelBinderAttribute" />.</summary>
      <param name="binderType">O tipo de associador de modelos.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderAttribute.BinderType">
      <summary>Obtém ou define o tipo do associador de modelos.</summary>
      <returns>O tipo de associador de modelos. </returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>Obtém a associação de um parâmetro.</summary>
      <returns>A <see cref="T:System.Web.Http.Controllers.HttpParameterBinding" /> que contém a associação.</returns>
      <param name="parameter">O parâmetro a associar.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary> Obtém o IModelBinder para este tipo. </summary>
      <returns> um associador de modelo não nulo.</returns>
      <param name="configuration">A configuração.</param>
      <param name="modelType">tipo de modelo que espera-se que o associador associe.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinderProvider(System.Web.Http.HttpConfiguration)">
      <summary>Obtém o provedor de associador de modelos.</summary>
      <returns>A instância <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</returns>
      <param name="configuration">O objeto de configuração <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
      <summary> Obtém os provedores de valor que serão alimentados ao associador de modelos. </summary>
      <returns>Um conjunto de instâncias de <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</returns>
      <param name="configuration">O objeto de configuração <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderAttribute.Name">
      <summary>Obtém ou define o nome a ser considerado como nome de parâmetro durante a associação de modelo.</summary>
      <returns>O nome de parâmetro a ser considerado.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderAttribute.SuppressPrefixCheck">
      <summary>Obtém ou define um valor que especifica se a verificação de prefixo deve ser suprimida.</summary>
      <returns>verdadeiro se a verificação de prefixo deve ser suprimida; caso contrário, falso.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderConfig">
      <summary>Fornece um contêiner para a configuração do associador de modelo.</summary>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderConfig.ResourceClassKey">
      <summary>Obtém ou define o nome do arquivo de recurso (chave de classe) que contém valores de cadeia de caracteres localizados.</summary>
      <returns>O nome do arquivo de recurso (chave de classe).</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderConfig.TypeConversionErrorMessageProvider">
      <summary>Obtém ou define o provedor atual da mensagem de erro de conversão do tipo.</summary>
      <returns>O provedor atual da mensagem de erro de conversão de tipo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderConfig.ValueRequiredErrorMessageProvider">
      <summary>Obtém ou define o provedor atual das mensagens de erro de valor necessário.</summary>
      <returns>O provedor da mensagem de erro.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderErrorMessageProvider">
      <summary>Fornece um contêiner para o provedor de mensagens de erro do associador de modelos.</summary>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderParameterBinding">
      <summary> Descreve um parâmetro que obtém a associação via ModelBinding.   </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderParameterBinding.#ctor(System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.ModelBinding.IModelBinder,System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.ModelBinderParameterBinding" />.</summary>
      <param name="descriptor">O descritor do parâmetro.</param>
      <param name="modelBinder">O associador de modelos.</param>
      <param name="valueProviderFactories">A coleção da fábrica do provedor de valor.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderParameterBinding.Binder">
      <summary>Obtém o associador de modelo.</summary>
      <returns>O associador de modelos.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderParameterBinding.ExecuteBindingAsync(System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.Threading.CancellationToken)">
      <summary>Executa de forma assíncrona a associação de parâmetros através do associador de modelos.</summary>
      <returns>A tarefa que é marcada quando a associação é concluída.</returns>
      <param name="metadataProvider">O provedor de metadados a ser usado para a validação.</param>
      <param name="actionContext">O contexto de ação para a associação.</param>
      <param name="cancellationToken">O token de cancelamento atribuído a esta tarefa para cancelar a operação de associação.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBinderParameterBinding.ValueProviderFactories">
      <summary>Obtém a coleção da fábrica do provedor de valor.</summary>
      <returns>A coleção da fábrica do provedor de valor.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBinderProvider">
      <summary>Fornece uma classe base abstrata para provedores de associadores de modelo.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderProvider.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Encontra um associador de um tipo em particular.</summary>
      <returns>Um associador, que pode tentar associar este tipo. Ou nulo, se o associador souber, estaticamente, que jamais conseguirá associar o tipo.</returns>
      <param name="configuration">Um objeto de configuração.</param>
      <param name="modelType">O tipo do modelo com o qual faz a associação.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelBindingContext">
      <summary>Fornece o contexto em que funciona um associador de modelos.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBindingContext.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.ModelBindingContext" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelBindingContext.#ctor(System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.ModelBindingContext" />.</summary>
      <param name="bindingContext">O contexto de associação.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.FallbackToEmptyPrefix">
      <summary>Obtém ou define um valor que indica se o associador deve usar um prefixo vazio.</summary>
      <returns>verdadeiro se o associador deve usar um prefixo vazio; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.Model">
      <summary>Obtém ou define o modelo.</summary>
      <returns>O modelo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelMetadata">
      <summary>Obtém ou define os metadados do modelo.</summary>
      <returns>Os metadados do modelo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelName">
      <summary>Obtém ou define o nome do modelo.</summary>
      <returns>O nome do modelo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelState">
      <summary>Obtém ou define o estado do modelo.</summary>
      <returns>O estado do modelo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ModelType">
      <summary>Obtém ou define o tipo do modelo.</summary>
      <returns>O tipo do modelo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.PropertyMetadata">
      <summary>Obtém os metadados da propriedade.</summary>
      <returns>Os metadados da propriedade.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ValidationNode">
      <summary>Obtém ou define o nó de validação.</summary>
      <returns>O nó de validação.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelBindingContext.ValueProvider">
      <summary>Obtém ou define o provedor de valor.</summary>
      <returns>O provedor de valor.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelError">
      <summary>Representa um erro que ocorre durante a associação de modelo.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelError.#ctor(System.Exception)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.ModelError" /> usando a exceção especificada.</summary>
      <param name="exception">A exceção.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelError.#ctor(System.Exception,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.ModelError" /> usando a mensagem de erro e a exceção especificadas.</summary>
      <param name="exception">A exceção.</param>
      <param name="errorMessage">A mensagem de erro</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelError.#ctor(System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.ModelError" /> usando a mensagem de erro especificada.</summary>
      <param name="errorMessage">A mensagem de erro</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelError.ErrorMessage">
      <summary>Obtém ou define a mensagem de erro.</summary>
      <returns>A mensagem de erro.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelError.Exception">
      <summary>Obtém ou define o objeto de exceção.</summary>
      <returns>O objeto de exceção.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelErrorCollection">
      <summary>Representa uma coleção de instâncias <see cref="T:System.Web.Http.ModelBinding.ModelError" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelErrorCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.ModelErrorCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelErrorCollection.Add(System.Exception)">
      <summary>Adiciona o objeto de Exceção especificado ao conjunto de erro de modelo.</summary>
      <param name="exception">A exceção.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelErrorCollection.Add(System.String)">
      <summary>Adiciona a mensagem de erro especificada à coleção de erros de modelo.</summary>
      <param name="errorMessage">A mensagem de erro.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelState">
      <summary>Encapsula o estado de associação de modelo em uma propriedade de um argumento de método de ação ou para o argumento em si.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelState.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.ModelState" />.</summary>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelState.Errors">
      <summary>Obtém um objeto de <see cref="T:System.Web.Http.ModelBinding.ModelErrorCollection" /> contendo quaisquer erros que ocorreram durante a associação de modelo.</summary>
      <returns>Os erros de estado de modelo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelState.Value">
      <summary>Obtém um objeto de <see cref="T:System.Web.Http.ValueProviders.ValueProviderResult" /> que encapsula o valor que estava sendo associado durante a associação de modelo.</summary>
      <returns>O valor de estado de modelo.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ModelStateDictionary">
      <summary>Representa o estado de uma tentativa de associar um formulário postado a um método de ação, que inclui informações de validação.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> ao usar valores que são copiados do dicionário de estado de modelo especificado.</summary>
      <param name="dictionary">O dicionário.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Add(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState})">
      <summary>Adiciona o item especificado ao dicionário de estado de modelo.</summary>
      <param name="item">O objeto a ser adicionado ao dicionário de estado de modelo.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Add(System.String,System.Web.Http.ModelBinding.ModelState)">
      <summary>Adiciona um elemento que tem a chave especificada e o valor ao dicionário de estado de modelo.</summary>
      <param name="key">A chave do elemento a ser adicionado.</param>
      <param name="value">O valor do elemento a ser adicionado.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.Exception)">
      <summary>Adiciona o erro do modelo especificado ao conjunto de erros do dicionário de estado de modelo que está associado à chave especificada.</summary>
      <param name="key">A chave.</param>
      <param name="exception">A exceção.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.AddModelError(System.String,System.String)">
      <summary>Adiciona a mensagem de erro especificada ao conjunto de erros do dicionário de estado de modelo que está associado à chave especificada.</summary>
      <param name="key">A chave.</param>
      <param name="errorMessage">A mensagem de erro.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Clear">
      <summary>Remove todos os itens do dicionário de estado de modelo.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState})">
      <summary>Determina se o dicionário de estado do modelo contém um valor específico.</summary>
      <returns>verdadeiro se o item for encontrado no dicionário de estado de modelo; caso contrário, falso.</returns>
      <param name="item">O objeto a ser localizado no dicionário de estado de modelo.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.ContainsKey(System.String)">
      <summary>Determina se o dicionário de estado de modelo contém a chave especificada.</summary>
      <returns>verdadeiro se o dicionário de estado de modelo contiver a chave especificada; caso contrário, falso.</returns>
      <param name="key">A chave a ser localizada no dicionário de estado de modelo.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState}[],System.Int32)">
      <summary>Copia os elementos do dicionário de estado de modelo para uma matriz, começando em um índice especificado.</summary>
      <param name="array">A matriz. A matriz deve ter indexação baseada em zero.</param>
      <param name="arrayIndex">O índice baseado em zero na matriz na qual a cópia inicia.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Count">
      <summary>Obtém o número de pares chave/valor no conjunto.</summary>
      <returns>O número de pares chave/valor no conjunto.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.GetEnumerator">
      <summary>Retorna um enumerador que pode ser usado para iterar por meio do conjunto.</summary>
      <returns>Um enumerador que pode ser usado para iterar por meio do conjunto.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.IsReadOnly">
      <summary>Obtém um valor que indica se o conjunto é somente leitura.</summary>
      <returns>verdadeiro se o conjunto for somente leitura; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.IsValid">
      <summary>Obtém um valor que indica se esta instância do dicionário do estado de modelo é válida.</summary>
      <returns>verdadeiro se a instância for válida; caso contrário, falso.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.IsValidField(System.String)">
      <summary>Determina se há quaisquer objetos de <see cref="T:System.Web.Http.ModelBinding.ModelError" /> que estão associados a ou prefixados com a chave especificada.</summary>
      <returns>verdadeiro se o dicionário de estado de modelo contiver um valor associado à chave especificada; caso contrário, falso.</returns>
      <param name="key">A chave.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Item(System.String)">
      <summary>Obtém ou define o valor que é associado à chave especificada.</summary>
      <returns>O item de estado de modelo.</returns>
      <param name="key">A chave.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Keys">
      <summary>Obtém um conjunto que contém as chaves no dicionário.</summary>
      <returns>Um conjunto que contém as chaves do dicionário de estado de modelo.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Merge(System.Web.Http.ModelBinding.ModelStateDictionary)">
      <summary>Copia os valores do objeto do <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> especificado neste dicionário, substituindo os valores existentes caso as chaves sejam as mesmas.</summary>
      <param name="dictionary">O dicionário.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Web.Http.ModelBinding.ModelState})">
      <summary>Remove a primeira ocorrência do objeto especificado do dicionário de estado de modelo.</summary>
      <returns>verdadeiro se o item foi removido com sucesso do dicionário de estado de modelo; caso contrário, falso. Este método também retorna falso se o item não for encontrado no dicionário de estado de modelo.</returns>
      <param name="item">O objeto a ser removido do dicionário de estado de modelo.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.Remove(System.String)">
      <summary>Remove o elemento que tem a chave especificada do dicionário de estado de modelo.</summary>
      <returns>verdadeiro se o elemento for removido com êxito; caso contrário, falso. Este método também retorna falso se a chave não for encontrada no dicionário de estado de modelo.</returns>
      <param name="key">A chave do elemento a ser removido.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.SetModelValue(System.String,System.Web.Http.ValueProviders.ValueProviderResult)">
      <summary>Define o valor da chave especificada usando o dicionário de provedor de valor especificado.</summary>
      <param name="key">A chave.</param>
      <param name="value">O valor.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.System#Collections#IEnumerable#GetEnumerator">
      <summary>Retorna um enumerador que itera por meio de uma coleção.</summary>
      <returns>Um objeto IEnumerator que pode ser usado para iterar por meio da coleção.</returns>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ModelStateDictionary.TryGetValue(System.String,System.Web.Http.ModelBinding.ModelState@)">
      <summary>Tenta obter o valor que é associado à chave especificada.</summary>
      <returns>verdadeiro se o objeto contiver um elemento que contém a chave especificada; caso contrário, falso.</returns>
      <param name="key">A chave do valor a ser obtido.</param>
      <param name="value">O valor associado à chave especificada.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.ModelStateDictionary.Values">
      <summary>Obtém um conjunto que contém os valores no dicionário.</summary>
      <returns>Um conjunto que contém os valores do dicionário de estado de modelo.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.ParameterBindingRulesCollection">
      <summary> Coleção de funções que podem produzir uma associação de parâmetro para um determinado parâmetro.    </summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.ParameterBindingRulesCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.Add(System.Type,System.Func{System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.Controllers.HttpParameterBinding})">
      <summary> Adiciona uma função ao fim da coleção.  A função adicionada é um wrapper em volta da funcInner que verifica que o parameterType corresponde ao typeMatch. </summary>
      <param name="typeMatch">tipo para corresponder em relação ao HttpParameterDescriptor.ParameterType</param>
      <param name="funcInner">função interna invocada se a correspondência de tipo tiver êxito</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.Insert(System.Int32,System.Type,System.Func{System.Web.Http.Controllers.HttpParameterDescriptor,System.Web.Http.Controllers.HttpParameterBinding})">
      <summary> Insira uma função no índice especificado na coleção. /// A função adicionada é um wrapper em volta da funcInner que verifica que o parameterType corresponde ao typeMatch. </summary>
      <param name="index">índice no qual inserir.</param>
      <param name="typeMatch">tipo para corresponder em relação ao HttpParameterDescriptor.ParameterType</param>
      <param name="funcInner">função interna invocada se a correspondência de tipo tiver êxito</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.ParameterBindingRulesCollection.LookupBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary> Execute cada função de associação na ordem até que uma delas retorne um associação não nula.  </summary>
      <returns>a primeira associação não nula produzida para o parâmetro. Nulo se nenhuma associação for produzida.</returns>
      <param name="parameter">parâmetro a associar.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1">
      <summary>Mapeia uma solicitação do navegador para uma matriz.</summary>
      <typeparam name="TElement">O tipo da matriz.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Indica se o modelo está associado.</summary>
      <returns>verdadeiro se o modelo especificado estiver associado; caso contrário, falso.</returns>
      <param name="actionContext">O contexto da ação.</param>
      <param name="bindingContext">O contexto de associação.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinder`1.CreateOrReplaceCollection(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IList{`0})">
      <summary>Converte o conjunto em uma matriz.</summary>
      <returns>verdadeiro em todos os casos.</returns>
      <param name="actionContext">O contexto da ação.</param>
      <param name="bindingContext">O contexto de associação.</param>
      <param name="newCollection">O novo conjunto.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider">
      <summary>Fornece um associador de modelos para matrizes.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ArrayModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Retorna um associador de modelos para matrizes.</summary>
      <returns>Um objeto de associador de modelos ou nulo se a tentativa de obter um associador de modelos for malsucedida.</returns>
      <param name="configuration">A configuração.</param>
      <param name="modelType">O tipo do modelo.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1">
      <summary>Mapeia uma solicitação do navegador para um conjunto.</summary>
      <typeparam name="TElement">O tipo do conjunto.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Associa o modelo usando o contexto de execução especificado e o contexto de associação.</summary>
      <returns>verdadeiro se a associação do modelo for bem-sucedida; caso contrário, falso.</returns>
      <param name="actionContext">O contexto da ação.</param>
      <param name="bindingContext">O contexto de associação.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinder`1.CreateOrReplaceCollection(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IList{`0})">
      <summary>Fornece uma maneira de as classes derivadas manipularem o conjunto antes de retorná-lo do associador.</summary>
      <returns>verdadeiro em todos os casos.</returns>
      <param name="actionContext">O contexto da ação.</param>
      <param name="bindingContext">O contexto de associação.</param>
      <param name="newCollection">O novo conjunto.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider">
      <summary>Fornece um associador de modelos para um conjunto.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CollectionModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera um associador de modelos para um conjunto.</summary>
      <returns>O associador de modelos.</returns>
      <param name="configuration">A configuração do modelo.</param>
      <param name="modelType">O tipo do modelo.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto">
      <summary>Representa um objeto de transferência de dados (DTO) para um modelo complexo.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDto.#ctor(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Metadata.ModelMetadata})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
      <param name="modelMetadata">Os metadados do modelo.</param>
      <param name="propertyMetadata">A coleção de metadados de propriedade.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDto.ModelMetadata">
      <summary>Obtém ou define os metadados do modelo de <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
      <returns>Os metadados do modelo de <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDto.PropertyMetadata">
      <summary>Obtém ou define a coleção de metadados de propriedade de <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
      <returns>A coleção de metadados de propriedade de <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDto.Results">
      <summary>Obtém ou define os resultados de <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
      <returns>Os resultados de <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder">
      <summary>Representa um associador de modelos para o objeto <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Determina se o modelo especificado está associado.</summary>
      <returns>verdadeiro se o modelo especificado estiver associado; caso contrário, falso.</returns>
      <param name="actionContext">O contexto da ação.</param>
      <param name="bindingContext">O contexto de associação.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider">
      <summary>Representa um modelo complexo que invoca um provedor de associador de modelos.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera o associador de modelo associado.</summary>
      <returns>O associador de modelos.</returns>
      <param name="configuration">A configuração.</param>
      <param name="modelType">O tipo do modelo a ser recuperado.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult">
      <summary>Representa o resultado do objeto <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDto" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult.#ctor(System.Object,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult" />.</summary>
      <param name="model">O modelo do objeto.</param>
      <param name="validationNode">O nó de validação.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult.Model">
      <summary>Obtém ou define o modelo deste objeto.</summary>
      <returns>O modelo deste objeto.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult.ValidationNode">
      <summary>Obtém ou define o <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> deste objeto.</summary>
      <returns>O <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> deste objeto.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinder">
      <summary>Representa um <see cref="T:System.Web.Http.ModelBinding.IModelBinder" /> que delega para um de uma coleção de instâncias <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinder.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.ModelBinding.IModelBinder})">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinder" />.</summary>
      <param name="binders">Uma enumeração dos associadores.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinder.#ctor(System.Web.Http.ModelBinding.IModelBinder[])">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinder" />.</summary>
      <param name="binders">Uma matriz de associadores.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Indica se o modelo especificado está associado.</summary>
      <returns>verdadeiro se o modelo estiver associado; caso contrário, falso.</returns>
      <param name="actionContext">O contexto da ação.</param>
      <param name="bindingContext">O contexto de associação.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider">
      <summary>Representa a classe dos provedores de associadores de modelo composto.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.ModelBinding.ModelBinderProvider})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider" />.</summary>
      <param name="providers">Uma coleção de <see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" /></param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Obtém os associadores para o modelo.</summary>
      <returns>O associador do modelo.</returns>
      <param name="configuration">A configuração do associador.</param>
      <param name="modelType">O tipo do modelo.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.CompositeModelBinderProvider.Providers">
      <summary>Obtém os provedores do associador de modelo composto.</summary>
      <returns>A coleção de provedores.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2">
      <summary>Mapeia uma solicitação do navegador para um objeto de dados de dicionário.</summary>
      <typeparam name="TKey">O tipo da chave.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinder`2.CreateOrReplaceCollection(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Collections.Generic.IList{System.Collections.Generic.KeyValuePair{`0,`1}})">
      <summary>Converte o conjunto em um dicionário.</summary>
      <returns>verdadeiro em todos os casos.</returns>
      <param name="actionContext">O contexto da ação.</param>
      <param name="bindingContext">O contexto de associação.</param>
      <param name="newCollection">O novo conjunto.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider">
      <summary>Fornece um associador de modelos para um dicionário.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.DictionaryModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera o associador de modelo associado.</summary>
      <returns>O associador de modelos associado.</returns>
      <param name="configuration">A configuração a ser usada.</param>
      <param name="modelType">O tipo do modelo.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2">
      <summary>Mapeia uma solicitação do navegador para um objeto de dados de par chave/valor.</summary>
      <typeparam name="TKey">O tipo da chave.</typeparam>
      <typeparam name="TValue">O tipo do valor.</typeparam>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinder`2.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Associa o modelo usando o contexto de execução especificado e o contexto de associação.</summary>
      <returns>verdadeiro se a associação do modelo for bem-sucedida; caso contrário, falso.</returns>
      <param name="actionContext">O contexto da ação.</param>
      <param name="bindingContext">O contexto de associação.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider">
      <summary>Fornece um associador de modelos para um conjunto de pares chave/valor.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.KeyValuePairModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera o associador de modelo associado.</summary>
      <returns>O associador de modelos associado.</returns>
      <param name="configuration">A configuração.</param>
      <param name="modelType">O tipo do modelo.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder">
      <summary>Mapeia uma solicitação do navegador para um objeto de dados mutável.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Associa o modelo usando o contexto de ação e o contexto de associação especificados.</summary>
      <returns>verdadeiro se a associação for realizada com êxito; caso contrário, falso.</returns>
      <param name="actionContext">O contexto da ação.</param>
      <param name="bindingContext">O contexto de associação.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.CanUpdateProperty(System.Web.Http.Metadata.ModelMetadata)">
      <summary>Recupera um valor que indica se uma propriedade pode ser atualizada.</summary>
      <returns>verdadeiro se a propriedade puder ser atualizada; caso contrário, falso.</returns>
      <param name="propertyMetadata">Os metadados da propriedade a ser avaliada.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.CreateModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Cria uma instância do modelo.</summary>
      <returns>O objeto do modelo recém-criado.</returns>
      <param name="actionContext">O contexto da ação.</param>
      <param name="bindingContext">O contexto de associação.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.EnsureModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Cria uma instância do modelo se uma instância ainda não existir no contexto de associação.</summary>
      <param name="actionContext">O contexto da ação.</param>
      <param name="bindingContext">O contexto de associação.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.GetMetadataForProperties(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Recupera os metadados de propriedades do modelo.</summary>
      <returns>Os metadados das propriedades do modelo.</returns>
      <param name="actionContext">O contexto da ação.</param>
      <param name="bindingContext">O contexto de associação.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinder.SetProperty(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext,System.Web.Http.Metadata.ModelMetadata,System.Web.Http.ModelBinding.Binders.ComplexModelDtoResult,System.Web.Http.Validation.ModelValidator)">
      <summary>Define o valor de uma propriedade especificada.</summary>
      <param name="actionContext">O contexto da ação.</param>
      <param name="bindingContext">O contexto de associação.</param>
      <param name="propertyMetadata">Os metadados da propriedade a ser configurada.</param>
      <param name="dtoResult">As informações de validação sobre a propriedade.</param>
      <param name="requiredValidator">O validador para o modelo.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider">
      <summary>Fornece um associador de modelos para objetos mutáveis.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.MutableObjectModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera o associador de modelo para o tipo especificado.</summary>
      <returns>O associador de modelos.</returns>
      <param name="configuration">A configuração.</param>
      <param name="modelType">O tipo do modelo a ser recuperado.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider">
      <summary>Fornece um associador de modelos simples para esta classe de associação de modelos.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.#ctor(System.Type,System.Func{System.Web.Http.ModelBinding.IModelBinder})">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider" />.</summary>
      <param name="modelType">O tipo de modelo.</param>
      <param name="modelBinderFactory">A fábrica de associadores de modelos.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.#ctor(System.Type,System.Web.Http.ModelBinding.IModelBinder)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider" /> ao usar o associador de modelos e o tipo de modelo especificados.</summary>
      <param name="modelType">O tipo de modelo.</param>
      <param name="modelBinder">O associador de modelos.</param>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Retorna um associador de modelos usando o contexto de execução e o contexto de associação especificados.</summary>
      <returns>O associador de modelos ou nulo se a tentativa de obter um associador de modelos for malsucedida.</returns>
      <param name="configuration">A configuração.</param>
      <param name="modelType">O tipo de modelo.</param>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.ModelType">
      <summary>Obtém o tipo do modelo.</summary>
      <returns>O tipo do modelo.</returns>
    </member>
    <member name="P:System.Web.Http.ModelBinding.Binders.SimpleModelBinderProvider.SuppressPrefixCheck">
      <summary>Obtém ou define um valor que especifica se a verificação de prefixo deve ser suprimida.</summary>
      <returns>verdadeiro se a verificação de prefixo deve ser suprimida; caso contrário, falso.</returns>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder">
      <summary>Mapeia uma solicitação do navegador para um objeto de dados. Este tipo é usado quando a associação de modelo requer conversões usando um conversor de tipo .NET Framework.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Associa o modelo usando o contexto de controlador e o contexto de associação especificados.</summary>
      <returns>verdadeiro se a associação do modelo for bem-sucedida; caso contrário, falso.</returns>
      <param name="actionContext">O contexto da ação.</param>
      <param name="bindingContext">O contexto de associação.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider">
      <summary>Fornece um associador de modelos para um modelo que requer conversão de tipo.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeConverterModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera um associador de modelos para um modelo que requer conversão de tipo.</summary>
      <returns>O associador de modelos ou Nada se o tipo não puder ser convertido ou se não houver valor a ser convertido.</returns>
      <param name="configuration">A configuração do associador.</param>
      <param name="modelType">O tipo do modelo.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder">
      <summary>Mapeia uma solicitação do navegador para um objeto de dados. Esta classe é usada quando a associação de modelo não requer conversão de tipo.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>Associa o modelo usando o contexto de execução especificado e o contexto de associação.</summary>
      <returns>verdadeiro se a associação do modelo for bem-sucedida; caso contrário, falso.</returns>
      <param name="actionContext">O contexto da ação.</param>
      <param name="bindingContext">O contexto de associação.</param>
    </member>
    <member name="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider">
      <summary>Fornece um associador de modelos para um modelo que não requer conversão de tipo.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ModelBinding.Binders.TypeMatchModelBinderProvider.GetBinder(System.Web.Http.HttpConfiguration,System.Type)">
      <summary>Recupera o associador de modelo associado.</summary>
      <returns>O associador de modelos associado.</returns>
      <param name="configuration">A configuração.</param>
      <param name="modelType">O tipo do modelo.</param>
    </member>
    <member name="T:System.Web.Http.Results.BadRequestErrorMessageResult">
      <summary>Representa o resultado de uma ação que retorna uma resposta <see cref="F:System.Net.HttpStatusCode.BadRequest" /> e executa negociação de conteúdo em um see <see cref="T:System.Web.Http.HttpError" /> com <see cref="P:System.Web.Http.HttpError.Message" />. </summary>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestErrorMessageResult.#ctor(System.String,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.BadRequestErrorMessageResult" />.</summary>
      <param name="message">A mensagem de erro visível pelo usuário.</param>
      <param name="contentNegotiator">O negociador de conteúdo para lidar com a negociação de conteúdo.</param>
      <param name="request">A mensagem de solicitação que levou a esse resultado.</param>
      <param name="formatters">Os formatadores a serem usados para negociar e formatar o conteúdo.</param>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestErrorMessageResult.#ctor(System.String,System.Web.Http.ApiController)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.BadRequestErrorMessageResult" />. </summary>
      <param name="message">A mensagem de erro visível pelo usuário.</param>
      <param name="controller">O controlador do qual obter as dependências necessárias para execução.</param>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestErrorMessageResult.ContentNegotiator">
      <summary>Obtém o negociador de conteúdo para lidar com a negociação de conteúdo.</summary>
      <returns>Retorna <see cref="T:System.Net.Http.Formatting.IContentNegotiator" />.</returns>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestErrorMessageResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestErrorMessageResult.Formatters">
      <summary>Obtém os formatadores a serem usados para negociar e formatar o conteúdo.</summary>
      <returns>Retorna <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestErrorMessageResult.Message">
      <summary>Obtém a mensagem de erro visível pelo usuário.</summary>
      <returns>Retorna <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestErrorMessageResult.Request">
      <summary>Obtém a mensagem de solicitação que levou a esse resultado.</summary>
      <returns>Retorna <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="T:System.Web.Http.Results.BadRequestResult">
      <summary>Representa o resultado de uma ação que retorna uma resposta <see cref="F:System.Net.HttpStatusCode.BadRequest" /> vazia.</summary>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.BadRequestResult" />.</summary>
      <param name="request">A mensagem de solicitação que levou a esse resultado.</param>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestResult.#ctor(System.Web.Http.ApiController)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.BadRequestResult" />.</summary>
      <param name="controller">O controlador do qual obter as dependências necessárias para execução.</param>
    </member>
    <member name="M:System.Web.Http.Results.BadRequestResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Executa a solicitação de forma assíncrona.</summary>
      <returns>A tarefa que conclui a operação de execução.</returns>
      <param name="cancellationToken">O token de cancelamento.</param>
    </member>
    <member name="P:System.Web.Http.Results.BadRequestResult.Request">
      <summary>Obtém a mensagem de solicitação que levou a esse resultado.</summary>
      <returns>A mensagem de solicitação que levou a esse resultado.</returns>
    </member>
    <member name="T:System.Web.Http.Results.ConflictResult">
      <summary>Representa o resultado de uma ação que retorna uma resposta HttpStatusCode.Conflict vazia.</summary>
    </member>
    <member name="M:System.Web.Http.Results.ConflictResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.ConflictResult" />.</summary>
      <param name="request">A mensagem de solicitação que levou a esse resultado.</param>
    </member>
    <member name="M:System.Web.Http.Results.ConflictResult.#ctor(System.Web.Http.ApiController)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.ConflictResult" />.</summary>
      <param name="controller">O controlador do qual obter as dependências necessárias para execução.</param>
    </member>
    <member name="M:System.Web.Http.Results.ConflictResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Executa de forma assíncrona a operação do resultado do conflito.</summary>
      <returns>Executa a tarefa especificada de forma assíncrona.</returns>
      <param name="cancellationToken">O token de cancelamento.</param>
    </member>
    <member name="P:System.Web.Http.Results.ConflictResult.Request">
      <summary>Obtém a mensagem de solicitação que levou a esse resultado.</summary>
      <returns>A mensagem de solicitação HTTP que levou a esse resultado.</returns>
    </member>
    <member name="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1">
      <summary>Representa o resultado de uma ação que executa geração de rota e negociação de conteúdo, e retorna uma resposta <see cref="F:System.Net.HttpStatusCode.Created" /> quando a negociação de conteúdo é bem-sucedida.</summary>
      <typeparam name="T">O tipo de conteúdo no corpo da entidade.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},`0,System.Web.Http.ApiController)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> com os valores fornecidos.</summary>
      <param name="routeName">O nome da rota a ser usado para gerar a URL.</param>
      <param name="routeValues">Os dados da rota a serem usados para gerar a URL.</param>
      <param name="content">O valor de conteúdo a ser negociado e formatado no corpo da entidade.</param>
      <param name="controller">O controlador do qual obter as dependências necessárias para execução.</param>
    </member>
    <member name="M:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},`0,System.Web.Http.Routing.UrlHelper,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" /> com os valores fornecidos.</summary>
      <param name="routeName">O nome da rota a ser usado para gerar a URL.</param>
      <param name="routeValues">Os dados da rota a serem usados para gerar a URL.</param>
      <param name="content">O valor de conteúdo a ser negociado e formatado no corpo da entidade.</param>
      <param name="urlFactory">O alocador a ser usado para gerar a URL da rota.</param>
      <param name="contentNegotiator">O negociador de conteúdo para lidar com a negociação de conteúdo.</param>
      <param name="request">A mensagem de solicitação que levou a esse resultado.</param>
      <param name="formatters">Os formatadores a serem usados para negociar e formatar o conteúdo.</param>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.Content">
      <summary>Obtém o valor de conteúdo a ser negociado e formatado no corpo da entidade.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.ContentNegotiator">
      <summary>Obtém o negociador de conteúdo para lidar com a negociação de conteúdo.</summary>
    </member>
    <member name="M:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.Formatters">
      <summary>Obtém os formatadores a serem usados para negociar e formatar o conteúdo.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.Request">
      <summary>Obtém a mensagem de solicitação que levou a esse resultado.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.RouteName">
      <summary>Obtém o nome da rota a ser usado para gerar a URL.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.RouteValues">
      <summary>Obtém os dados da rota a serem usados para gerar a URL.</summary>
    </member>
    <member name="P:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1.UrlFactory">
      <summary>Obtém o alocador a ser usado para gerar a URL da rota.</summary>
    </member>
    <member name="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1">
      <summary>Representa o resultado de uma ação que executa negociação de conteúdo e retorna uma resposta <see cref="F:System.Net.HttpStatusCode.Created" /> quando ela é bem-sucedida.</summary>
      <typeparam name="T">O tipo de conteúdo no corpo da entidade.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.CreatedNegotiatedContentResult`1.#ctor(System.Uri,`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> com os valores fornecidos.</summary>
      <param name="location">O valor de conteúdo a ser negociado e formatado no corpo da entidade.</param>
      <param name="content">O local no qual o conteúdo foi criado.</param>
      <param name="contentNegotiator">O negociador de conteúdo para lidar com a negociação de conteúdo.</param>
      <param name="request">A mensagem de solicitação que levou a esse resultado.</param>
      <param name="formatters">Os formatadores a serem usados para negociar e formatar o conteúdo.</param>
    </member>
    <member name="M:System.Web.Http.Results.CreatedNegotiatedContentResult`1.#ctor(System.Uri,`0,System.Web.Http.ApiController)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" /> com os valores fornecidos.</summary>
      <param name="location">O local no qual o conteúdo foi criado.</param>
      <param name="content">O valor de conteúdo a ser negociado e formatado no corpo da entidade.</param>
      <param name="controller">O controlador do qual obter as dependências necessárias para execução.</param>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.Content">
      <summary>Obtém o valor de conteúdo a ser negociado e formatado no corpo da entidade.</summary>
      <returns>O valor de conteúdo a ser negociado e formatado no corpo da entidade.</returns>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.ContentNegotiator">
      <summary>Obtém o negociador de conteúdo para lidar com a negociação de conteúdo.</summary>
      <returns>O negociador de conteúdo para lidar com a negociação de conteúdo.</returns>
    </member>
    <member name="M:System.Web.Http.Results.CreatedNegotiatedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Executa de forma assíncrona a operação do resultado do conteúdo negociado criado.</summary>
      <returns>Executa de forma assíncrona um valor de retorno.</returns>
      <param name="cancellationToken">O token de cancelamento.</param>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.Formatters">
      <summary>Obtém os formatadores a serem usados para negociar e formatar o conteúdo.</summary>
      <returns>Os formatadores a serem usados para negociar e formatar o conteúdo.</returns>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.Location">
      <summary>Obtém o local no qual o conteúdo foi criado.</summary>
      <returns>O local no qual o conteúdo foi criado.</returns>
    </member>
    <member name="P:System.Web.Http.Results.CreatedNegotiatedContentResult`1.Request">
      <summary>Obtém a mensagem de solicitação que levou a esse resultado.</summary>
      <returns>A mensagem de solicitação HTTP que levou a esse resultado.</returns>
    </member>
    <member name="T:System.Web.Http.Results.ExceptionResult">
      <summary>Representa o resultado de uma ação que retorna uma resposta <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> e executa negociação de conteúdo em um <see cref="T:System.Web.Http.HttpError" /> com base em um <see cref="P:System.Web.Http.Results.ExceptionResult.Exception" />. </summary>
    </member>
    <member name="M:System.Web.Http.Results.ExceptionResult.#ctor(System.Exception,System.Boolean,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.ExceptionResult" />.</summary>
      <param name="exception">A exceção a ser incluída no erro.</param>
      <param name="includeErrorDetail">verdadeiro se o erro deve incluir mensagens de exceção; caso contrário, falso. </param>
      <param name="contentNegotiator">O negociador de conteúdo para lidar com a negociação de conteúdo.</param>
      <param name="request">A mensagem de solicitação que levou a esse resultado.</param>
      <param name="formatters">Os formatadores a serem usados para negociar e formatar o conteúdo.</param>
    </member>
    <member name="M:System.Web.Http.Results.ExceptionResult.#ctor(System.Exception,System.Web.Http.ApiController)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.ExceptionResult" />. </summary>
      <param name="exception">A exceção a ser incluída no erro.</param>
      <param name="controller">O controlador do qual obter as dependências necessárias para execução.</param>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.ContentNegotiator">
      <summary>Obtém o negociador de conteúdo para lidar com a negociação de conteúdo.</summary>
      <returns>Retorna <see cref="T:System.Net.Http.Formatting.IContentNegotiator" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.Exception">
      <summary>Obtém a exceção a ser incluída no erro.</summary>
      <returns>Retorna <see cref="T:System.Exception" />.</returns>
    </member>
    <member name="M:System.Web.Http.Results.ExceptionResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.Formatters">
      <summary>Obtém os formatadores a serem usados para negociar e formatar o conteúdo.</summary>
      <returns>Retorna <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.IncludeErrorDetail">
      <summary>Obtém um valor que indica se o erro deve incluir mensagens de exceção.</summary>
      <returns>Retorna <see cref="T:System.Boolean" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.ExceptionResult.Request">
      <summary>Obtém a mensagem de solicitação que levou a esse resultado.</summary>
      <returns>Retorna <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="T:System.Web.Http.Results.FormattedContentResult`1">
      <summary>Representa o resultado de uma ação que retorna conteúdo formatado.</summary>
      <typeparam name="T">O tipo de conteúdo no corpo da entidade.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.FormattedContentResult`1.#ctor(System.Net.HttpStatusCode,`0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Net.Http.HttpRequestMessage)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Results.FormattedContentResult`1" /> com os valores fornecidos.</summary>
      <param name="statusCode">O código de status HTTP para a mensagem de resposta.</param>
      <param name="content">O valor de conteúdo a formatar no corpo da entidade.</param>
      <param name="formatter">O formatador a utilizar para formatar o conteúdo.</param>
      <param name="mediaType">O valor do cabeçalho Content-Type ou <see cref="null" /> para que o formatador selecione um valor padrão.</param>
      <param name="request">A mensagem de solicitação que levou a esse resultado.</param>
    </member>
    <member name="M:System.Web.Http.Results.FormattedContentResult`1.#ctor(System.Net.HttpStatusCode,`0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,System.Web.Http.ApiController)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Results.FormattedContentResult`1" /> com os valores fornecidos.</summary>
      <param name="statusCode">O código de status HTTP para a mensagem de resposta.</param>
      <param name="content">O valor de conteúdo a formatar no corpo da entidade.</param>
      <param name="formatter">O formatador a utilizar para formatar o conteúdo.</param>
      <param name="mediaType">O valor do cabeçalho Content-Type ou <see cref="null" /> para que o formatador selecione um valor padrão.</param>
      <param name="controller">O controlador do qual obter as dependências necessárias para execução.</param>
    </member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.Content">
      <summary>Obtém o valor de conteúdo a formatar no corpo da entidade.</summary>
    </member>
    <member name="M:System.Web.Http.Results.FormattedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.Formatter">
      <summary>Obtém o formatador a ser usado para formatar o conteúdo.</summary>
    </member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.MediaType">
      <summary>Obtém o valor do cabeçalho Content-Type ou <see cref="null" /> para que o formatador selecione um valor padrão.</summary>
    </member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.Request">
      <summary>Obtém a mensagem de solicitação que levou a esse resultado.</summary>
    </member>
    <member name="P:System.Web.Http.Results.FormattedContentResult`1.StatusCode">
      <summary>Obtém o código de status HTTP para a mensagem de resposta.</summary>
    </member>
    <member name="T:System.Web.Http.Results.InternalServerErrorResult">
      <summary>Representa o resultado de uma ação que retorna uma resposta <see cref="F:System.Net.HttpStatusCode.InternalServerError" /> vazia.</summary>
    </member>
    <member name="M:System.Web.Http.Results.InternalServerErrorResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.InternalServerErrorResult" />. </summary>
      <param name="request">A mensagem de solicitação que levou a esse resultado.</param>
    </member>
    <member name="M:System.Web.Http.Results.InternalServerErrorResult.#ctor(System.Web.Http.ApiController)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.InternalServerErrorResult" />. </summary>
      <param name="controller">O controlador do qual obter as dependências necessárias para execução.</param>
    </member>
    <member name="M:System.Web.Http.Results.InternalServerErrorResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.InternalServerErrorResult.Request">
      <summary>Obtém a mensagem de solicitação que levou a esse resultado.</summary>
      <returns>Retorna <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="T:System.Web.Http.Results.InvalidModelStateResult">
      <summary>Representa o resultado de uma ação que retorna uma resposta <see cref="F:System.Net.HttpStatusCode.BadRequest" /> e executa negociação de conteúdo em um <see cref="T:System.Web.Http.HttpError" /> com base em um <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Http.Results.InvalidModelStateResult.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.Boolean,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.InvalidModelStateResult" />.</summary>
      <param name="modelState">O estado do modelo a ser incluído no erro.</param>
      <param name="includeErrorDetail">verdadeiro se o erro deve incluir mensagens de exceção; caso contrário, falso.</param>
      <param name="contentNegotiator">O negociador de conteúdo para lidar com a negociação de conteúdo.</param>
      <param name="request">A mensagem de solicitação que levou a esse resultado.</param>
      <param name="formatters">Os formatadores a serem usados para negociar e formatar o conteúdo.</param>
    </member>
    <member name="M:System.Web.Http.Results.InvalidModelStateResult.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.Web.Http.ApiController)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.InvalidModelStateResult" />.</summary>
      <param name="modelState">O estado do modelo a ser incluído no erro.</param>
      <param name="controller">O controlador do qual obter as dependências necessárias para execução.</param>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.ContentNegotiator">
      <summary>Obtém o negociador de conteúdo para lidar com a negociação de conteúdo.</summary>
      <returns>O negociador de conteúdo para lidar com a negociação de conteúdo.</returns>
    </member>
    <member name="M:System.Web.Http.Results.InvalidModelStateResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Cria uma mensagem de resposta de forma assíncrona.</summary>
      <returns>Uma tarefa que, quando concluída, contém a mensagem de resposta.</returns>
      <param name="cancellationToken">O token para monitorar quanto às solicitações de cancelamento.</param>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.Formatters">
      <summary>Obtém os formatadores a serem usados para negociar e formatar o conteúdo.</summary>
      <returns>Os formatadores a serem usados para negociar e formatar o conteúdo.</returns>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.IncludeErrorDetail">
      <summary>Obtém um valor que indica se o erro deve incluir mensagens de exceção.</summary>
      <returns>verdadeiro se o erro deve incluir mensagens de exceção; caso contrário, falso.</returns>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.ModelState">
      <summary>Obtém o estado do modelo a ser incluído no erro.</summary>
      <returns>O estado do modelo a ser incluído no erro.</returns>
    </member>
    <member name="P:System.Web.Http.Results.InvalidModelStateResult.Request">
      <summary>Obtém a mensagem de solicitação que levou a esse resultado.</summary>
      <returns>A mensagem de solicitação que levou a esse resultado.</returns>
    </member>
    <member name="T:System.Web.Http.Results.JsonResult`1">
      <summary>Representa o resultado de uma ação que retorna uma resposta <see cref="F:System.Net.HttpStatusCode.OK" /> com dados JSON.</summary>
      <typeparam name="T">O tipo de conteúdo no corpo da entidade.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.JsonResult`1.#ctor(`0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding,System.Net.Http.HttpRequestMessage)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Results.JsonResult`1" /> com os valores fornecidos.</summary>
      <param name="content">O valor de conteúdo a serializar no corpo da entidade.</param>
      <param name="serializerSettings">As configurações do serializador.</param>
      <param name="encoding">A codificação do conteúdo.</param>
      <param name="request">A mensagem de solicitação que levou a esse resultado.</param>
    </member>
    <member name="M:System.Web.Http.Results.JsonResult`1.#ctor(`0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding,System.Web.Http.ApiController)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Results.JsonResult`1" /> com os valores fornecidos.</summary>
      <param name="content">O valor de conteúdo a serializar no corpo da entidade.</param>
      <param name="serializerSettings">As configurações do serializador.</param>
      <param name="encoding">A codificação do conteúdo.</param>
      <param name="controller">O controlador do qual obter as dependências necessárias para execução.</param>
    </member>
    <member name="P:System.Web.Http.Results.JsonResult`1.Content">
      <summary>Obtém o valor de conteúdo a serializar no corpo da entidade.</summary>
      <returns>O valor de conteúdo a serializar no corpo da entidade.</returns>
    </member>
    <member name="P:System.Web.Http.Results.JsonResult`1.Encoding">
      <summary>Obtém a codificação do conteúdo.</summary>
      <returns>A codificação do conteúdo.</returns>
    </member>
    <member name="M:System.Web.Http.Results.JsonResult`1.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Cria uma mensagem de resposta de forma assíncrona.</summary>
      <returns>Uma tarefa que, quando concluída, contém a mensagem de resposta.</returns>
      <param name="cancellationToken">O token para monitorar quanto às solicitações de cancelamento.</param>
    </member>
    <member name="P:System.Web.Http.Results.JsonResult`1.Request">
      <summary>Obtém a mensagem de solicitação que levou a esse resultado.</summary>
      <returns>A mensagem de solicitação que levou a esse resultado.</returns>
    </member>
    <member name="P:System.Web.Http.Results.JsonResult`1.SerializerSettings">
      <summary>Obtém as configurações do serializador.</summary>
      <returns>As configurações do serializador.</returns>
    </member>
    <member name="T:System.Web.Http.Results.NegotiatedContentResult`1">
      <summary>Representa o resultado de uma ação que executa negociação de conteúdo.</summary>
      <typeparam name="T">O tipo de conteúdo no corpo da entidade.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.NegotiatedContentResult`1.#ctor(System.Net.HttpStatusCode,`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Results.NegotiatedContentResult`1" /> com os valores fornecidos.</summary>
      <param name="statusCode">O código de status HTTP para a mensagem de resposta.</param>
      <param name="content">O valor de conteúdo a ser negociado e formatado no corpo da entidade.</param>
      <param name="contentNegotiator">O negociador de conteúdo para lidar com a negociação de conteúdo.</param>
      <param name="request">A mensagem de solicitação que levou a esse resultado.</param>
      <param name="formatters">Os formatadores a serem usados para negociar e formatar o conteúdo.</param>
    </member>
    <member name="M:System.Web.Http.Results.NegotiatedContentResult`1.#ctor(System.Net.HttpStatusCode,`0,System.Web.Http.ApiController)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Results.NegotiatedContentResult`1" /> com os valores fornecidos.</summary>
      <param name="statusCode">O código de status HTTP para a mensagem de resposta.</param>
      <param name="content">O valor de conteúdo a ser negociado e formatado no corpo da entidade.</param>
      <param name="controller">O controlador do qual obter as dependências necessárias para execução.</param>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.Content">
      <summary>Obtém o valor de conteúdo a ser negociado e formatado no corpo da entidade.</summary>
      <returns>O valor de conteúdo a ser negociado e formatado no corpo da entidade.</returns>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.ContentNegotiator">
      <summary>Obtém o negociador de conteúdo para lidar com a negociação de conteúdo.</summary>
      <returns>O negociador de conteúdo para lidar com a negociação de conteúdo.</returns>
    </member>
    <member name="M:System.Web.Http.Results.NegotiatedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Executa de forma assíncrona resultados de conteúdo negociado HTTP.</summary>
      <returns>Executa de forma assíncrona resultados de conteúdo negociado HTTP.</returns>
      <param name="cancellationToken">O token de cancelamento.</param>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.Formatters">
      <summary>Obtém os formatadores a serem usados para negociar e formatar o conteúdo.</summary>
      <returns>Os formatadores a serem usados para negociar e formatar o conteúdo.</returns>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.Request">
      <summary>Obtém a mensagem de solicitação que levou a esse resultado.</summary>
      <returns>A mensagem de solicitação HTTP que levou a esse resultado.</returns>
    </member>
    <member name="P:System.Web.Http.Results.NegotiatedContentResult`1.StatusCode">
      <summary>Obtém o código de status HTTP para a mensagem de resposta.</summary>
      <returns>O código de status HTTP para a mensagem de resposta.</returns>
    </member>
    <member name="T:System.Web.Http.Results.NotFoundResult">
      <summary>Representa o resultado de uma ação que retorna uma resposta <see cref="F:System.Net.HttpStatusCode.NotFound" /> vazia.</summary>
    </member>
    <member name="M:System.Web.Http.Results.NotFoundResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.NotFoundResult" />.</summary>
      <param name="request">A mensagem de solicitação que levou a esse resultado.</param>
    </member>
    <member name="M:System.Web.Http.Results.NotFoundResult.#ctor(System.Web.Http.ApiController)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.NotFoundResult" />.</summary>
      <param name="controller">O controlador do qual obter as dependências necessárias para execução.</param>
    </member>
    <member name="M:System.Web.Http.Results.NotFoundResult.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.NotFoundResult.Request">
      <summary>Obtém a mensagem de solicitação que levou a esse resultado.</summary>
    </member>
    <member name="T:System.Web.Http.Results.OkNegotiatedContentResult`1">
      <summary>Representa o resultado de uma ação que executa negociação de conteúdo e retorna uma resposta HttpStatusCode.OK quando ela é bem-sucedida.</summary>
      <typeparam name="T">O tipo de conteúdo no corpo da entidade.</typeparam>
    </member>
    <member name="M:System.Web.Http.Results.OkNegotiatedContentResult`1.#ctor(`0,System.Net.Http.Formatting.IContentNegotiator,System.Net.Http.HttpRequestMessage,System.Collections.Generic.IEnumerable{System.Net.Http.Formatting.MediaTypeFormatter})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> com os valores fornecidos.</summary>
      <param name="content">O valor de conteúdo a ser negociado e formatado no corpo da entidade.</param>
      <param name="contentNegotiator">O negociador de conteúdo para lidar com a negociação de conteúdo.</param>
      <param name="request">A mensagem de solicitação que levou a esse resultado.</param>
      <param name="formatters">Os formatadores a serem usados para negociar e formatar o conteúdo.</param>
    </member>
    <member name="M:System.Web.Http.Results.OkNegotiatedContentResult`1.#ctor(`0,System.Web.Http.ApiController)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Results.OkNegotiatedContentResult`1" /> com os valores fornecidos.</summary>
      <param name="content">O valor de conteúdo a ser negociado e formatado no corpo da entidade.</param>
      <param name="controller">O controlador do qual obter as dependências necessárias para execução.</param>
    </member>
    <member name="P:System.Web.Http.Results.OkNegotiatedContentResult`1.Content">
      <summary>Obtém o valor de conteúdo a ser negociado e formatado no corpo da entidade.</summary>
    </member>
    <member name="P:System.Web.Http.Results.OkNegotiatedContentResult`1.ContentNegotiator">
      <summary>Obtém o negociador de conteúdo para lidar com a negociação de conteúdo.</summary>
    </member>
    <member name="M:System.Web.Http.Results.OkNegotiatedContentResult`1.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.OkNegotiatedContentResult`1.Formatters">
      <summary>Obtém os formatadores a serem usados para negociar e formatar o conteúdo.</summary>
    </member>
    <member name="P:System.Web.Http.Results.OkNegotiatedContentResult`1.Request">
      <summary>Obtém a mensagem de solicitação que levou a esse resultado.</summary>
    </member>
    <member name="T:System.Web.Http.Results.OkResult">
      <summary>Representa o resultado de uma ação que retorna uma resposta HttpStatusCode.OK vazia.</summary>
    </member>
    <member name="M:System.Web.Http.Results.OkResult.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.NotFoundResult" />.</summary>
      <param name="request">A mensagem de solicitação que levou a esse resultado.</param>
    </member>
    <member name="M:System.Web.Http.Results.OkResult.#ctor(System.Web.Http.ApiController)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.NotFoundResult" />.</summary>
      <param name="controller">O controlador do qual obter as dependências necessárias para execução.</param>
    </member>
    <member name="M:System.Web.Http.Results.OkResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Executa em modo assíncrono.</summary>
      <returns>Retorna a tarefa.</returns>
      <param name="cancellationToken">O token de cancelamento.</param>
    </member>
    <member name="P:System.Web.Http.Results.OkResult.Request">
      <summary>Obtém uma mensagem de solicitação HTTP para os resultados.</summary>
      <returns>Uma mensagem de solicitação HTTP para os resultados.</returns>
    </member>
    <member name="T:System.Web.Http.Results.RedirectResult">
      <summary>Representa um resultado da ação para um &lt;consulte cref="F:System.Net.HttpStatusCode.Redirect"/&gt;.</summary>
    </member>
    <member name="M:System.Web.Http.Results.RedirectResult.#ctor(System.Uri,System.Net.Http.HttpRequestMessage)">
      <summary>Inicializa uma nova instância da classe &lt;consulte cref="T:System.Web.Http.Results.RedirectResult" /&gt; com os valores fornecidos.</summary>
      <param name="location">O local para o qual redirecionar.</param>
      <param name="request">A mensagem de solicitação que levou a esse resultado.</param>
    </member>
    <member name="M:System.Web.Http.Results.RedirectResult.#ctor(System.Uri,System.Web.Http.ApiController)">
      <summary>Inicializa uma nova instância da classe &lt;consulte cref="T:System.Web.Http.Results.RedirectResult" /&gt; com os valores fornecidos.</summary>
      <param name="location">O local para o qual redirecionar.</param>
      <param name="controller">O controlador do qual obter as dependências necessárias para execução.</param>
    </member>
    <member name="M:System.Web.Http.Results.RedirectResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.RedirectResult.Location">
      <summary>Obtém o local no qual o conteúdo foi criado.</summary>
      <returns>Retorna <see cref="T:System.Uri" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.RedirectResult.Request">
      <summary>Obtém a mensagem de solicitação que levou a esse resultado.</summary>
      <returns>Retorna <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="T:System.Web.Http.Results.RedirectToRouteResult">
      <summary>Represente um resultado de ação que executa a geração de rota e retorna uma &lt;consulte cref="F:System.Net.HttpStatusCode.Redirect"/&gt;            resposta.</summary>
    </member>
    <member name="M:System.Web.Http.Results.RedirectToRouteResult.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.ApiController)">
      <summary>Inicializa uma nova instância da classe &lt;consulte cref="T:System.Net.Http.ObjectContent`1" /&gt; com os valores fornecidos.</summary>
      <param name="routeName">O nome da rota a ser usado para gerar a URL.</param>
      <param name="routeValues">Os dados da rota a serem usados para gerar a URL.</param>
      <param name="controller">O controlador do qual obter as dependências necessárias para execução.</param>
    </member>
    <member name="M:System.Web.Http.Results.RedirectToRouteResult.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.UrlHelper,System.Net.Http.HttpRequestMessage)">
      <summary>Inicializa uma nova instância da classe &lt;consulte cref="T:System.Net.Http.ObjectContent`1" /&gt; com os valores fornecidos.</summary>
      <param name="routeName">O nome da rota a ser usado para gerar a URL.</param>
      <param name="routeValues">Os dados da rota a serem usados para gerar a URL.</param>
      <param name="urlFactory">O alocador a ser usado para gerar a URL da rota.</param>
      <param name="request">A mensagem de solicitação que levou a esse resultado.</param>
    </member>
    <member name="M:System.Web.Http.Results.RedirectToRouteResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.RedirectToRouteResult.Request">
      <summary>Obtém a mensagem de solicitação que levou a esse resultado.</summary>
      <returns>Retorna <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.RedirectToRouteResult.RouteName">
      <summary>Obtém o nome da rota a ser usado para gerar a URL.</summary>
      <returns>Retorna <see cref="T:System.String" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.RedirectToRouteResult.RouteValues">
      <summary>Obtém os dados da rota a serem usados para gerar a URL.</summary>
      <returns>Retorna <see cref="T:System.Collections.Generic.IDictionary`2" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.RedirectToRouteResult.UrlFactory">
      <summary>Obtém o alocador a ser usado para gerar a URL da rota.</summary>
      <returns>Retorna <see cref="T:System.Web.Http.Routing.UrlHelper" />.</returns>
    </member>
    <member name="T:System.Web.Http.Results.ResponseMessageResult">
      <summary>Representa o resultado de uma ação que retorna uma mensagem de resposta especificada.</summary>
    </member>
    <member name="M:System.Web.Http.Results.ResponseMessageResult.#ctor(System.Net.Http.HttpResponseMessage)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.ResponseMessageResult" />.</summary>
      <param name="response">A mensagem de resposta.</param>
    </member>
    <member name="M:System.Web.Http.Results.ResponseMessageResult.ExecuteAsync(System.Threading.CancellationToken)"></member>
    <member name="P:System.Web.Http.Results.ResponseMessageResult.Response">
      <summary>Obtém a mensagem de resposta.</summary>
    </member>
    <member name="T:System.Web.Http.Results.StatusCodeResult">
      <summary>Representa o resultado de uma ação que retorna um código de status HTTP especificado.</summary>
    </member>
    <member name="M:System.Web.Http.Results.StatusCodeResult.#ctor(System.Net.HttpStatusCode,System.Net.Http.HttpRequestMessage)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.StatusCodeResult" />.</summary>
      <param name="statusCode">O código de status HTTP para a mensagem de resposta.</param>
      <param name="request">A mensagem de solicitação que levou a esse resultado.</param>
    </member>
    <member name="M:System.Web.Http.Results.StatusCodeResult.#ctor(System.Net.HttpStatusCode,System.Web.Http.ApiController)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.StatusCodeResult" />.</summary>
      <param name="statusCode">O código de status HTTP para a mensagem de resposta.</param>
      <param name="controller">O controlador do qual obter as dependências necessárias para execução.</param>
    </member>
    <member name="M:System.Web.Http.Results.StatusCodeResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>Cria uma mensagem de resposta de forma assíncrona.</summary>
      <returns>Uma tarefa que, quando concluída, contém a mensagem de resposta.</returns>
      <param name="cancellationToken">O token para monitorar quanto às solicitações de cancelamento.</param>
    </member>
    <member name="P:System.Web.Http.Results.StatusCodeResult.Request">
      <summary>Obtém a mensagem de solicitação que levou a esse resultado.</summary>
      <returns>A mensagem de solicitação que levou a esse resultado.</returns>
    </member>
    <member name="P:System.Web.Http.Results.StatusCodeResult.StatusCode">
      <summary>Obtém o código de status HTTP para a mensagem de resposta.</summary>
      <returns>O código de status HTTP para a mensagem de resposta.</returns>
    </member>
    <member name="T:System.Web.Http.Results.UnauthorizedResult">
      <summary>Representa o resultado de uma ação que retorna uma resposta <see cref="F:System.Net.HttpStatusCode.Unauthorized" />. </summary>
    </member>
    <member name="M:System.Web.Http.Results.UnauthorizedResult.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue},System.Net.Http.HttpRequestMessage)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.StatusCodeResult" />. </summary>
      <param name="challenges">Os desafios de WWW-Authenticate.</param>
      <param name="request">A mensagem de solicitação que levou a esse resultado.</param>
    </member>
    <member name="M:System.Web.Http.Results.UnauthorizedResult.#ctor(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue},System.Web.Http.ApiController)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Results.StatusCodeResult" />. </summary>
      <param name="challenges">Os desafios de WWW-Authenticate.</param>
      <param name="controller">O controlador do qual obter as dependências necessárias para execução.</param>
    </member>
    <member name="P:System.Web.Http.Results.UnauthorizedResult.Challenges">
      <summary>Obtém os desafios de WWW-Authenticate.</summary>
      <returns>Retorna <see cref="T:System.Collections.Generic.IEnumerable`1" />.</returns>
    </member>
    <member name="M:System.Web.Http.Results.UnauthorizedResult.ExecuteAsync(System.Threading.CancellationToken)">
      <returns>Retorna <see cref="T:System.Threading.Tasks.Task`1" />.</returns>
    </member>
    <member name="P:System.Web.Http.Results.UnauthorizedResult.Request">
      <summary>Obtém a mensagem de solicitação que levou a esse resultado.</summary>
      <returns>Retorna <see cref="T:System.Net.Http.HttpRequestMessage" />.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.DefaultDirectRouteProvider">
      <summary>Uma implementação padrão de <see cref="T:System.Web.Http.Routing.IDirectRouteProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.#ctor"></member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.GetActionDirectRoutes(System.Web.Http.Controllers.HttpActionDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Http.Routing.IDirectRouteFactory},System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary>Cria instâncias de <see cref="T:System.Web.Http.Routing.RouteEntry" /> com base nos alocadores e ação fornecidos.As entradas de rota fornecem roteamento direto à ação fornecida.</summary>
      <returns>Um conjunto de entradas de rota.</returns>
      <param name="actionDescriptor">O descritor da ação.</param>
      <param name="factories">Os alocadores de rota direta.</param>
      <param name="constraintResolver">O resolvedor de restrição.</param>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.GetActionRouteFactories(System.Web.Http.Controllers.HttpActionDescriptor)">
      <summary>Obtém um conjunto de alocadores de rota para o descritor de ação fornecido.</summary>
      <returns>Um conjunto de alocadores de rota.</returns>
      <param name="actionDescriptor">O descritor da ação.</param>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.GetControllerDirectRoutes(System.Web.Http.Controllers.HttpControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Http.Controllers.HttpActionDescriptor},System.Collections.Generic.IReadOnlyList{System.Web.Http.Routing.IDirectRouteFactory},System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary>Cria instâncias de <see cref="T:System.Web.Http.Routing.RouteEntry" /> com base nos alocadores, controlador e ações fornecidos.As entradas de rota forneceram roteamento direto ao controlador fornecido e podem atingir o conjunto de ações fornecidas.</summary>
      <returns>Um conjunto de entradas de rota.</returns>
      <param name="controllerDescriptor">O descritor do controlador.</param>
      <param name="actionDescriptors">Os descritores da ação.</param>
      <param name="factories">Os alocadores de rota direta.</param>
      <param name="constraintResolver">O resolvedor de restrição.</param>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.GetControllerRouteFactories(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Obtém alocadores de rota para o descritor do controlador.</summary>
      <returns>Um conjunto de alocadores de rota.</returns>
      <param name="controllerDescriptor">O descritor do controlador.</param>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.GetDirectRoutes(System.Web.Http.Controllers.HttpControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Http.Controllers.HttpActionDescriptor},System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary>Obtém rotas diretas para o descritor do controlador fornecido e descritores de ação com base em atributos do <see cref="T:System.Web.Http.Routing.IDirectRouteFactory" />.</summary>
      <returns>Um conjunto de entradas de rota.</returns>
      <param name="controllerDescriptor">O descritor do controlador.</param>
      <param name="actionDescriptors">Os descritores de ação para todas as ações.</param>
      <param name="constraintResolver">O resolvedor de restrição.</param>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultDirectRouteProvider.GetRoutePrefix(System.Web.Http.Controllers.HttpControllerDescriptor)">
      <summary>Obtém o prefixo da rota do controlador fornecido.</summary>
      <returns>O prefixo da rota ou nulo.</returns>
      <param name="controllerDescriptor">O descritor do controlador.</param>
    </member>
    <member name="T:System.Web.Http.Routing.DefaultInlineConstraintResolver">
      <summary>A implementação padrão de <see cref="T:System.Web.Http.Routing.IInlineConstraintResolver" />.Resolve restrições analisando uma chave de restrição e argumentos de restrição, usando um mapa para resolver o tipo de restrição e chamando um construtor apropriado para o tipo de restrição.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultInlineConstraintResolver.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.DefaultInlineConstraintResolver" />.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.DefaultInlineConstraintResolver.ConstraintMap">
      <summary> Obtém o dicionário mutável que mapeia chaves de restrição para um determinado tipo de restrição. </summary>
      <returns>O dicionário mutável que mapeia chaves de restrição para um determinado tipo de restrição.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.DefaultInlineConstraintResolver.ResolveConstraint(System.String)">
      <summary>Resolve a restrição embutida.</summary>
      <returns>O <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" /> para o qual a restrição embutida foi resolvida.</returns>
      <param name="inlineConstraint">A restrição embutida a ser resolvida.</param>
    </member>
    <member name="T:System.Web.Http.Routing.DirectRouteFactoryContext">
      <summary>Representa um contexto que suporta a criação de uma rota direta.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.DirectRouteFactoryContext.#ctor(System.String,System.Collections.Generic.IReadOnlyCollection{System.Web.Http.Controllers.HttpActionDescriptor},System.Web.Http.Routing.IInlineConstraintResolver,System.Boolean)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.DirectRouteFactoryContext" />.</summary>
      <param name="prefix">O prefixo da rota, se existir, definido pelo controlador.</param>
      <param name="actions">Os descritores de ação para os quais criar uma rota.</param>
      <param name="inlineConstraintResolver">O resolvedor de restrições embutidas.</param>
      <param name="targetIsAction">Um valor indicando se a rota está configurada ao nível de ação ou de controlador.</param>
    </member>
    <member name="P:System.Web.Http.Routing.DirectRouteFactoryContext.Actions">
      <summary>Obtém os descritores de ação para os quais criar uma rota.</summary>
      <returns>Os descritores de ação para os quais criar uma rota.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.DirectRouteFactoryContext.CreateBuilder(System.String)">
      <summary>Cria um construtor de rotas que pode construir uma rota com contexto coincidente a este.</summary>
      <returns>Um construtor de rotas que pode construir uma rota com contexto coincidente a este.</returns>
      <param name="template">O modelo de rota.</param>
    </member>
    <member name="M:System.Web.Http.Routing.DirectRouteFactoryContext.CreateBuilder(System.String,System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary>Cria um construtor de rotas que pode construir uma rota com contexto coincidente a este.</summary>
      <returns>Um construtor de rotas que pode construir uma rota com contexto coincidente a este.</returns>
      <param name="template">O modelo de rota.</param>
      <param name="constraintResolver">O resolvedor de restrições embutidas a utilizar, se existir; caso contrário, nulo.</param>
    </member>
    <member name="P:System.Web.Http.Routing.DirectRouteFactoryContext.InlineConstraintResolver">
      <summary>Obtém o resolvedor de restrições embutidas.</summary>
      <returns>O resolvedor de restrições embutidas.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.DirectRouteFactoryContext.Prefix">
      <summary>Obtém o prefixo da rota, se existir, definido pelo controlador.</summary>
      <returns>O prefixo da rota, se existir, definido pelo controlador.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.DirectRouteFactoryContext.TargetIsAction">
      <summary>Obtém um valor indicando se a rota está configurada ao nível de ação ou de controlador.</summary>
      <returns>verdadeiro quando a rota estiver configurada ao nível de ação; caso contrário falso (se a rota estiver configurada ao nível de controlador).</returns>
    </member>
    <member name="T:System.Web.Http.Routing.HttpMethodConstraint">
      <summary>Permite que você defina quais verbos HTTP são permitidos quando o roteamento do ASP.NET determina se uma URL corresponde a uma rota.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpMethodConstraint.#ctor(System.Net.Http.HttpMethod[])">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Routing.HttpMethodConstraint" /> ao usar os verbos HTTP que são permitidos para a rota.</summary>
      <param name="allowedMethods">Os verbos HTTP que são válidos para a rota.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpMethodConstraint.AllowedMethods">
      <summary>Obtém ou define o conjunto de verbos HTTP permitidos para a rota.</summary>
      <returns>Um conjunto de verbos HTTP permitidos para a rota.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.HttpMethodConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se a solicitação foi feita com um verbo HTTP pertencente aos verbos permitidos para a rota.</summary>
      <returns>Quando o roteamento ASP.NET está processando uma solicitação, verdadeiro se a solicitação foi feita usando-se um verbo HTTP permitido; caso contrário, falso. Quando o roteamento ASP.NET está construindo uma URL, verdadeiro se os valores fornecidos contiverem um verbo HTTP pertencente a um dos verbos HTTP permitidos; caso contrário, falso. O padrão é verdadeiro.</returns>
      <param name="request">A solicitação que está sendo verificada para determinar se ela corresponde à URL.</param>
      <param name="route">O objeto que está sendo verificado para determinar se ele corresponde à URL.</param>
      <param name="parameterName">O nome do parâmetro que está sendo verificado.</param>
      <param name="values">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="routeDirection">Um objeto que indica se a verificação de restrição está sendo executada quando uma solicitação de entrada é processada ou quando uma URL é gerada.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpMethodConstraint.System#Web#Http#Routing#IHttpRouteConstraint#Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se a solicitação foi feita com um verbo HTTP pertencente aos verbos permitidos para a rota.</summary>
      <returns>Quando o roteamento ASP.NET está processando uma solicitação, verdadeiro se a solicitação foi feita usando-se um verbo HTTP permitido; caso contrário, falso. Quando o roteamento ASP.NET está construindo uma URL, verdadeiro se os valores fornecidos contiverem um verbo HTTP pertencente a um dos verbos HTTP permitidos; caso contrário, falso. O padrão é verdadeiro.</returns>
      <param name="request">A solicitação que está sendo verificada para determinar se ela corresponde à URL.</param>
      <param name="route">O objeto que está sendo verificado para determinar se ele corresponde à URL.</param>
      <param name="parameterName">O nome do parâmetro que está sendo verificado.</param>
      <param name="values">Um objeto que contém os parâmetros para uma rota.</param>
      <param name="routeDirection">Um objeto que indica se a verificação de restrição está sendo executada quando uma solicitação de entrada é processada ou quando uma URL é gerada.</param>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRoute">
      <summary>Representa uma classe de rota para auto-host (ou seja,hospedada fora do ASP.NET).</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">O modelo de rota.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">O modelo de rota.</param>
      <param name="defaults">Os valores padrão para os parâmetros de rota.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">O modelo de rota.</param>
      <param name="defaults">Os valores padrão para os parâmetros de rota.</param>
      <param name="constraints">As restrições para os parâmetros de rota.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">O modelo de rota.</param>
      <param name="defaults">Os valores padrão para os parâmetros de rota.</param>
      <param name="constraints">As restrições para os parâmetros de rota.</param>
      <param name="dataTokens">Quaisquer tokens adicionais para os parâmetros de rota.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.#ctor(System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteValueDictionary,System.Net.Http.HttpMessageHandler)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.HttpRoute" />.</summary>
      <param name="routeTemplate">O modelo de rota.</param>
      <param name="defaults">Os valores padrão para os parâmetros de rota.</param>
      <param name="constraints">As restrições para os parâmetros de rota.</param>
      <param name="dataTokens">Quaisquer tokens adicionais para os parâmetros de rota.</param>
      <param name="handler">O manipulador de mensagens que será o destinatário da solicitação.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.Constraints">
      <summary>Obtém as restrições dos parâmetros de rota.</summary>
      <returns>As restrições para os parâmetros de rota.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.DataTokens">
      <summary>Obtém quaisquer tokens de dados adicionais não utilizados diretamente para determinar se uma rota corresponde a uma <see cref="T:System.Net.Http.HttpRequestMessage" /> de entrada.</summary>
      <returns>Quaisquer tokens de dados adicionais não utilizados diretamente para determinar se uma rota corresponde a uma <see cref="T:System.Net.Http.HttpRequestMessage" /> de entrada.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.Defaults">
      <summary>Obtém os valores padrão para os parâmetros de rota se não forem fornecidos pela <see cref="T:System.Net.Http.HttpRequestMessage" /> de entrada.</summary>
      <returns>Os valores padrão para os parâmetros de rota se não forem fornecidos pela <see cref="T:System.Net.Http.HttpRequestMessage" /> de entrada.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.GetRouteData(System.String,System.Net.Http.HttpRequestMessage)">
      <summary>Determina se esta rota corresponde à solicitação de entrada consultando os <see cref="T:System.Web.Http.Routing.HttpRouteData" /> da rota.</summary>
      <returns>Os <see cref="T:System.Web.Http.Routing.HttpRouteData" /> de uma rota se corresponder; caso contrário, nulo.</returns>
      <param name="virtualPathRoot">O caminho virtual raiz.</param>
      <param name="request">A solicitação HTTP.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Tenta gerar um URI que representa os valores passados com base nos valores atuais a partir dos <see cref="T:System.Web.Http.Routing.HttpRouteData" /> e os novos valores usando a <see cref="T:System.Web.Http.Routing.HttpRoute" /> especificada.</summary>
      <returns>Uma instância de <see cref="T:System.Web.Http.Routing.HttpVirtualPathData" /> ou nulo se o URI não puder ser gerado.</returns>
      <param name="request">A mensagem de solicitação HTTP.</param>
      <param name="values">Os valores de rota.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.Handler">
      <summary>Obtém ou define o manipulador de rota http.</summary>
      <returns>O manipulador de rota http.</returns>
    </member>
    <member name="F:System.Web.Http.Routing.HttpRoute.HttpRouteKey">
      <summary>Especifica a chave da rota HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRoute.ProcessConstraint(System.Net.Http.HttpRequestMessage,System.Object,System.String,System.Web.Http.Routing.HttpRouteValueDictionary,System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="request">A solicitação HTTP.</param>
      <param name="constraint">As restrições para os parâmetros de rota.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">A lista de valores do parâmetro.</param>
      <param name="routeDirection">Um dos valores de enumeração da enumeração de <see cref="System.Web.Http.Routing.HttpRouteDirection" />.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRoute.RouteTemplate">
      <summary>Obtém o modelo de rota que descreve o padrão de URI com o qual corresponder.</summary>
      <returns>O modelo de rota que descreve o padrão de URI com o qual corresponder.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteData">
      <summary>Encapsula informações relacionadas à rota HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteData.#ctor(System.Web.Http.Routing.IHttpRoute)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Routing.HttpRouteData" />.</summary>
      <param name="route">Um objeto que define a rota.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteData.#ctor(System.Web.Http.Routing.IHttpRoute,System.Web.Http.Routing.HttpRouteValueDictionary)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Routing.HttpRouteData" />.</summary>
      <param name="route">Um objeto que define a rota.</param>
      <param name="values">O valor.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRouteData.Route">
      <summary>Obtém o objeto que representa a rota.</summary>
      <returns>O objeto que representa a rota.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpRouteData.Values">
      <summary>Obtém uma coleção de valores de parâmetros de URL e valores padrão para a rota.</summary>
      <returns>Um objeto que contém valores que são analisados a partir da URL e a partir de valores padrão.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteDataExtensions">
      <summary>Remove todos os parâmetro opcionais que não possuem um valor dos dados de rota.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteDataExtensions.GetSubRoutes(System.Web.Http.Routing.IHttpRouteData)">
      <summary>Se uma rota for de fato a união de outras rotas, o conjunto de subrotas é retornado.</summary>
      <returns>Retorna o conjunto de subrotas contidos dentro desta rota.</returns>
      <param name="routeData">Dados de uma união de rota.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteDataExtensions.RemoveOptionalRoutingParameters(System.Web.Http.Routing.IHttpRouteData)">
      <summary>Remove todos os parâmetro opcionais que não possuem um valor dos dados de rota.</summary>
      <param name="routeData">Os dados de rota a serem mudados para a posição.</param>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteDirection">
      <summary>Especifica uma enumeração de direção da rota.</summary>
    </member>
    <member name="F:System.Web.Http.Routing.HttpRouteDirection.UriGeneration">
      <summary>A direção de UriGeneration.</summary>
    </member>
    <member name="F:System.Web.Http.Routing.HttpRouteDirection.UriResolution">
      <summary>A direção de UriResolution.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.HttpRouteValueDictionary">
      <summary>Representa uma classe de rota para auto-host dos pares de chave/valor especificados.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteValueDictionary.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Routing.HttpRouteValueDictionary" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteValueDictionary.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Routing.HttpRouteValueDictionary" />.</summary>
      <param name="dictionary">O dicionário.</param>
    </member>
    <member name="M:System.Web.Http.Routing.HttpRouteValueDictionary.#ctor(System.Object)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Routing.HttpRouteValueDictionary" />.</summary>
      <param name="values">O valor da chave.</param>
    </member>
    <member name="T:System.Web.Http.Routing.HttpVirtualPathData">
      <summary>Apresenta os dados referentes ao caminho virtual do HTTP.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.HttpVirtualPathData.#ctor(System.Web.Http.Routing.IHttpRoute,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Routing.HttpVirtualPathData" />.</summary>
      <param name="route">A rota do caminho virtual.</param>
      <param name="virtualPath">A URL que foi criada a partir da definição da rota.</param>
    </member>
    <member name="P:System.Web.Http.Routing.HttpVirtualPathData.Route">
      <summary>Obtém ou define a rota do caminho virtual.</summary>
      <returns>A rota do caminho virtual.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.HttpVirtualPathData.VirtualPath">
      <summary>Obtém ou define a URL que foi criada a partir da definição da rota.</summary>
      <returns>A URL que foi criada a partir da definição da rota.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IDirectRouteBuilder">
      <summary>Define um construtor que cria rotas diretas a ações (rotas de atributos).</summary>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Actions">
      <summary>Obtém os descritores de ação para os quais criar uma rota.</summary>
      <returns>Os descritores de ação para os quais criar uma rota.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.IDirectRouteBuilder.Build">
      <summary>Cria uma rota de entrada baseada nos valores atuais de propriedades.</summary>
      <returns>A rota de entrada criada.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Constraints">
      <summary>Obtém ou define as restrições de rota.</summary>
      <returns>As restrições da rota.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.DataTokens">
      <summary>Obtém ou define os tokens de dados de rota.</summary>
      <returns>Os tokens dos dados da rota.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Defaults">
      <summary>Obtém ou define os padrões de rota.</summary>
      <returns>Os padrões da rota.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Name">
      <summary>Obtém ou define o nome da rota, se existir; caso contrário, nulo.</summary>
      <returns>O nome da rota, se existir; caso contrário, nulo.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Order">
      <summary>Obtém ou define a ordem de rota.</summary>
      <returns>A ordem de rota.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Precedence">
      <summary>Obtém ou define a precedência da rota.</summary>
      <returns>A precedência rota.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.TargetIsAction">
      <summary>Obtém um valor indicando se a rota está configurada ao nível de ação ou de controlador.</summary>
      <returns>verdadeiro quando a rota estiver configurada ao nível de ação; caso contrário falso (se a rota estiver configurada ao nível de controlador).</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IDirectRouteBuilder.Template">
      <summary>Obtém ou define o modelo da rota.</summary>
      <returns>O modelo de rota.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IDirectRouteFactory">
      <summary>Define uma fábrica que cria uma rota diretamente para um conjunto de descritores de ação (uma rota de atributos).</summary>
    </member>
    <member name="M:System.Web.Http.Routing.IDirectRouteFactory.CreateRoute(System.Web.Http.Routing.DirectRouteFactoryContext)">
      <summary>Cria uma entrada direta de rota.</summary>
      <returns>A entrada direta de rota.</returns>
      <param name="context">O contexto a utilizar para criar a rota.</param>
    </member>
    <member name="T:System.Web.Http.Routing.IDirectRouteProvider">
      <summary>Define um provedor para rotas que visam diretamente os descritores de ação (rotas de atributo).</summary>
    </member>
    <member name="M:System.Web.Http.Routing.IDirectRouteProvider.GetDirectRoutes(System.Web.Http.Controllers.HttpControllerDescriptor,System.Collections.Generic.IReadOnlyList{System.Web.Http.Controllers.HttpActionDescriptor},System.Web.Http.Routing.IInlineConstraintResolver)">
      <summary>Obtém as rotas diretas para um controlador.</summary>
      <returns>Um conjunto de entradas de rota para o controlador.</returns>
      <param name="controllerDescriptor">O descritor do controlador.</param>
      <param name="actionDescriptors">Os descritores da ação.</param>
      <param name="constraintResolver">O resolvedor de restrições embutidas.</param>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRoute">
      <summary>A <see cref="T:System.Web.Http.Routing.IHttpRoute" /> define a interface para uma rota que expressa como mapear uma <see cref="T:System.Net.Http.HttpRequestMessage" /> de entrada para uma ação e um controlador específicos. </summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.Constraints">
      <summary> Obtém as restrições dos parâmetros de rota. </summary>
      <returns>As restrições para os parâmetros de rota.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.DataTokens">
      <summary> Obtém quaisquer tokens de dados adicionais não utilizados diretamente para determinar se uma rota corresponde a uma <see cref="T:System.Net.Http.HttpRequestMessage" /> de entrada. </summary>
      <returns>Os tokens de dados adicionais.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.Defaults">
      <summary> Obtém os valores padrão para os parâmetros de rota se não forem fornecidos pela <see cref="T:System.Net.Http.HttpRequestMessage" /> de entrada. </summary>
      <returns>Os valores padrão para os parâmetros de rota.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.IHttpRoute.GetRouteData(System.String,System.Net.Http.HttpRequestMessage)">
      <summary> Determine se esta rota corresponde à solicitação de entrada procurando os &lt;consulte cref="!:IRouteData" /&gt; da rota. </summary>
      <returns>Os &lt;consulte cref="!:RouteData" /&gt; de uma rota se corresponder; caso contrário, nulo.</returns>
      <param name="virtualPathRoot">O caminho virtual raiz.</param>
      <param name="request">A solicitação.</param>
    </member>
    <member name="M:System.Web.Http.Routing.IHttpRoute.GetVirtualPath(System.Net.Http.HttpRequestMessage,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Obtém os dados do caminho virtual com base na rota e nos valores fornecidos.</summary>
      <returns>Os dados do caminho virtual.</returns>
      <param name="request">A mensagem de solicitação.</param>
      <param name="values">Os valores.</param>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.Handler">
      <summary>Obtém o manipulador de mensagens que será o destinatário da solicitação.</summary>
      <returns>O manipulador de mensagens.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRoute.RouteTemplate">
      <summary> Obtém o modelo de rota que descreve o padrão de URI com o qual corresponder.  </summary>
      <returns>O modelo de rota.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRouteConstraint">
      <summary>Representa uma restrição de rota da classe base.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.IHttpRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>Verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="request">A solicitação.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRouteData">
      <summary>Fornece informações sobre uma rota.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteData.Route">
      <summary>Obtém o objeto que representa a rota.</summary>
      <returns>O objeto que representa a rota.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteData.Values">
      <summary>Obtém uma coleção de valores de parâmetros de URL e valores padrão para a rota.</summary>
      <returns>Os valores que são analisados a partir da URL e dos valores padrão.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpRouteInfoProvider">
      <summary> Fornece informações para definir uma rota. </summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteInfoProvider.Name">
      <summary> Obtém o nome da rota a ser gerado. </summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteInfoProvider.Order">
      <summary> Obtém a ordem da ordem da rota em relação a outras rotas. </summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpRouteInfoProvider.Template">
      <summary> Obtém o modelo de rota que descreve o padrão de URI com o qual corresponder. </summary>
    </member>
    <member name="T:System.Web.Http.Routing.IHttpVirtualPathData">
      <summary>Define as propriedades para a rota HTTP.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpVirtualPathData.Route">
      <summary>Obtém a rota HTTP.</summary>
      <returns>A rota HTTP.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.IHttpVirtualPathData.VirtualPath">
      <summary>Obtém o URI que representa o caminho virtual da rota HTTP atual.</summary>
      <returns>O URI que representa o caminho virtual da rota HTTP atual.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.IInlineConstraintResolver">
      <summary> Define uma abstração para resolver restrições embutidas como instâncias de <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" />. </summary>
    </member>
    <member name="M:System.Web.Http.Routing.IInlineConstraintResolver.ResolveConstraint(System.String)">
      <summary> Resolve a restrição embutida. </summary>
      <returns>O <see cref="T:System.Web.Http.Routing.IHttpRouteConstraint" /> para o qual a restrição embutida foi resolvida.</returns>
      <param name="inlineConstraint">A restrição embutida a ser resolvida.</param>
    </member>
    <member name="T:System.Web.Http.Routing.IRoutePrefix">
      <summary>Define um prefixo para a rota.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.IRoutePrefix.Prefix">
      <summary>Obtém o prefixo da rota.</summary>
      <returns>O prefixo da rota.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.RouteEntry">
      <summary>Representa uma rota nomeada.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.RouteEntry.#ctor(System.String,System.Web.Http.Routing.IHttpRoute)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.RouteEntry" />.</summary>
      <param name="name">O nome da rota, se existir; caso contrário, nulo.</param>
      <param name="route">A rota.</param>
    </member>
    <member name="P:System.Web.Http.Routing.RouteEntry.Name">
      <summary>Obtém o nome da rota, se existir; caso contrário, nulo.</summary>
      <returns>O nome da rota, se existir; caso contrário, nulo.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.RouteEntry.Route">
      <summary>Obtém a rota.</summary>
      <returns>A rota.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.RouteFactoryAttribute">
      <summary>Representa uma rota de atributos que poderá possuir restrições personalizadas.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.RouteFactoryAttribute.#ctor(System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.RouteFactoryAttribute" />.</summary>
      <param name="template">O modelo de rota.</param>
    </member>
    <member name="P:System.Web.Http.Routing.RouteFactoryAttribute.Constraints">
      <summary>Obtém as restrições da rota, se existir; caso contrário, nulo.</summary>
      <returns>As restrições da rota, se existirem; caso contrário, nulo.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.RouteFactoryAttribute.CreateRoute(System.Web.Http.Routing.DirectRouteFactoryContext)">
      <summary>Cria a rota de entrada</summary>
      <returns>A entrada de rota criada.</returns>
      <param name="context">O contexto.</param>
    </member>
    <member name="P:System.Web.Http.Routing.RouteFactoryAttribute.DataTokens">
      <summary>Obtém os tokens da rota, se existirem; caso contrário, nulo.</summary>
      <returns>Os tokens da rota, se existirem; caso contrário, nulo.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.RouteFactoryAttribute.Defaults">
      <summary>Obtém os padrões da rota, se existirem; caso contrário, nulo.</summary>
      <returns>Os padrões da rota, se existirem; caso contrário, nulo.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.RouteFactoryAttribute.Name">
      <summary>Obtém ou define o nome da rota, se existir; caso contrário, nulo.</summary>
      <returns>O nome da rota, se existir; caso contrário, nulo.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.RouteFactoryAttribute.Order">
      <summary>Obtém ou define a ordem de rota.</summary>
      <returns>A ordem de rota.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.RouteFactoryAttribute.Template">
      <summary>Obtém o modelo da rota.</summary>
      <returns>O modelo de rota.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.StopRoutingHandler">
      <summary>Representa um manipulador que especifica se o roteamento não deveria manipular solicitações para um modelo de rota.Quando uma rota fornece esta classe como manipulador, as solicitações correspondentes com a rota serão ignoradas.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.StopRoutingHandler.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.StopRoutingHandler" />.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.UrlHelper">
      <summary>Representa um alocador para criar URLs. </summary>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.#ctor">
      <summary> Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Routing.UrlHelper" />. </summary>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.#ctor(System.Net.Http.HttpRequestMessage)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Routing.UrlHelper" />.</summary>
      <param name="request">A solicitação HTTP para esta instância.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Content(System.String)">
      <summary>Cria uma URL absoluta usando o caminho especificado.</summary>
      <returns>A URL gerada.</returns>
      <param name="path">O caminho da URL, que pode ser uma URL relativa, uma URL com raiz ou um caminho virtual.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Link(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna um link para a rota especificada.</summary>
      <returns>Um link para a rota especificada.</returns>
      <param name="routeName">O nome da rota.</param>
      <param name="routeValues">Um objeto que contém os parâmetros para uma rota.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Link(System.String,System.Object)">
      <summary>Retorna um link para a rota especificada.</summary>
      <returns>Um link para a rota especificada.</returns>
      <param name="routeName">O nome da rota.</param>
      <param name="routeValues">Um valor de rota.</param>
    </member>
    <member name="P:System.Web.Http.Routing.UrlHelper.Request">
      <summary>Obtém ou define a <see cref="T:System.Net.Http.HttpRequestMessage" /> da instância <see cref="T:System.Web.Http.Routing.UrlHelper" /> atual.</summary>
      <returns>A <see cref="T:System.Net.Http.HttpRequestMessage" /> da instância atual.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Route(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>Retorna a rota do <see cref="T:System.Web.Http.Routing.UrlHelper" />.</summary>
      <returns>A rota do <see cref="T:System.Web.Http.Routing.UrlHelper" />.</returns>
      <param name="routeName">O nome da rota.</param>
      <param name="routeValues">Uma lista de valores de rota.</param>
    </member>
    <member name="M:System.Web.Http.Routing.UrlHelper.Route(System.String,System.Object)">
      <summary>Retorna a rota do <see cref="T:System.Web.Http.Routing.UrlHelper" />.</summary>
      <returns>A rota do <see cref="T:System.Web.Http.Routing.UrlHelper" />.</returns>
      <param name="routeName">O nome da rota.</param>
      <param name="routeValues">Os valores de rota.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.AlphaRouteConstraint">
      <summary>Restringe um parâmetro de rota para conter apenas letras minúsculas ou maiúsculas de A a Z do alfabeto inglês.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.AlphaRouteConstraint.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.Constraints.AlphaRouteConstraint" />.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.BoolRouteConstraint">
      <summary>Restringe um parâmetro de rota para representar apenas valores boolianos.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.BoolRouteConstraint.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.Constraints.BoolRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.BoolRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="request">A solicitação.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.CompoundRouteConstraint">
      <summary>Restringe uma rota por diversas restrições filho.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.CompoundRouteConstraint.#ctor(System.Collections.Generic.IList{System.Web.Http.Routing.IHttpRouteConstraint})">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.Constraints.CompoundRouteConstraint" />.</summary>
      <param name="constraints">As restrições filho que devem corresponder para que esta restrição tenha correspondência.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.CompoundRouteConstraint.Constraints">
      <summary>Obtém as restrições filho que devem corresponder para que esta restrição tenha correspondência.</summary>
      <returns>As restrições filho que devem corresponder para que esta restrição tenha correspondência.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.CompoundRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="request">A solicitação.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.DateTimeRouteConstraint">
      <summary>Restringe um parâmetro de rota para representar apenas valores de <see cref="T:System.DateTime" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DateTimeRouteConstraint.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.Constraints.DateTimeRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DateTimeRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="request">A solicitação.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A rota de direção.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.DecimalRouteConstraint">
      <summary>Restringe um parâmetro de rota para representar apenas valores decimais.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DecimalRouteConstraint.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.Constraints.DecimalRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DecimalRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="request">A solicitação.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.DoubleRouteConstraint">
      <summary>Restringe um parâmetro de rota para representar apenas valores de ponto flutuante de 64 bits.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.DoubleRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Http.Routing.Constraints.DoubleRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="T:System.Web.Http.Routing.Constraints.FloatRouteConstraint">
      <summary>Restringe um parâmetro de rota para representar apenas valores de ponto flutuante de 32 bits.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.FloatRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Http.Routing.Constraints.FloatRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="T:System.Web.Http.Routing.Constraints.GuidRouteConstraint">
      <summary>Restringe um parâmetro de rota para representar apenas valores de <see cref="T:System.Guid" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.GuidRouteConstraint.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.Constraints.GuidRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.GuidRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="request">A solicitação.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.IntRouteConstraint">
      <summary>Restringe um parâmetro de rota para representar apenas valores de inteiro de 32 bits.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.IntRouteConstraint.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.Constraints.IntRouteConstraint" />.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.IntRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="request">A solicitação.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.LengthRouteConstraint">
      <summary>Restringe um parâmetro de rota para ser uma cadeia de caracteres de um determinado comprimento ou ficar dentro de um determinado intervalo de comprimentos.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32)"></member>
    <member name="M:System.Web.Http.Routing.Constraints.LengthRouteConstraint.#ctor(System.Int32,System.Int32)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Routing.Constraints.LengthRouteConstraint" /> que restringe um parâmetro de rota para ser uma cadeia de caracteres de um determinado comprimento.</summary>
      <param name="minLength">O comprimento mínimo do parâmetro de rota.</param>
      <param name="maxLength">O comprimento máximo do parâmetro de rota.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.LengthRouteConstraint.Length">
      <summary>Obtém o comprimento do parâmetro de rota, se houver um definido.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.LengthRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="P:System.Web.Http.Routing.Constraints.LengthRouteConstraint.MaxLength">
      <summary>Obtém o comprimento máximo do parâmetro de rota, se houver um definido.</summary>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.LengthRouteConstraint.MinLength">
      <summary>Obtém o comprimento mínimo do parâmetro de rota, se houver um definido.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.LongRouteConstraint">
      <summary>Restringe um parâmetro de rota para representar apenas valores de inteiro de 64 bits.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.LongRouteConstraint.#ctor"></member>
    <member name="M:System.Web.Http.Routing.Constraints.LongRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="T:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint">
      <summary>Restringe um parâmetro de rota para ser uma cadeia de caracteres com um comprimento máximo.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint.#ctor(System.Int32)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint" />.</summary>
      <param name="maxLength">O comprimento máximo.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="request">A solicitação.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.MaxLengthRouteConstraint.MaxLength">
      <summary>Obtém o comprimento máximo do parâmetro de rota.</summary>
      <returns>O comprimento máximo do parâmetro de rota.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.MaxRouteConstraint">
      <summary>Restringe um parâmetro de rota para ser um inteiro com um valor máximo.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MaxRouteConstraint.#ctor(System.Int64)"></member>
    <member name="M:System.Web.Http.Routing.Constraints.MaxRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)"></member>
    <member name="P:System.Web.Http.Routing.Constraints.MaxRouteConstraint.Max">
      <summary>Obtém o valor máximo do parâmetro de rota.</summary>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint">
      <summary>Restringe um parâmetro de rota para ser uma cadeia de caracteres com um comprimento máximo.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint.#ctor(System.Int32)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint" />.</summary>
      <param name="minLength">O comprimento mínimo.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="request">A solicitação.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.MinLengthRouteConstraint.MinLength">
      <summary>Obtém o comprimento mínimo do parâmetro de rota.</summary>
      <returns>O comprimento mínimo do parâmetro de rota.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.MinRouteConstraint">
      <summary>Restringe um parâmetro de rota para ser um longo com um valor mínimo.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MinRouteConstraint.#ctor(System.Int64)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.Constraints.MinRouteConstraint" />.</summary>
      <param name="min">O valor mínimo do parâmetro de rota.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.MinRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="request">A solicitação.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.MinRouteConstraint.Min">
      <summary>Obtém o valor mínimo do parâmetro de rota.</summary>
      <returns>O valor mínimo do parâmetro de rota.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.OptionalRouteConstraint">
      <summary>Restringe uma rota por uma restrição interna que não falha quando um parâmetro opcional é definido com seu valor padrão.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.OptionalRouteConstraint.#ctor(System.Web.Http.Routing.IHttpRouteConstraint)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.Constraints.OptionalRouteConstraint" />.</summary>
      <param name="innerConstraint">A restrição interna para correspondência se o parâmetro não é um parâmetro opcional sem um valor</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.OptionalRouteConstraint.InnerConstraint">
      <summary>Obtém a restrição interna para correspondência se o parâmetro não é um parâmetro opcional sem um valor.</summary>
      <returns>A restrição interna para correspondência se o parâmetro não é um parâmetro opcional sem um valor.</returns>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.OptionalRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="request">A solicitação.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.RangeRouteConstraint">
      <summary>Restringe um parâmetro de rota para ser um inteiro dentro de um determinado intervalo de valores.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.RangeRouteConstraint.#ctor(System.Int64,System.Int64)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.Constraints.RangeRouteConstraint" />.</summary>
      <param name="min">O valor mínimo.</param>
      <param name="max">O valor máximo.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.RangeRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="request">A solicitação.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.RangeRouteConstraint.Max">
      <summary>Obtém o valor máximo do parâmetro de rota.</summary>
      <returns>O valor máximo do parâmetro de rota.</returns>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.RangeRouteConstraint.Min">
      <summary>Obtém o valor mínimo do parâmetro de rota.</summary>
      <returns>O valor mínimo do parâmetro de rota.</returns>
    </member>
    <member name="T:System.Web.Http.Routing.Constraints.RegexRouteConstraint">
      <summary>Restringe um parâmetro de rota para corresponder a uma expressão regular.</summary>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.RegexRouteConstraint.#ctor(System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Routing.Constraints.RegexRouteConstraint" />.</summary>
      <param name="pattern">O padrão.</param>
    </member>
    <member name="M:System.Web.Http.Routing.Constraints.RegexRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>Determina se esta instância é igual a uma rota especificada.</summary>
      <returns>verdadeiro se esta instância for igual a uma rota especificada; caso contrário, falso.</returns>
      <param name="request">A solicitação.</param>
      <param name="route">A rota a ser comparada.</param>
      <param name="parameterName">O nome do parâmetro.</param>
      <param name="values">Uma lista de valores de parâmetro.</param>
      <param name="routeDirection">A direção da rota.</param>
    </member>
    <member name="P:System.Web.Http.Routing.Constraints.RegexRouteConstraint.Pattern">
      <summary>Obtém o padrão de expressão regular para correspondência.</summary>
      <returns>O padrão de expressão regular para correspondência.</returns>
    </member>
    <member name="T:System.Web.Http.Services.Decorator">
      <summary> Fornece um método para recuperar o objeto mais interno de um objeto que pode ser encapsulado por um &lt;ver cref="T:System.Web.Http.Services.IDecorator`1" /&gt;. </summary>
    </member>
    <member name="M:System.Web.Http.Services.Decorator.GetInner``1(``0)">
      <summary> Obtém o objeto mais interno que não implementa &lt;see cref="T:System.Web.Http.Services.IDecorator`1" /&gt;. </summary>
      <param name="outer">Objeto que precisa ser desencapsulado.</param>
      <typeparam name="T"></typeparam>
    </member>
    <member name="T:System.Web.Http.Services.DefaultServices">
      <summary>Representa um contêiner para instâncias de serviço usadas pelo <see cref="T:System.Web.Http.HttpConfiguration" />.Observe que         este contêiner suporta somente os tipos conhecidos e os métodos para obter ou definir tipos de serviços arbitrários          gerarão a <see cref="T:System.ArgumentException" /> quando chamados.Para a criação de tipos arbitrários, utilize          <see cref="T:System.Web.Http.Dependencies.IDependencyResolver" /> em seu lugar.Os tipos suportados para este contêiner são:        <see cref="T:System.Web.Http.Controllers.IActionValueBinder" /><see cref="T:System.Web.Http.Description.IApiExplorer" /><see cref="T:System.Web.Http.Dispatcher.IAssembliesResolver" /><see cref="T:System.Web.Http.Validation.IBodyModelValidator" /><see cref="T:System.Net.Http.Formatting.IContentNegotiator" /><see cref="T:System.Web.Http.Description.IDocumentationProvider" /><see cref="T:System.Web.Http.Filters.IFilterProvider" /><see cref="T:System.Web.Http.Hosting.IHostBufferPolicySelector" /><see cref="T:System.Web.Http.Controllers.IHttpActionInvoker" /><see cref="T:System.Web.Http.Controllers.IHttpActionSelector" /><see cref="T:System.Web.Http.Dispatcher.IHttpControllerActivator" /><see cref="T:System.Web.Http.Dispatcher.IHttpControllerSelector" /><see cref="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" /><see cref="T:System.Web.Http.Tracing.ITraceManager" /><see cref="T:System.Web.Http.Tracing.ITraceWriter" /><see cref="T:System.Web.Http.Query.IStructuredQueryBuilder" /><see cref="T:System.Web.Http.ModelBinding.ModelBinderProvider" /><see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /><see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /><see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />Passar qualquer tipo que não esteja neste para qualquer método nesta interface fará com que          uma <see cref="T:System.ArgumentException" /> seja gerada.</summary>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Services.DefaultServices" />.</summary>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Services.DefaultServices" /> com um objeto <see cref="T:System.Web.Http.HttpConfiguration" /> especificado.</summary>
      <param name="configuration">O objeto <see cref="T:System.Web.Http.HttpConfiguration" />.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.ClearSingle(System.Type)">
      <summary>Remove um serviço de instância única dos serviços padrão.</summary>
      <param name="serviceType">O tipo de serviço.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.GetService(System.Type)">
      <summary>Obtém um serviço do tipo especificado.</summary>
      <returns>A primeira instância do serviço ou nulo se o serviço não for encontrado.</returns>
      <param name="serviceType">O tipo de serviço.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.GetServiceInstances(System.Type)">
      <summary>Obtém a lista de objetos de serviço para um tipo de serviço determinado e valida o tipo de serviço.</summary>
      <returns>A lista de objetos de serviço do tipo especificado.</returns>
      <param name="serviceType">O tipo de serviço.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.GetServices(System.Type)">
      <summary>Obtém a lista de objetos de serviço de um tipo de serviço determinado.</summary>
      <returns>A lista de objetos de serviço do tipo especificado ou uma lista vazia se o serviço não for encontrado.</returns>
      <param name="serviceType">O tipo de serviço.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.IsSingleService(System.Type)">
      <summary>Consulta se um tipo de serviço é uma instância única.</summary>
      <returns>verdadeiro se o tipo de serviço tiver no máximo uma instância, ou falso se o tipo de serviço suporta várias instâncias.</returns>
      <param name="serviceType">O tipo de serviço.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.ReplaceSingle(System.Type,System.Object)">
      <summary>Substitui um objeto de serviço de instância única.</summary>
      <param name="serviceType">O tipo de serviço.</param>
      <param name="service">O objeto de serviço que substitui a instância anterior.</param>
    </member>
    <member name="M:System.Web.Http.Services.DefaultServices.ResetCache(System.Type)">
      <summary>Remove os valores armazenados em cache para um único tipo de serviço.</summary>
      <param name="serviceType">O tipo de serviço.</param>
    </member>
    <member name="T:System.Web.Http.Services.IDecorator`1">
      <summary> Define um decorador que expõe o objeto decorado interno. </summary>
      <typeparam name="T">Este parâmetro de tipo é covariante. Ou seja, você pode usar o tipo especificado ou qualquer tipo que seja mais derivado. Para obter mais informações sobre covariância e contravariância, consulte .</typeparam>
    </member>
    <member name="P:System.Web.Http.Services.IDecorator`1.Inner">
      <summary> Obtém o objeto interno. </summary>
    </member>
    <member name="T:System.Web.Http.Tracing.ITraceManager">
      <summary>Representa uma classe de rastreamento de desempenho para registrar o método de entrada/saída e duração.</summary>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceManager.Initialize(System.Web.Http.HttpConfiguration)">
      <summary>Inicializa a classe <see cref="T:System.Web.Http.Tracing.ITraceManager" /> com uma configuração especificada.</summary>
      <param name="configuration">A configuração.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.ITraceWriter">
      <summary>Representa o gravador de rastreamento.</summary>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriter.Trace(System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary> Invoca a traceAction especificada para permitir os valores de configuração em um novo <see cref="T:System.Web.Http.Tracing.TraceRecord" /> se, e apenas se, o rastreamento for permitido na categoria e no nível fornecidos. </summary>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> atual.Pode ser nula, mas se for, impedirá a análise subsequente do rastreamento de correlacionar o rastreamento a uma solicitação específica.</param>
      <param name="category">A categoria lógica do rastreamento.Os usuários podem definir suas próprias categorias.</param>
      <param name="level">O <see cref="T:System.Web.Http.Tracing.TraceLevel" /> em que será gravado este rastreamento.</param>
      <param name="traceAction">A ação a ser invocada se o rastreamento estiver habilitado.Espera-se que o chamador preencha os campos do <see cref="T:System.Web.Http.Tracing.TraceRecord" /> fornecido nesta ação.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.ITraceWriterExtensions">
      <summary>Representa um método de extensão para <see cref="T:System.Web.Http.Tracing.ITraceWriter" />. </summary>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Fornece um conjunto de métodos e propriedades que ajudam a depurar o código com o gravador, a solicitação, a categoria e a exceção especificados.</summary>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="exception">O erro ocorrido durante a execução.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Fornece um conjunto de métodos e propriedades que ajudam a depurar o código com o gravador, a solicitação, a categoria, a exceção, o formato de mensagem e o argumento especificados.</summary>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="exception">O erro ocorrido durante a execução.</param>
      <param name="messageFormat">O formato da mensagem.</param>
      <param name="messageArguments">O argumento da mensagem.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Debug(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Fornece um conjunto de métodos e propriedades que ajudam a depurar o código com o gravador, a solicitação, a categoria, a exceção, o formato de mensagem e o argumento especificados.</summary>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="messageFormat">O formato da mensagem.</param>
      <param name="messageArguments">O argumento da mensagem.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Exibe uma mensagem de erro na lista com o gravador, a solicitação, a categoria e a exceção especificados.</summary>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="exception">O erro ocorrido durante a execução.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Exibe uma mensagem de erro na lista com o gravador, a solicitação, a categoria, a exceção, o formato de mensagem e o argumento especificados.</summary>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="exception">A exceção.</param>
      <param name="messageFormat">O formato da mensagem.</param>
      <param name="messageArguments">O argumento na mensagem.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Error(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Exibe uma mensagem de erro na lista com o gravador, a solicitação, a categoria, o formato de mensagem e o argumento especificados.</summary>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="messageFormat">O formato da mensagem.</param>
      <param name="messageArguments">O argumento na mensagem.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Fatal(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Exibe uma mensagem de erro na classe <see cref="T:System.Web.Http.Tracing.ITraceWriterExtensions" /> com o gravador, a solicitação, a categoria e a exceção especificados.</summary>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="exception">A exceção que aparece durante a execução.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Fatal(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Exibe uma mensagem de erro na classe <see cref="T:System.Web.Http.Tracing.ITraceWriterExtensions" /> com o gravador, a solicitação, a categoria, a exceção, o formato de mensagem e o argumento especificados.</summary>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="exception">A exceção.</param>
      <param name="messageFormat">O formato da mensagem.</param>
      <param name="messageArguments">O argumento da mensagem.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Fatal(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Exibe uma mensagem de erro na classe <see cref="T:System.Web.Http.Tracing.ITraceWriterExtensions" /> com o gravador, a solicitação, a categoria, o formato de mensagem e o argumento especificados.</summary>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="messageFormat">O formato da mensagem.</param>
      <param name="messageArguments">O argumento da mensagem.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Exibe os detalhes nas <see cref="System.Web.Http.Tracing.ITraceWriterExtensions" />.</summary>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="exception">O erro ocorrido durante a execução.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Exibe os detalhes nas <see cref="System.Web.Http.Tracing.ITraceWriterExtensions" />.</summary>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="exception">O erro ocorrido durante a execução.</param>
      <param name="messageFormat">O formato da mensagem.</param>
      <param name="messageArguments">O argumento da mensagem.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Info(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Exibe os detalhes nas <see cref="System.Web.Http.Tracing.ITraceWriterExtensions" />.</summary>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="messageFormat">O formato da mensagem.</param>
      <param name="messageArguments">O argumento da mensagem.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.Exception)">
      <summary>Indica os ouvintes de rastreamento na coleção de Ouvintes.</summary>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="level">O nível do rastreamento.</param>
      <param name="exception">O erro ocorrido durante a execução.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.Exception,System.String,System.Object[])">
      <summary>Indica os ouvintes de rastreamento na coleção de Ouvintes.</summary>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="level">O nível do rastreamento.</param>
      <param name="exception">O erro ocorrido durante a execução.</param>
      <param name="messageFormat">O formato da mensagem.</param>
      <param name="messageArguments">O argumento da mensagem.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Trace(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.Object[])">
      <summary>Indica os ouvintes de rastreamento na coleção de Ouvintes.</summary>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="level">O <see cref="T:System.Web.Http.Tracing.TraceLevel" /> do rastreamento.</param>
      <param name="messageFormat">O formato da mensagem.</param>
      <param name="messageArguments">O argumento da mensagem.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.TraceBeginEnd(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.String,System.Action{System.Web.Http.Tracing.TraceRecord},System.Action,System.Action{System.Web.Http.Tracing.TraceRecord},System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary>Realiza o rastreamento inicial e final de uma operação especificada.</summary>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="level">O <see cref="T:System.Web.Http.Tracing.TraceLevel" /> do rastreamento.</param>
      <param name="operatorName">O nome do objeto que realiza a operação.Pode ser nula.</param>
      <param name="operationName">O nome da operação que está sendo realizada.Pode ser nula.</param>
      <param name="beginTrace">A <see cref="T:System.Action" /> a ser invocada antes de realizar a operação, permitindo que o <see cref="T:System.Web.Http.Tracing.TraceRecord" /> fornecido seja preenchido.Pode ser nula.</param>
      <param name="execute">Um &lt;see cref="T:System.Func`1" /&gt; que retorna a <see cref="T:System.Threading.Tasks.Task" /> que realizará a operação.</param>
      <param name="endTrace">A <see cref="T:System.Action" /> a ser invocada após realizar a operação com êxito, permitindo que o <see cref="T:System.Web.Http.Tracing.TraceRecord" /> fornecido seja preenchido.Pode ser nula.</param>
      <param name="errorTrace">A <see cref="T:System.Action" /> a ser invocada se um erro foi encontrado ao realizar a operação, permitindo que o <see cref="T:System.Web.Http.Tracing.TraceRecord" /> fornecido seja preenchido.Pode ser nula.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.TraceBeginEndAsync``1(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.String,System.Action{System.Web.Http.Tracing.TraceRecord},System.Func{System.Threading.Tasks.Task{``0}},System.Action{System.Web.Http.Tracing.TraceRecord,``0},System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary> Realiza o rastreamento inicial e final de uma operação especificada. </summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> retornada pela operação.</returns>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="level">O <see cref="T:System.Web.Http.Tracing.TraceLevel" /> do rastreamento.</param>
      <param name="operatorName">O nome do objeto que realiza a operação.Pode ser nula.</param>
      <param name="operationName">O nome da operação que está sendo realizada.Pode ser nula.</param>
      <param name="beginTrace">A <see cref="T:System.Action" /> a ser invocada antes de realizar a operação, permitindo que o <see cref="T:System.Web.Http.Tracing.TraceRecord" /> fornecido seja preenchido.Pode ser nula.</param>
      <param name="execute">Um &lt;see cref="T:System.Func`1" /&gt; que retorna a <see cref="T:System.Threading.Tasks.Task" /> que realizará a operação.</param>
      <param name="endTrace">A <see cref="T:System.Action" /> a ser invocada após realizar a operação com êxito, permitindo que o <see cref="T:System.Web.Http.Tracing.TraceRecord" /> fornecido seja preenchido.O resultado da tarefa concluída também será passado para esta ação.Esta ação pode ser nula.</param>
      <param name="errorTrace">A <see cref="T:System.Action" /> a ser invocada se um erro foi encontrado ao realizar a operação, permitindo que o <see cref="T:System.Web.Http.Tracing.TraceRecord" /> fornecido seja preenchido.Pode ser nula.</param>
      <typeparam name="TResult">O tipo do resultado produzido pela <see cref="T:System.Threading.Tasks.Task" />.</typeparam>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.TraceBeginEndAsync(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel,System.String,System.String,System.Action{System.Web.Http.Tracing.TraceRecord},System.Func{System.Threading.Tasks.Task},System.Action{System.Web.Http.Tracing.TraceRecord},System.Action{System.Web.Http.Tracing.TraceRecord})">
      <summary> Realiza o rastreamento inicial e final de uma operação especificada. </summary>
      <returns>A <see cref="T:System.Threading.Tasks.Task" /> retornada pela operação.</returns>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="level">O <see cref="T:System.Web.Http.Tracing.TraceLevel" /> do rastreamento.</param>
      <param name="operatorName">O nome do objeto que realiza a operação.Pode ser nula.</param>
      <param name="operationName">O nome da operação que está sendo realizada.Pode ser nula.</param>
      <param name="beginTrace">A <see cref="T:System.Action" /> a ser invocada antes de realizar a operação, permitindo que o <see cref="T:System.Web.Http.Tracing.TraceRecord" /> fornecido seja preenchido.Pode ser nula.</param>
      <param name="execute">Um &lt;see cref="T:System.Func`1" /&gt; que retorna a <see cref="T:System.Threading.Tasks.Task" /> que realizará a operação.</param>
      <param name="endTrace">A <see cref="T:System.Action" /> a ser invocada após realizar a operação com êxito, permitindo que o <see cref="T:System.Web.Http.Tracing.TraceRecord" /> fornecido seja preenchido.Pode ser nula.</param>
      <param name="errorTrace">A <see cref="T:System.Action" /> a ser invocada se um erro foi encontrado ao realizar a operação, permitindo que o <see cref="T:System.Web.Http.Tracing.TraceRecord" /> fornecido seja preenchido.Pode ser nula.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception)">
      <summary>Indica o nível de aviso da execução.</summary>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="exception">O erro ocorrido durante a execução.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.Exception,System.String,System.Object[])">
      <summary>Indica o nível de aviso da execução.</summary>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="exception">O erro ocorrido durante a execução.</param>
      <param name="messageFormat">O formato da mensagem.</param>
      <param name="messageArguments">O argumento da mensagem.</param>
    </member>
    <member name="M:System.Web.Http.Tracing.ITraceWriterExtensions.Warn(System.Web.Http.Tracing.ITraceWriter,System.Net.Http.HttpRequestMessage,System.String,System.String,System.Object[])">
      <summary>Indica o nível de aviso da execução.</summary>
      <param name="traceWriter">A <see cref="T:System.Web.Http.Tracing.ITraceWriter" />.</param>
      <param name="request">A <see cref="T:System.Net.Http.HttpRequestMessage" /> que se associará ao rastreamento.Pode ser nula.</param>
      <param name="category">A categoria lógica do rastreamento.</param>
      <param name="messageFormat">O formato da mensagem.</param>
      <param name="messageArguments">O argumento da mensagem.</param>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceCategories">
      <summary>Especifica uma enumeração das categorias de rastreamento.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.ActionCategory">
      <summary>Uma categoria de ação.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.ControllersCategory">
      <summary>A categoria dos controladores.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.FiltersCategory">
      <summary>A categoria dos filtros.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.FormattingCategory">
      <summary>A categoria da formatação.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.MessageHandlersCategory">
      <summary>A categoria dos gerenciadores de mensagens.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.ModelBindingCategory">
      <summary>A categoria da associação de modelos.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.RequestCategory">
      <summary>A categoria da solicitação.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceCategories.RoutingCategory">
      <summary>A categoria do roteamento.</summary>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceKind">
      <summary>Especifica o tipo de operação de rastreamento.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceKind.Begin">
      <summary>Rastreamento que marca o início de alguma operação.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceKind.End">
      <summary>Rastreamento que marca o fim de alguma operação.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceKind.Trace">
      <summary>Rastreamento único, não é parte de um par de rastreamento Início/Fim.</summary>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceLevel">
      <summary>Especifica uma enumeração do nível de rastreamento.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Debug">
      <summary>O nível de rastreamento para rastreamentos de depuração.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Error">
      <summary>O nível de rastreamento para rastreamentos de erro.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Fatal">
      <summary>O nível de rastreamento para rastreamentos fatais.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Info">
      <summary>O nível de rastreamento para rastreamentos de informação.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Off">
      <summary>O rastreamento está desabilitado.</summary>
    </member>
    <member name="F:System.Web.Http.Tracing.TraceLevel.Warn">
      <summary>O nível de rastreamento para rastreamentos de aviso.</summary>
    </member>
    <member name="T:System.Web.Http.Tracing.TraceRecord">
      <summary>Representa um registro de rastreamento.</summary>
    </member>
    <member name="M:System.Web.Http.Tracing.TraceRecord.#ctor(System.Net.Http.HttpRequestMessage,System.String,System.Web.Http.Tracing.TraceLevel)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Tracing.TraceRecord" />.</summary>
      <param name="request">A solicitação de mensagem.</param>
      <param name="category">A categoria do rastreamento.</param>
      <param name="level">O nível do rastreamento.</param>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Category">
      <summary>Obtém ou define a categoria de rastreamento.</summary>
      <returns>A categoria do rastreamento.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Exception">
      <summary>Obtém ou define a exceção.</summary>
      <returns>A exceção.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Kind">
      <summary>Obtém ou define o tipo de rastreamento.</summary>
      <returns>O tipo de rastreamento.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Level">
      <summary>Obtém ou define o nível de rastreamento.</summary>
      <returns>O nível do rastreamento.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Message">
      <summary>Obtém ou define a mensagem.</summary>
      <returns>A mensagem.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Operation">
      <summary>Obtém ou define o nome da operação lógica a ser realizada.</summary>
      <returns>O nome da operação lógica que está sendo realizada.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Operator">
      <summary>Obtém ou define o nome lógico do objeto que realiza a operação.</summary>
      <returns>O nome lógico do objeto que realiza a operação.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Properties">
      <summary>Obtém as propriedades opcionais definidas pelo usuário.</summary>
      <returns>As propriedades opcionais definidas pelo usuário.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Request">
      <summary>Obtém a <see cref="T:System.Net.Http.HttpRequestMessage" /> do registro.</summary>
      <returns>A <see cref="T:System.Net.Http.HttpRequestMessage" /> do registro.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.RequestId">
      <summary>Obtém a ID de correlação da <see cref="P:System.Web.Http.Tracing.TraceRecord.Request" />.</summary>
      <returns>Obtém a ID de correlação da <see cref="P:System.Web.Http.Tracing.TraceRecord.Request" />.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Status">
      <summary>Obtém ou define o <see cref="T:System.Net.HttpStatusCode" /> associado à <see cref="T:System.Net.Http.HttpResponseMessage" />.</summary>
      <returns>O <see cref="T:System.Net.HttpStatusCode" /> associado à <see cref="T:System.Net.Http.HttpResponseMessage" />.</returns>
    </member>
    <member name="P:System.Web.Http.Tracing.TraceRecord.Timestamp">
      <summary>Obtém a <see cref="T:System.DateTime" /> deste rastreamento (via <see cref="P:System.DateTime.UtcNow" />).</summary>
      <returns>A <see cref="T:System.DateTime" /> deste rastreamento (via <see cref="P:System.DateTime.UtcNow" />).</returns>
    </member>
    <member name="T:System.Web.Http.Validation.DefaultBodyModelValidator">
      <summary>Representa uma classe usada para validar um objeto recursivamente.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.DefaultBodyModelValidator.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Validation.DefaultBodyModelValidator" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.DefaultBodyModelValidator.ShouldValidateType(System.Type)">
      <summary>Determina se instâncias de um determinado tipo devem ser validadas.</summary>
      <returns>verdadeiro se o tipo deve ser validado; caso contrário, falso.</returns>
      <param name="type">O tipo a ser validado.</param>
    </member>
    <member name="M:System.Web.Http.Validation.DefaultBodyModelValidator.Validate(System.Object,System.Type,System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.String)">
      <summary>Determina se o <paramref name="model" /> é válido e adiciona quaisquer erros de validação ao <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> do <paramref name="actionContext" />.</summary>
      <returns>verdadeiro se o modelo for válido; caso contrário, falso.</returns>
      <param name="model">O modelo a ser validado.</param>
      <param name="type">O <see cref="T:System.Type" /> a ser usado para validação.</param>
      <param name="metadataProvider">O <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /> usado para fornecer metadados do modelo.</param>
      <param name="actionContext">O <see cref="T:System.Web.Http.Controllers.HttpActionContext" /> no qual o modelo está sendo validado.</param>
      <param name="keyPrefix">A <see cref="T:System.String" /> a anexar à chave para quaisquer erros de validação.</param>
    </member>
    <member name="T:System.Web.Http.Validation.IBodyModelValidator">
      <summary>Representa uma interface para a validação dos modelos.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.IBodyModelValidator.Validate(System.Object,System.Type,System.Web.Http.Metadata.ModelMetadataProvider,System.Web.Http.Controllers.HttpActionContext,System.String)">
      <summary> Determina se o modelo é válido e adiciona quaisquer erros de validação ao <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> do actionContext</summary>
      <returns>verdadeiro se o modelo for válido; caso contrário, falso.</returns>
      <param name="model">O modelo a ser validado.</param>
      <param name="type">O <see cref="T:System.Type" /> a ser usado para validação.</param>
      <param name="metadataProvider">O <see cref="T:System.Web.Http.Metadata.ModelMetadataProvider" /> usado para fornecer os metadados do modelo.</param>
      <param name="actionContext">O <see cref="T:System.Web.Http.Controllers.HttpActionContext" /> no qual o modelo está sendo validado.</param>
      <param name="keyPrefix">A <see cref="T:System.String" /> a anexar à chave para quaisquer erros de validação.</param>
    </member>
    <member name="T:System.Web.Http.Validation.ModelStateFormatterLogger">
      <summary>Este <see cref="T:System.Net.Http.Formatting.IFormatterLogger" /> registra os erros do formatador no <see cref="T:System.Web.Http.ModelBinding.ModelStateDictionary" /> fornecido.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelStateFormatterLogger.#ctor(System.Web.Http.ModelBinding.ModelStateDictionary,System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Validation.ModelStateFormatterLogger" />.</summary>
      <param name="modelState">O estado do modelo.</param>
      <param name="prefix">O prefixo.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelStateFormatterLogger.LogError(System.String,System.Exception)">
      <summary>Registra o erro do modelo especificado.</summary>
      <param name="errorPath">O caminho do erro.</param>
      <param name="exception">A mensagem de erro.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelStateFormatterLogger.LogError(System.String,System.String)">
      <summary>Registra o erro do modelo especificado.</summary>
      <param name="errorPath">O caminho do erro.</param>
      <param name="errorMessage">A mensagem de erro.</param>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidatedEventArgs">
      <summary>Fornece dados para o evento do <see cref="E:System.Web.Http.Validation.ModelValidationNode.Validated" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatedEventArgs.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Validation.ModelValidatedEventArgs" />.</summary>
      <param name="actionContext">O contexto da ação.</param>
      <param name="parentNode">O nó pai.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatedEventArgs.ActionContext">
      <summary>Obtém ou define o contexto de uma ação.</summary>
      <returns>O contexto de uma ação.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatedEventArgs.ParentNode">
      <summary>Obtém ou define o pai deste nó.</summary>
      <returns>O pai deste nó.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidatingEventArgs">
      <summary>Fornece dados para o evento <see cref="E:System.Web.Http.Validation.ModelValidationNode.Validating" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatingEventArgs.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Validation.ModelValidatingEventArgs" />.</summary>
      <param name="actionContext">O contexto da ação.</param>
      <param name="parentNode">O nó pai.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatingEventArgs.ActionContext">
      <summary>Obtém ou define o contexto de uma ação.</summary>
      <returns>O contexto de uma ação.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidatingEventArgs.ParentNode">
      <summary>Obtém ou define o pai deste nó.</summary>
      <returns>O pai deste nó.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidationNode">
      <summary>Fornece um contêiner para as informações de validação de modelo.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.#ctor(System.Web.Http.Metadata.ModelMetadata,System.String)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Validation.ModelValidationNode" />, usando a chave de estado e os metadados do modelo.</summary>
      <param name="modelMetadata">Os metadados do modelo.</param>
      <param name="modelStateKey">A chave de estado de modelo.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.#ctor(System.Web.Http.Metadata.ModelMetadata,System.String,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidationNode})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Validation.ModelValidationNode" />, usando a chave de estado do modelo, metadados do modelo e os nós filho de validação de modelo.</summary>
      <param name="modelMetadata">Os metadados do modelo.</param>
      <param name="modelStateKey">A chave de estado de modelo.</param>
      <param name="childNodes">Os nós filho do modelo.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ChildNodes">
      <summary>Obtém ou define os nós filho.</summary>
      <returns>Os nós filho.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.CombineWith(System.Web.Http.Validation.ModelValidationNode)">
      <summary>Combina a instância atual do <see cref="T:System.Web.Http.Validation.ModelValidationNode" /> com uma instância especificada do <see cref="T:System.Web.Http.Validation.ModelValidationNode" />.</summary>
      <param name="otherNode">O nó de validação do modelo a ser combinado com a instância atual.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ModelMetadata">
      <summary>Obtém ou define os metadados do modelo.</summary>
      <returns>Os metadados do modelo.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ModelStateKey">
      <summary>Obtém ou define a chave de estado de modelo.</summary>
      <returns>A chave de estado de modelo.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.SuppressValidation">
      <summary>Obtém ou define um valor que indica se a validação deve ser suprimida.</summary>
      <returns>verdadeiro se a validação deve ser suprimida; caso contrário, falso.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.Validate(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Valida o modelo usando o contexto de execução especificado.</summary>
      <param name="actionContext">O contexto da ação.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationNode.Validate(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.Validation.ModelValidationNode)">
      <summary>Valida o modelo usando o contexto de execução e o nó pai especificados.</summary>
      <param name="actionContext">O contexto da ação.</param>
      <param name="parentNode">O nó pai.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationNode.ValidateAllProperties">
      <summary>Obtém ou define um valor que indica se todas as propriedades do modelo devem ser validadas.</summary>
      <returns>verdadeiro se todas as propriedades do modelo devem ser validadas ou falso se a validação deve ser ignorada.</returns>
    </member>
    <member name="E:System.Web.Http.Validation.ModelValidationNode.Validated">
      <summary>Ocorre quando o modelo foi validado.</summary>
    </member>
    <member name="E:System.Web.Http.Validation.ModelValidationNode.Validating">
      <summary>Ocorre quando o modelo está sendo validado.</summary>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidationRequiredMemberSelector">
      <summary>Representa a seleção de membros necessários, através da verificação de quaisquer ModelValidators associados ao membro.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationRequiredMemberSelector.#ctor(System.Web.Http.Metadata.ModelMetadataProvider,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Validation.ModelValidationRequiredMemberSelector" />.</summary>
      <param name="metadataProvider">O provedor de metadados.</param>
      <param name="validatorProviders">Os provedores do validador.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationRequiredMemberSelector.IsRequiredMember(System.Reflection.MemberInfo)">
      <summary>Indica se o membro é necessário para a validação.</summary>
      <returns>verdadeiro se o membro é necessário para validação; caso contrário, falso.</returns>
      <param name="member">O membro.</param>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidationResult">
      <summary>Fornece um contêiner para um resultado de validação.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidationResult.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Validation.ModelValidationResult" />.</summary>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationResult.MemberName">
      <summary>Obtém ou define o nome do membro.</summary>
      <returns>O nome do membro.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidationResult.Message">
      <summary>Obtém ou define a mensagem do resultado da validação.</summary>
      <returns>A mensagem do resultado da validação.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidator">
      <summary>Fornece uma classe base para a implementação da lógica de validação.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Validation.ModelValidator" />.</summary>
      <param name="validatorProviders">Os provedores do validador.</param>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidator.GetModelValidator(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Retorna um validador de modelo composto para o modelo.</summary>
      <returns>Um validador de modelo composto para o modelo.</returns>
      <param name="validatorProviders">Uma enumeração dos provedores do validador.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidator.IsRequired">
      <summary>Obtém um valor que indica se uma propriedade de modelo é necessária.</summary>
      <returns>verdadeiro se a propriedade de modelo for necessária; caso contrário, falso.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Valida um objeto especificado.</summary>
      <returns>Uma lista de resultados de validação.</returns>
      <param name="metadata">Os metadados.</param>
      <param name="container">O contêiner.</param>
    </member>
    <member name="P:System.Web.Http.Validation.ModelValidator.ValidatorProviders">
      <summary>Obtém ou define uma enumeração dos provedores de validadores.</summary>
      <returns>Uma enumeração dos provedores do validador.</returns>
    </member>
    <member name="T:System.Web.Http.Validation.ModelValidatorProvider">
      <summary>Fornece uma lista de validadores para um modelo.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatorProvider.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.ModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Obtém uma lista de validadores associados a este <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" />.</summary>
      <returns>A lista de validadores.</returns>
      <param name="metadata">Os metadados.</param>
      <param name="validatorProviders">Os provedores do validador.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.AssociatedValidatorProvider">
      <summary>Fornece uma classe abstrata para classes que implementam um provedor de validação.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Validation.Providers.AssociatedValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.GetTypeDescriptor(System.Type)">
      <summary>Obtém um descritor de tipo do tipo especificado.</summary>
      <returns>Um descritor de tipo do tipo especificado.</returns>
      <param name="type">O tipo do provedor de validação.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Obtém os validadores para o modelo utilizando os metadados e os provedores do validador.</summary>
      <returns>Os validadores para o modelo.</returns>
      <param name="metadata">Os metadados.</param>
      <param name="validatorProviders">Uma enumeração dos provedores do validador.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.AssociatedValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Obtém os validadores para o modelo utilizando os metadados, os provedores do validador e uma lista de atributos.</summary>
      <returns>Os validadores para o modelo.</returns>
      <param name="metadata">Os metadados.</param>
      <param name="validatorProviders">Uma enumeração dos provedores do validador.</param>
      <param name="attributes">A lista de atributos.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidationFactory">
      <summary>Representa o método que cria uma instância de <see cref="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider">
      <summary>Representa uma implementação do <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /> de quais validadores de provedores para atributos que derivam de <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />. Também fornece um validador para tipos que implementam <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. Para dar suporte à validação do lado do cliente, você pode registrar adaptadores por meio dos métodos estáticos na classe ou fazendo com que seus atributos de validação implementem <see cref="T:System.Web.Http.Validation.IClientValidatable" />. A lógica para suporte IClientValidatable é implementada no <see cref="T:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator" />. </summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Obtém os validadores para o modelo utilizando os metadados, os atributos e o provedor do validador especificados.</summary>
      <returns>Os validadores para o modelo.</returns>
      <param name="metadata">Os metadados.</param>
      <param name="validatorProviders">Os provedores do validador.</param>
      <param name="attributes">Os atributos.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterAdapter(System.Type,System.Type)">
      <summary>Registra um adaptador para fornecer a validação do lado do cliente.</summary>
      <param name="attributeType">O tipo do atributo de validação.</param>
      <param name="adapterType">O tipo do adaptador.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterAdapterFactory(System.Type,System.Web.Http.Validation.Providers.DataAnnotationsModelValidationFactory)">
      <summary>Registra uma fábrica de adaptador para o provedor de validação.</summary>
      <param name="attributeType">O tipo do atributo.</param>
      <param name="factory">A fábrica que será usada para criar o objeto <see cref="T:System.Web.Http.Validation.ModelValidator" /> para o atributo especificado.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapter(System.Type)">
      <summary>Registra o adaptador padrão.</summary>
      <param name="adapterType">O tipo do adaptador.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultAdapterFactory(System.Web.Http.Validation.Providers.DataAnnotationsModelValidationFactory)">
      <summary>Registra a fábrica de adaptador padrão.</summary>
      <param name="factory">A fábrica que será usada para criar o objeto <see cref="T:System.Web.Http.Validation.ModelValidator" /> para o adaptador padrão.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapter(System.Type)">
      <summary>Registra o tipo de adaptador padrão para objetos que implementam <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. O tipo de adaptador deve derivar do <see cref="T:System.Web.Http.Validation.ModelValidator" /> e deve conter um construtor público que toma dois parâmetros de tipos <see cref="T:System.Web.Http.Metadata.ModelMetadata" /> e <see cref="T:System.Web.Http.Controllers.HttpActionContext" />. </summary>
      <param name="adapterType">O tipo do adaptador.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterDefaultValidatableObjectAdapterFactory(System.Web.Http.Validation.Providers.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Registra a fábrica de adaptador padrão para objetos que implementam <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. </summary>
      <param name="factory">A fábrica.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapter(System.Type,System.Type)">
      <summary>Registra um tipo de adaptador para o modelType em questão, que deve implementar <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. O tipo de adaptador deve derivar do <see cref="T:System.Web.Http.Validation.ModelValidator" /> e deve conter um construtor público que toma dois parâmetros de tipos <see cref="T:System.Web.Http.Metadata.ModelMetadata" /> e <see cref="T:System.Web.Http.Controllers.HttpActionContext" />. </summary>
      <param name="modelType">O tipo de modelo.</param>
      <param name="adapterType">O tipo do adaptador.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataAnnotationsModelValidatorProvider.RegisterValidatableObjectAdapterFactory(System.Type,System.Web.Http.Validation.Providers.DataAnnotationsValidatableObjectAdapterFactory)">
      <summary>Registra uma fábrica de adaptador para o modelType em questão, que deve implementar <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />. </summary>
      <param name="modelType">O tipo de modelo.</param>
      <param name="factory">A fábrica.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataAnnotationsValidatableObjectAdapterFactory">
      <summary>Fornece uma fábrica para validadores baseados em <see cref="T:System.ComponentModel.DataAnnotations.IValidatableObject" />.</summary>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider">
      <summary>Representa um provedor do validador para o modelo de membro de dados.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.DataMemberModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Obtém os validadores para o modelo.</summary>
      <returns>Os validadores para o modelo.</returns>
      <param name="metadata">Os metadados.</param>
      <param name="validatorProviders">Uma enumeração dos provedores do validador.</param>
      <param name="attributes">Uma lista de atributos.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider">
      <summary>Uma implementação do <see cref="T:System.Web.Http.Validation.ModelValidatorProvider" /> que fornece validadores que geram exceções quando o modelo é inválido.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider.#ctor">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.Collections.Generic.IEnumerable{System.Attribute})">
      <summary>Obtém uma lista de validadores associados a <see cref="T:System.Web.Http.Validation.Providers.InvalidModelValidatorProvider" />.</summary>
      <returns>A lista de validadores.</returns>
      <param name="metadata">Os metadados.</param>
      <param name="validatorProviders">Os provedores do validador.</param>
      <param name="attributes">A lista de atributos.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider">
      <summary>Representa o provedor do validador de modelo de membro necessário.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider.#ctor(System.Net.Http.Formatting.IRequiredMemberSelector)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider" />.</summary>
      <param name="requiredMemberSelector">O seletor de membros necessário.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Providers.RequiredMemberModelValidatorProvider.GetValidators(System.Web.Http.Metadata.ModelMetadata,System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Obtém o validador para o modelo de membro.</summary>
      <returns>O validador para o modelo de membro.</returns>
      <param name="metadata">Os metadados.</param>
      <param name="validatorProviders">Os provedores do validador.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator">
      <summary>Fornece um validador de modelo.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.ComponentModel.DataAnnotations.ValidationAttribute)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator" />.</summary>
      <param name="validatorProviders">Os provedores do validador.</param>
      <param name="attribute">O atributo de validação para o modelo.</param>
    </member>
    <member name="P:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.Attribute">
      <summary>Obtém ou define o atributo de validação para o validador do modelo.</summary>
      <returns>O atributo de validação para o validador do modelo.</returns>
    </member>
    <member name="P:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.IsRequired">
      <summary>Obtém um valor que indica se uma validação de modelo é necessária.</summary>
      <returns>verdadeiro se a validação de modelo for necessária; caso contrário, falso.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.DataAnnotationsModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Valida o modelo e retorna os erros de validação, se houver.</summary>
      <returns>Uma lista de mensagens de erro de validação para o modelo ou uma lista vazia se não ocorreram erros.</returns>
      <param name="metadata">Os metadados do modelo.</param>
      <param name="container">O contêiner para o modelo.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.ErrorModelValidator">
      <summary>Um <see cref="T:System.Web.Http.Validation.ModelValidator" /> para representar um erro.Este validador sempre gerará uma exceção, independentemente do valor de modelo real.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ErrorModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider},System.String)">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Validation.Validators.ErrorModelValidator" />.</summary>
      <param name="validatorProviders">A lista de provedores de validadores de modelo.</param>
      <param name="errorMessage">A mensagem de erro para a exceção.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ErrorModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Valida um objeto especificado.</summary>
      <returns>Uma lista de resultados de validação.</returns>
      <param name="metadata">Os metadados.</param>
      <param name="container">O contêiner.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.RequiredMemberModelValidator">
      <summary>Representa o <see cref="T:System.Web.Http.Validation.ModelValidator" /> para os membros necessários. </summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.RequiredMemberModelValidator.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Inicia uma nova instância da classe <see cref="T:System.Web.Http.Validation.Validators.RequiredMemberModelValidator" />.</summary>
      <param name="validatorProviders">Os provedores do validador.</param>
    </member>
    <member name="P:System.Web.Http.Validation.Validators.RequiredMemberModelValidator.IsRequired">
      <summary>Obtém ou define um valor que instrui o mecanismo de serialização de que o membro deve estar presente na validação.</summary>
      <returns>verdadeiro se o membro for necessário; caso contrário, falso.</returns>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.RequiredMemberModelValidator.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Valida o objeto.</summary>
      <returns>Uma lista de resultados de validação.</returns>
      <param name="metadata">Os metadados.</param>
      <param name="container">O contêiner.</param>
    </member>
    <member name="T:System.Web.Http.Validation.Validators.ValidatableObjectAdapter">
      <summary>Fornece um adaptador de objeto que pode ser validado.</summary>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ValidatableObjectAdapter.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.Validation.ModelValidatorProvider})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.Validation.Validators.ValidatableObjectAdapter" />.</summary>
      <param name="validatorProviders">O provedor de validação.</param>
    </member>
    <member name="M:System.Web.Http.Validation.Validators.ValidatableObjectAdapter.Validate(System.Web.Http.Metadata.ModelMetadata,System.Object)">
      <summary>Valida o objeto especificado.</summary>
      <returns>Uma lista de resultados de validação.</returns>
      <param name="metadata">Os metadados.</param>
      <param name="container">O contêiner.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.IEnumerableValueProvider">
      <summary>Representa a classe base para os provedores de valor, cujos valores vêm de uma coleção que implementa a interface <see cref="T:System.Collections.IEnumerable" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.IEnumerableValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Recupera as chaves do <paramref name="prefix" /> especificado.</summary>
      <returns>As chaves do <paramref name="prefix" /> especificado.</returns>
      <param name="prefix">O prefixo.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.IUriValueProviderFactory">
      <summary>Representa uma interface que é implementada por qualquer <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> que suporte a criação de uma <see cref="T:System.Web.Http.ValueProviders.IValueProvider" /> para acessar a <see cref="T:System.Uri" /> de uma <see cref="T:System.Net.Http.HttpRequestMessage" /> de entrada.</summary>
    </member>
    <member name="T:System.Web.Http.ValueProviders.IValueProvider">
      <summary>Define os métodos necessários para um provedor de valor no ASP.NET MVC.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.IValueProvider.ContainsPrefix(System.String)">
      <summary>Determina se o conjunto contém o prefixo especificado.</summary>
      <returns>verdadeiro se o conjunto contiver o prefixo especificado; caso contrário, falso.</returns>
      <param name="prefix">O prefixo a ser pesquisado.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.IValueProvider.GetValue(System.String)">
      <summary>Recupera um objeto de valor usando a chave especificada.</summary>
      <returns>O objeto de valor para a chave especificada, ou null se chave não for encontrada.</returns>
      <param name="key">A chave do objeto de valor a ser recuperado.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.ValueProviderAttribute">
      <summary> Este atributo é usado para especificar uma <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" /> personalizada. </summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderAttribute.#ctor(System.Type)">
      <summary>Inicializa uma nova instância de <see cref="T:System.Web.Http.ValueProviders.ValueProviderAttribute" />.</summary>
      <param name="valueProviderFactory">O tipo do associador de modelo</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderAttribute.#ctor(System.Type[])">
      <summary>Inicializa uma nova instância de <see cref="T:System.Web.Http.ValueProviders.ValueProviderAttribute" />.</summary>
      <param name="valueProviderFactories">Uma matriz dos tipos de associadores de modelo.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
      <summary>Obtém as fábricas do provedor de valor.</summary>
      <returns>A coleção das fábricas do provedor de valor.</returns>
      <param name="configuration">Um objeto de configuração.</param>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderAttribute.ValueProviderFactoryTypes">
      <summary>Obtém os tipos de objeto retornados pela fábrica do provedor de valor.</summary>
      <returns>A coleção de tipos.</returns>
    </member>
    <member name="T:System.Web.Http.ValueProviders.ValueProviderFactory">
      <summary>Representa uma fábrica para a criação de objetos de provedor de valor.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderFactory.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ValueProviders.ValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Retorna um objeto de provedor de valor para o contexto de controlador especificado.</summary>
      <returns>Um objeto de provedor de valor.</returns>
      <param name="actionContext">Um objeto que encapsula informações sobre a solicitação HTTP atual.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.ValueProviderResult">
      <summary>Representa o resultado da associação de um valor (por exemplo, a partir de uma postagem de formulário ou cadeia de consulta) a uma propriedade de argumento de método de ação ou a um argumento em si.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ValueProviders.ValueProviderResult" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.#ctor(System.Object,System.String,System.Globalization.CultureInfo)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ValueProviders.ValueProviderResult" />.</summary>
      <param name="rawValue">O valor bruto.</param>
      <param name="attemptedValue">O valor de tentativa.</param>
      <param name="culture">A cultura.</param>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderResult.AttemptedValue">
      <summary>Obtém ou define o valor bruto que é convertido em uma cadeia de caracteres para exibição.</summary>
      <returns>O valor bruto que é convertido para uma cadeia de caracteres para exibição.</returns>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.ConvertTo(System.Type)">
      <summary>Converte o valor que é encapsulado por este resultado para o tipo especificado.</summary>
      <returns>O valor convertido.</returns>
      <param name="type">O tipo de destino.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.ValueProviderResult.ConvertTo(System.Type,System.Globalization.CultureInfo)">
      <summary>Converte o valor que é encapsulado por este resultado para o tipo especificado usando-se as informações de cultura especificadas.</summary>
      <returns>O valor convertido.</returns>
      <param name="type">O tipo de destino.</param>
      <param name="culture">A cultura a ser usada na conversão.</param>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderResult.Culture">
      <summary>Obtém ou define a cultura.</summary>
      <returns>A cultura.</returns>
    </member>
    <member name="P:System.Web.Http.ValueProviders.ValueProviderResult.RawValue">
      <summary>Obtém ou define o valor bruto que é fornecido pelo provedor de valor.</summary>
      <returns>O valor bruto que é fornecido pelo provedor de valor.</returns>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.CompositeValueProvider">
      <summary>Representa um provedor de valor cujos valores vêm de uma lista de provedores de valor que implementa a interface <see cref="T:System.Collections.IEnumerable" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ValueProviders.Providers.CompositeValueProvider" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.#ctor(System.Collections.Generic.IList{System.Web.Http.ValueProviders.IValueProvider})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ValueProviders.Providers.CompositeValueProvider" />.</summary>
      <param name="list">A lista de provedores de valor.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.ContainsPrefix(System.String)">
      <summary>Determina se a coleção contém o <paramref name="prefix" /> especificado.</summary>
      <returns>verdadeiro se a coleção contiver o <paramref name="prefix" /> especificado; caso contrário, falso.</returns>
      <param name="prefix">O prefixo a ser pesquisado.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Recupera as chaves do <paramref name="prefix" /> especificado.</summary>
      <returns>As chaves do <paramref name="prefix" /> especificado.</returns>
      <param name="prefix">O prefixo a partir do qual as chaves são recuperadas.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.GetValue(System.String)">
      <summary>Recupera um objeto de valor usando a <paramref name="key" /> especificada.</summary>
      <returns>O objeto de valor para a <paramref name="key" /> especificada.</returns>
      <param name="key">A chave do objeto de valor a ser recuperado.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.InsertItem(System.Int32,System.Web.Http.ValueProviders.IValueProvider)">
      <summary>Insere um elemento na coleção no índice especificado.</summary>
      <param name="index">O índice baseado em zero em que o <paramref name="item" /> deve ser inserido.</param>
      <param name="item">O objeto a ser inserido.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProvider.SetItem(System.Int32,System.Web.Http.ValueProviders.IValueProvider)">
      <summary>Substitui o elemento no índice especificado.</summary>
      <param name="index">O índice baseado em zero do elemento a ser substituído.</param>
      <param name="item">O novo valor do elemento no índice especificado.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory">
      <summary>Representa uma fábrica para criar uma lista de objetos de provedor de valor.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory.#ctor(System.Collections.Generic.IEnumerable{System.Web.Http.ValueProviders.ValueProviderFactory})">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory" />.</summary>
      <param name="factories">A coleção de fábricas do provedor de valor.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.CompositeValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Recupera uma lista de objetos de provedor de valor para o contexto de controlador especificado.</summary>
      <returns>A lista de objetos de provedor de valor para o contexto de controlador especificado.</returns>
      <param name="actionContext">Um objeto que encapsula informações sobre a solicitação HTTP atual.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider">
      <summary>Um provedor de valor para os pares nome/valor.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Globalization.CultureInfo)"></member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Globalization.CultureInfo)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider" />.</summary>
      <param name="values">Os pares nome/valor do provedor.</param>
      <param name="culture">A cultura usada para os pares nome/valor.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.#ctor(System.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}},System.Globalization.CultureInfo)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider" /> usando um delegado de função para fornecer os pares nome/valor.</summary>
      <param name="valuesFactory">Um delegado de função que retorna uma coleção de pares nome/valor.</param>
      <param name="culture">A cultura usada para os pares nome/valor.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.ContainsPrefix(System.String)">
      <summary>Determina se o conjunto contém o prefixo especificado.</summary>
      <returns>verdadeiro se o conjunto contiver o prefixo especificado; caso contrário, falso.</returns>
      <param name="prefix">O prefixo a ser pesquisado.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.GetKeysFromPrefix(System.String)">
      <summary>Obtém as chaves de um prefixo.</summary>
      <returns>As chaves.</returns>
      <param name="prefix">O prefixo.</param>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.NameValuePairsValueProvider.GetValue(System.String)">
      <summary>Recupera um objeto de valor usando a chave especificada.</summary>
      <returns>O objeto de valor para a chave especificada.</returns>
      <param name="key">A chave do objeto de valor a ser recuperado.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProvider">
      <summary>Representa um provedor de valor para cadeias de consulta contidas em um objeto de <see cref="T:System.Collections.Specialized.NameValueCollection" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.QueryStringValueProvider.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Globalization.CultureInfo)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProvider" />.</summary>
      <param name="actionContext">Um objeto que encapsula informações sobre a solicitação HTTP atual.</param>
      <param name="culture">Um objeto que contém informações sobre a cultura de destino.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory">
      <summary>Representa uma classe responsável pela criação de uma nova instância de um objeto de provedor de valor de cadeia de consulta.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.QueryStringValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Recupera um objeto de provedor de valor para o contexto de controlador especificado.</summary>
      <returns>Um objeto de provedor de valor de cadeia de consulta.</returns>
      <param name="actionContext">Um objeto que encapsula informações sobre a solicitação HTTP atual.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProvider">
      <summary>Representa um provedor de valor para dados de rota contidos em um objeto que implementa a interface IDictionary (Of TKey, TValue).</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.RouteDataValueProvider.#ctor(System.Web.Http.Controllers.HttpActionContext,System.Globalization.CultureInfo)">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProvider" />.</summary>
      <param name="actionContext">Um objeto que contém informações sobre a solicitação HTTP.</param>
      <param name="culture">Um objeto que contém informações sobre a cultura de destino.</param>
    </member>
    <member name="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory">
      <summary>Representa uma fábrica para a criação de objetos de provedor de valor de dados de rota.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory.#ctor">
      <summary>Inicializa uma nova instância da classe <see cref="T:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory" />.</summary>
    </member>
    <member name="M:System.Web.Http.ValueProviders.Providers.RouteDataValueProviderFactory.GetValueProvider(System.Web.Http.Controllers.HttpActionContext)">
      <summary>Recupera um objeto de provedor de valor para o contexto de controlador especificado.</summary>
      <returns>Um objeto de provedor de valor.</returns>
      <param name="actionContext">Um objeto que encapsula informações sobre a solicitação HTTP atual.</param>
    </member>
  </members>
</doc>