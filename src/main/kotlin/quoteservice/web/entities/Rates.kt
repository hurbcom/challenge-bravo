package quoteservice.web.entities

import quoteservice.repositories.models.Rate
import java.math.BigDecimal
import kotlin.reflect.full.declaredMemberProperties

data class Rates (
    val AED: String,
    val AFN: String,
    val ALL: String,
    val AMD: String,
    val ANG: String,
    val AOA: String,
    val ARS: String,
    val AUD: String,
    val AWG: String,
    val AZN: String,
    val BAM: String,
    val BBD: String,
    val BDT: String,
    val BGN: String,
    val BHD: String,
    val BIF: String,
    val BMD: String,
    val BND: String,
    val BOB: String,
    val BRL: String,
    val BSD: String,
    val BTN: String,
    val BWP: String,
    val BYN: String,
    val BZD: String,
    val CAD: String,
    val CDF: String,
    val CHF: String,
    val CLF: String,
    val CLP: String,
    val CNH: String,
    val CNY: String,
    val COP: String,
    val CRC: String,
    val CUC: String,
    val CUP: String,
    val CVE: String,
    val CZK: String,
    val DJF: String,
    val DKK: String,
    val DOP: String,
    val DZD: String,
    val EGP: String,
    val ERN: String,
    val ETB: String,
    val EUR: String,
    val FJD: String,
    val FKP: String,
    val GBP: String,
    val GEL: String,
    val GGP: String,
    val GHS: String,
    val GIP: String,
    val GMD: String,
    val GNF: String,
    val GTQ: String,
    val GYD: String,
    val HKD: String,
    val HNL: String,
    val HRK: String,
    val HTG: String,
    val HUF: String,
    val IDR: String,
    val ILS: String,
    val IMP: String,
    val INR: String,
    val IQD: String,
    val IRR: String,
    val ISK: String,
    val JEP: String,
    val JMD: String,
    val JOD: String,
    val JPY: String,
    val KES: String,
    val KGS: String,
    val KHR: String,
    val KMF: String,
    val KPW: String,
    val KRW: String,
    val KWD: String,
    val KYD: String,
    val KZT: String,
    val LAK: String,
    val LBP: String,
    val LKR: String,
    val LRD: String,
    val LSL: String,
    val LYD: String,
    val MAD: String,
    val MDL: String,
    val MGA: String,
    val MKD: String,
    val MMK: String,
    val MNT: String,
    val MOP: String,
    val MRU: String,
    val MUR: String,
    val MVR: String,
    val MWK: String,
    val MXN: String,
    val MYR: String,
    val MZN: String,
    val NAD: String,
    val NGN: String,
    val NIO: String,
    val NOK: String,
    val NPR: String,
    val NZD: String,
    val OMR: String,
    val PAB: String,
    val PEN: String,
    val PGK: String,
    val PHP: String,
    val PKR: String,
    val PLN: String,
    val PYG: String,
    val QAR: String,
    val RON: String,
    val RSD: String,
    val RUB: String,
    val RWF: String,
    val SAR: String,
    val SBD: String,
    val SCR: String,
    val SDG: String,
    val SEK: String,
    val SGD: String,
    val SHP: String,
    val SLL: String,
    val SOS: String,
    val SRD: String,
    val SSP: String,
    val STD: String,
    val STN: String,
    val SVC: String,
    val SYP: String,
    val SZL: String,
    val THB: String,
    val TJS: String,
    val TMT: String,
    val TND: String,
    val TOP: String,
    val TRY: String,
    val TTD: String,
    val TWD: String,
    val TZS: String,
    val UAH: String,
    val UGX: String,
    val USD: String,
    val UYU: String,
    val UZS: String,
    val VES: String,
    val VND: String,
    val VUV: String,
    val WST: String,
    val XAF: String,
    val XAG: String,
    val XAU: String,
    val XCD: String,
    val XDR: String,
    val XOF: String,
    val XPD: String,
    val XPF: String,
    val XPT: String,
    val YER: String,
    val ZAR: String,
    val ZMW: String,
    val ZWL: String
) {
    fun convert(): List<Rate> {
        var convertedRates = mutableListOf<Rate>()

        Rates::class.declaredMemberProperties.forEach {
            val fromUsd = it.get(this).toString().toBigDecimal()
            val toUsd = BigDecimal(1.0).setScale(SCALE, BigDecimal.ROUND_HALF_EVEN) / fromUsd.setScale(
                SCALE, BigDecimal.ROUND_HALF_EVEN
            )
            convertedRates.add(Rate(symbol = it.name, toUsd = toUsd.toString(), fromUsd = fromUsd.toString()))
        }

        return convertedRates
    }

    companion object {
        const val SCALE = 6
    }
}
